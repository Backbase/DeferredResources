apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'org.jetbrains.kotlin.plugin.parcelize'
apply plugin: 'dev.drewhamilton.poko'

ext {
    artifactName = 'deferred-resources-compose-adapter'
    publishedDescription = "Adapters to resolve Deferred Resources types for use with Jetpack Compose UI."
}

if (rootProject.ext.libraryVersion.endsWith("SNAPSHOT")) {
    apply from: "../publish.gradle"
}

android {
    compileSdkVersion rootProject.ext.targetSdk
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.targetSdk
        versionName version

        consumerProguardFiles 'consumer-rules.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        useIR = true
        freeCompilerArgs += ['-Xexplicit-api=strict', '-Xopt-in=kotlin.RequiresOptIn']
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidx.compose.get()
    }

    packagingOptions {
        // Some of the coroutines-test files cause conflicts. Exclude them to enable our test APK to build (has no
        //  effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    api(libs.androidx.compose.runtime)
    api(project(':deferred-resources'))

    implementation(libs.accompanist.imageLoading.core)
    implementation(libs.androidx.appCompat)
    implementation(libs.androidx.compose.ui)

    androidTestImplementation(libs.androidx.compose.material)
    androidTestImplementation(libs.androidx.compose.uiTest)
    androidTestImplementation(libs.poko.annotations)
}
