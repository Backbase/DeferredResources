name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        api-level: [ 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Install JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      - name: Build
        run: ./gradlew clean build -PciApiLevel=${{ matrix.api-level }} --stacktrace
      - name: Report Detekt results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ github.workspace }}/build/detekt/sarif
          checkout_path: ${{ github.workspace }}
      - name: Emulator cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: Create emulator and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck -PciApiLevel=${{ matrix.api-level }} --stacktrace
      - name: Publish test results
        uses: mikepenz/action-junit-report@v1.2.1
        if: success() || failure()
        with:
          check_name: Android test report for API ${{ matrix.api-level }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/build/outputs/androidTest-results/connected/**/TEST-*.xml"

  scan_for_secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          # Allows Gitleaks to scan the commit history of a whole PR:
          fetch-depth: '0'
      - name: Fetch Gitleaks rules
        uses: wei/wget@v1
        with:
          args: -O .rules.toml https://raw.githubusercontent.com/fnxpt/gitleaks-action/rules/.rules.toml
      - name: Gitleaks
        uses: zricethezav/gitleaks-action@v1.3.0
        with:
          config-path: .rules.toml
