{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Deferred Resources Deferred Resources is an Android library that decouples resource declaration (without Context) from resource resolution (with Context). This allows the resolver (Activity, Fragment, or View) to be agnostic to the source (standard resources, attributes, or values fetched from an API), and allows repository/configuration layers to remain ignorant of Android's Context. Examples In the logic layer, declare the resource values however you like, without worrying about their resolution or about Context: // Resource/attribute-based text and color: class LocalViewModel : MyViewModel { override fun getText (): DeferredText = DeferredText . Resource ( R . string . someText ) override fun getTextColor (): DeferredColor = DeferredColor . Attribute ( R . attr . colorOnBackground ) override fun getTextSize (): DeferredDimension = DeferredDimension . Attribute ( R . attr . bodyTextSize ) } // API-based text and color: class RemoteViewModel ( private val api : Api ) : MyViewModel { override fun getText (): DeferredText = DeferredText . Constant ( api . fetchText ()) override fun getTextColor (): DeferredColor = DeferredColor . Constant ( api . fetchTextColor ()) override fun getTextSize (): DeferredDimension = DeferredDimension . Constant ( api . fetchTextSize (), DeferredDimension . Constant . Unit . SP ) } In the view layer, resolve a deferred resource to display it: val text : DeferredText = viewModel . getText () val textColor : DeferredColor = viewModel . getTextColor () val textSize : DeferredDimension = viewModel . getTextSize () textView . text = text . resolve ( context ) textView . setTextColor ( textColor . resolve ( context )) textView . setTextSize ( TypedValue . COMPLEX_UNIT_PX , deferredSize . resolveExact ( context )) With view extensions, this is even simpler. The View's own Context is used to resolve any deferred resource types: textView . setText ( viewModel . getText ()) textView . setTextColor ( viewModel . getTextColor ()) textView . setTextSize ( viewModel . getTextSize ()) Text types Various types of text are supported: DeferredText for basic text, DeferredFormattedString for formatted text, DeferredPlurals for pluralized text, and DeferredFormattedPlurals for formatted, pluralized text. Additionally, it's possible to \"partially resolve\" these more complex text types to be more basic without yet having a Context . val deferredFormattedPlurals = DeferredFormattedPlurals . Resource ( R . plurals . formatted_plurals ) // If you have the format args, quantity, and Context: val string : String = deferredFormattedPlurals . resolve ( context , 5 , \"million\" ) // If you have the format args and quantity, but no Context: val deferredText : DeferredText = deferredFormattedPlurals . withQuantityAndFormatArgs ( 5 , \"million\" ) // If you have only the quantity: val deferredFormattedString : DeferredFormattedString = deferredFormattedPlurals . withQuantity ( 5 ) // If you have only the format args: val deferredPlurals : DeferredPlurals = deferredFormattedPlurals . withFormatArgs ( \"million\" ) All text-related types can eventually be converted to DeferredText through similar extensions. Jetpack Compose UI For each Deferred Resources type, the experimental deferred-resource-compose-adapter library offers a remember* function to resolve the Deferred item to a standard Compose UI type. val color : Color = rememberResolvedColor ( deferredColor ) val size : Dp = rememberResolvedDp ( deferredDimension ) val icon : Painter = rememberResolvedPainter ( deferredDrawable ) All of these APIs are marked as @ExperimentalComposeAdapter and should not be considered stable. Their behavior and binary compatibility are not guaranteed. Import To use Deferred Resources, add the library as a dependency to your Android module: dependencies { implementation \"com.backbase.oss.deferredresources:deferred-resources:$version\" implementation \"com.backbase.oss.deferredresources:deferred-resources-view-extensions:$version\" implementation \"com.backbase.oss.deferredresources:deferred-resources-compose-adapter:$version\" }","title":"Overview"},{"location":"#deferred-resources","text":"Deferred Resources is an Android library that decouples resource declaration (without Context) from resource resolution (with Context). This allows the resolver (Activity, Fragment, or View) to be agnostic to the source (standard resources, attributes, or values fetched from an API), and allows repository/configuration layers to remain ignorant of Android's Context.","title":"Deferred Resources"},{"location":"#examples","text":"In the logic layer, declare the resource values however you like, without worrying about their resolution or about Context: // Resource/attribute-based text and color: class LocalViewModel : MyViewModel { override fun getText (): DeferredText = DeferredText . Resource ( R . string . someText ) override fun getTextColor (): DeferredColor = DeferredColor . Attribute ( R . attr . colorOnBackground ) override fun getTextSize (): DeferredDimension = DeferredDimension . Attribute ( R . attr . bodyTextSize ) } // API-based text and color: class RemoteViewModel ( private val api : Api ) : MyViewModel { override fun getText (): DeferredText = DeferredText . Constant ( api . fetchText ()) override fun getTextColor (): DeferredColor = DeferredColor . Constant ( api . fetchTextColor ()) override fun getTextSize (): DeferredDimension = DeferredDimension . Constant ( api . fetchTextSize (), DeferredDimension . Constant . Unit . SP ) } In the view layer, resolve a deferred resource to display it: val text : DeferredText = viewModel . getText () val textColor : DeferredColor = viewModel . getTextColor () val textSize : DeferredDimension = viewModel . getTextSize () textView . text = text . resolve ( context ) textView . setTextColor ( textColor . resolve ( context )) textView . setTextSize ( TypedValue . COMPLEX_UNIT_PX , deferredSize . resolveExact ( context )) With view extensions, this is even simpler. The View's own Context is used to resolve any deferred resource types: textView . setText ( viewModel . getText ()) textView . setTextColor ( viewModel . getTextColor ()) textView . setTextSize ( viewModel . getTextSize ())","title":"Examples"},{"location":"#text-types","text":"Various types of text are supported: DeferredText for basic text, DeferredFormattedString for formatted text, DeferredPlurals for pluralized text, and DeferredFormattedPlurals for formatted, pluralized text. Additionally, it's possible to \"partially resolve\" these more complex text types to be more basic without yet having a Context . val deferredFormattedPlurals = DeferredFormattedPlurals . Resource ( R . plurals . formatted_plurals ) // If you have the format args, quantity, and Context: val string : String = deferredFormattedPlurals . resolve ( context , 5 , \"million\" ) // If you have the format args and quantity, but no Context: val deferredText : DeferredText = deferredFormattedPlurals . withQuantityAndFormatArgs ( 5 , \"million\" ) // If you have only the quantity: val deferredFormattedString : DeferredFormattedString = deferredFormattedPlurals . withQuantity ( 5 ) // If you have only the format args: val deferredPlurals : DeferredPlurals = deferredFormattedPlurals . withFormatArgs ( \"million\" ) All text-related types can eventually be converted to DeferredText through similar extensions.","title":"Text types"},{"location":"#jetpack-compose-ui","text":"For each Deferred Resources type, the experimental deferred-resource-compose-adapter library offers a remember* function to resolve the Deferred item to a standard Compose UI type. val color : Color = rememberResolvedColor ( deferredColor ) val size : Dp = rememberResolvedDp ( deferredDimension ) val icon : Painter = rememberResolvedPainter ( deferredDrawable ) All of these APIs are marked as @ExperimentalComposeAdapter and should not be considered stable. Their behavior and binary compatibility are not guaranteed.","title":"Jetpack Compose UI"},{"location":"#import","text":"To use Deferred Resources, add the library as a dependency to your Android module: dependencies { implementation \"com.backbase.oss.deferredresources:deferred-resources:$version\" implementation \"com.backbase.oss.deferredresources:deferred-resources-view-extensions:$version\" implementation \"com.backbase.oss.deferredresources:deferred-resources-compose-adapter:$version\" }","title":"Import"},{"location":"changelog/","text":"CHANGELOG 1.6.1 2023-04-06 Compile with Kotlin 1.8.10 and Android SDK 33. Improve superscript and subscript rendering in DeferredText Compose adapter. 1.6.0 2021-09-29 Introduce the deferred-resources-animation-lottie artifact for supporting Lottie animations. This provides APIs for resolving existing Deferred Drawable types into a LottieDrawable . Compile with Kotlin 1.5.21 and AndroidX Core-KTX 1.5.0. 1.5.0 2021-07-03 Introduce the deferred-resources-compose-adapter artifact for Jetpack Compose UI. This provides APIs for resolving existing Deferred Resources types in a Compose UI context. For example, rememberResolvedColor resolves a DeferredColor as an androidx.compose.ui.graphics.Color . Compile with Kotlin 1.5.10 and AndroidX Core-KTX 1.5.0. 1.4.0 2021-04-23 Add the ability to define a DeferredDimension.Constant with DP and SP units, in addition to the default PX . 1.3.0 2021-02-19 Add a number of Parcelable deferred types, such as ParcelableDeferredText and ParcelableDeferredColor . Ensure each concrete deferred type shipped in this library, such as DeferredText.Constant and DeferredText.Resource , implements a Parcelable parent interface. DeferredDrawable and DeferredTypeface are the only types without Parcelable options, because their resolved types are also not Parcelable . 1.2.1 2021-01-16 Compiled with Kotlin 1.4.21. 1.2.0 2020-11-04 Introduce DeferredDrawable.Attribute to support drawable attribute resolution. 1.1.0 2020-10-28 Introduce SdkIntDeferredColor , a DeferredColor implementation that delegates to different DeferredColor sources depending on the Android OS runtime version. Add a few extension functions for accessibility to the view extensions library, including setContentDescription . Use AppCompat to improve DeferredColor and DeferredDrawable implementations on Android OS versions < 23. In particular, default DeferredColor implementations can resolve attribute-backed color selectors, and default DeferredDrawable implementations can resolve vector drawables and tints correctly. Compile with Kotlin 1.4.10 and publish the source code in explicit mode . Target Android SDK 30. 1.0.0 2020-07-29 \ud83d\ude80 Official stable release! Add DeferredColor.resolveToStateList to support resolving color <selector> elements from XML resources and attributes. 0.5.1 2020-07-22 Update internal DeferredColor.Resource and DeferredColor.Attribute logic to resolve the default color of color selector resources instead of crashing. 0.5.0 2020-07-14 Breaking change : Update DeferredDrawable.Resource's transformations constructor parameter to receive the resolving Context as a parameter. This breaks binary compatibility by removing constructors with a Function1 parameter in their signature (replaced by a Function2 parameter). This also breaks source compatibility for Java consumers but not for Kotlin consumers. Add deferred-resources-view-extensions to simplify use of Deferred Resources with Views. Basic extensions are provided for View, TextView, and ImageView. Add DeferredColorWithAlpha along with a corresponding withAlpha extension on DeferredColor , to make alpha transformations on unresolved DeferredColor s simple. 0.4.0 2020-06-23 Add DeferredDimension.Attribute to support dimension attribute resolution. Add DeferredText.resolveToString as a convenience for converting the resolve CharSequence to a string. Update minimum supported Java version to Java 8. 0.3.1 2020-06-17 Add the @Px annotation to the integer pixel value parameter of DeferredDimension.Constant 's convenience constructor. 0.3.0 2020-06-09 Add a text package with various text helpers allowing conversion formatted and/or pluralized text and regular deferred text when partial resolution information is known (i.e. format arguments and/or quantity). Add DeferredColorDrawable as a convenience for deferred creation of a solid-color Drawable. Add a convenience constructor for parsing a color string to create a DeferredColor.Constant . 0.2.0 2020-05-22 Add DeferredTypeface , DeferredIntegerArray , and DeferredTextArray . 0.1.0 2020-05-15 Initial preview release. Declare booleans, colors, dimensions, drawables, integers, plurals, and text from resources or code without a Context, relying on the consumer to resolve them.","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"CHANGELOG"},{"location":"changelog/#161","text":"2023-04-06 Compile with Kotlin 1.8.10 and Android SDK 33. Improve superscript and subscript rendering in DeferredText Compose adapter.","title":"1.6.1"},{"location":"changelog/#160","text":"2021-09-29 Introduce the deferred-resources-animation-lottie artifact for supporting Lottie animations. This provides APIs for resolving existing Deferred Drawable types into a LottieDrawable . Compile with Kotlin 1.5.21 and AndroidX Core-KTX 1.5.0.","title":"1.6.0"},{"location":"changelog/#150","text":"2021-07-03 Introduce the deferred-resources-compose-adapter artifact for Jetpack Compose UI. This provides APIs for resolving existing Deferred Resources types in a Compose UI context. For example, rememberResolvedColor resolves a DeferredColor as an androidx.compose.ui.graphics.Color . Compile with Kotlin 1.5.10 and AndroidX Core-KTX 1.5.0.","title":"1.5.0"},{"location":"changelog/#140","text":"2021-04-23 Add the ability to define a DeferredDimension.Constant with DP and SP units, in addition to the default PX .","title":"1.4.0"},{"location":"changelog/#130","text":"2021-02-19 Add a number of Parcelable deferred types, such as ParcelableDeferredText and ParcelableDeferredColor . Ensure each concrete deferred type shipped in this library, such as DeferredText.Constant and DeferredText.Resource , implements a Parcelable parent interface. DeferredDrawable and DeferredTypeface are the only types without Parcelable options, because their resolved types are also not Parcelable .","title":"1.3.0"},{"location":"changelog/#121","text":"2021-01-16 Compiled with Kotlin 1.4.21.","title":"1.2.1"},{"location":"changelog/#120","text":"2020-11-04 Introduce DeferredDrawable.Attribute to support drawable attribute resolution.","title":"1.2.0"},{"location":"changelog/#110","text":"2020-10-28 Introduce SdkIntDeferredColor , a DeferredColor implementation that delegates to different DeferredColor sources depending on the Android OS runtime version. Add a few extension functions for accessibility to the view extensions library, including setContentDescription . Use AppCompat to improve DeferredColor and DeferredDrawable implementations on Android OS versions < 23. In particular, default DeferredColor implementations can resolve attribute-backed color selectors, and default DeferredDrawable implementations can resolve vector drawables and tints correctly. Compile with Kotlin 1.4.10 and publish the source code in explicit mode . Target Android SDK 30.","title":"1.1.0"},{"location":"changelog/#100","text":"2020-07-29 \ud83d\ude80 Official stable release! Add DeferredColor.resolveToStateList to support resolving color <selector> elements from XML resources and attributes.","title":"1.0.0"},{"location":"changelog/#051","text":"2020-07-22 Update internal DeferredColor.Resource and DeferredColor.Attribute logic to resolve the default color of color selector resources instead of crashing.","title":"0.5.1"},{"location":"changelog/#050","text":"2020-07-14 Breaking change : Update DeferredDrawable.Resource's transformations constructor parameter to receive the resolving Context as a parameter. This breaks binary compatibility by removing constructors with a Function1 parameter in their signature (replaced by a Function2 parameter). This also breaks source compatibility for Java consumers but not for Kotlin consumers. Add deferred-resources-view-extensions to simplify use of Deferred Resources with Views. Basic extensions are provided for View, TextView, and ImageView. Add DeferredColorWithAlpha along with a corresponding withAlpha extension on DeferredColor , to make alpha transformations on unresolved DeferredColor s simple.","title":"0.5.0"},{"location":"changelog/#040","text":"2020-06-23 Add DeferredDimension.Attribute to support dimension attribute resolution. Add DeferredText.resolveToString as a convenience for converting the resolve CharSequence to a string. Update minimum supported Java version to Java 8.","title":"0.4.0"},{"location":"changelog/#031","text":"2020-06-17 Add the @Px annotation to the integer pixel value parameter of DeferredDimension.Constant 's convenience constructor.","title":"0.3.1"},{"location":"changelog/#030","text":"2020-06-09 Add a text package with various text helpers allowing conversion formatted and/or pluralized text and regular deferred text when partial resolution information is known (i.e. format arguments and/or quantity). Add DeferredColorDrawable as a convenience for deferred creation of a solid-color Drawable. Add a convenience constructor for parsing a color string to create a DeferredColor.Constant .","title":"0.3.0"},{"location":"changelog/#020","text":"2020-05-22 Add DeferredTypeface , DeferredIntegerArray , and DeferredTextArray .","title":"0.2.0"},{"location":"changelog/#010","text":"2020-05-15 Initial preview release. Declare booleans, colors, dimensions, drawables, integers, plurals, and text from resources or code without a Context, relying on the consumer to resolve them.","title":"0.1.0"},{"location":"contributing/","text":"Contributing If you find a bug or would like to request a feature, please file an issue . If you would like to contribute a documentation or code change, you can do so through GitHub by forking the repository and sending a pull request. Code contributions Get working code on a personal branch with tests passing before you submit a PR. You must have an Android device connected to run tests. ./gradlew clean build connectedCheck If you change the public API by breaking it or adding to it, the build will fail. Breaking public API changes will generally not be accepted, but additions to the public API may be. If the API change is intentional, run the following command and include the .api file changes in the PR: ./gradlew apiDump When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. If you're using Android Studio or IntelliJ IDEA, the project code style definitions are included in the project. We squash all pull requests on merge.","title":"Contributing"},{"location":"contributing/#contributing","text":"If you find a bug or would like to request a feature, please file an issue . If you would like to contribute a documentation or code change, you can do so through GitHub by forking the repository and sending a pull request.","title":"Contributing"},{"location":"contributing/#code-contributions","text":"Get working code on a personal branch with tests passing before you submit a PR. You must have an Android device connected to run tests. ./gradlew clean build connectedCheck If you change the public API by breaking it or adding to it, the build will fail. Breaking public API changes will generally not be accepted, but additions to the public API may be. If the API change is intentional, run the following command and include the .api file changes in the PR: ./gradlew apiDump When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. If you're using Android Studio or IntelliJ IDEA, the project code style definitions are included in the project. We squash all pull requests on merge.","title":"Code contributions"},{"location":"1.x/","text":"title: All modules: - Deferred Resources / All modules: Name deferred-resources-view-extensions deferred-resources-compose-adapter deferred-resources-animation-lottie deferred-resources","title":"Index"},{"location":"1.x/#title-all-modules-deferred-resources","text":"/","title":"title: All modules:   - Deferred Resources"},{"location":"1.x/#all-modules","text":"Name deferred-resources-view-extensions deferred-resources-compose-adapter deferred-resources-animation-lottie deferred-resources","title":"All modules:"},{"location":"1.x/deferred-resources/","text":"// deferred-resources deferred-resources Packages Name com.backbase.deferredresources com.backbase.deferredresources.bool com.backbase.deferredresources.color com.backbase.deferredresources.dimension com.backbase.deferredresources.drawable com.backbase.deferredresources.integer com.backbase.deferredresources.text","title":"deferred-resources"},{"location":"1.x/deferred-resources/#deferred-resources","text":"","title":"deferred-resources"},{"location":"1.x/deferred-resources/#packages","text":"Name com.backbase.deferredresources com.backbase.deferredresources.bool com.backbase.deferredresources.color com.backbase.deferredresources.dimension com.backbase.deferredresources.drawable com.backbase.deferredresources.integer com.backbase.deferredresources.text","title":"Packages"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/","text":"// deferred-resources / com.backbase.deferredresources Package com.backbase.deferredresources Types Name Summary DeferredBoolean [androidJvm] Content interface DeferredBoolean More info A wrapper for resolving a boolean on demand. DeferredColor [androidJvm] Content interface DeferredColor More info A wrapper for resolving a ColorInt color on demand. DeferredDimension [androidJvm] Content interface DeferredDimension More info A wrapper for resolving an integer dimension on demand. DeferredDrawable [androidJvm] Content interface DeferredDrawable More info A wrapper for resolving a Drawable on demand. DeferredFormattedPlurals [androidJvm] Content interface DeferredFormattedPlurals More info A wrapper for resolving format-able pluralized text on demand. DeferredFormattedString [androidJvm] Content interface DeferredFormattedString More info A wrapper for resolving a formatted string on demand. DeferredInteger [androidJvm] Content interface DeferredInteger More info A wrapper for resolving an integer on demand. DeferredIntegerArray [androidJvm] Content interface DeferredIntegerArray More info A wrapper for resolving an integer array on demand. DeferredPlurals [androidJvm] Content interface DeferredPlurals More info A wrapper for resolving pluralized text on demand. DeferredText [androidJvm] Content interface DeferredText More info A wrapper for resolving text on demand. DeferredTextArray [androidJvm] Content interface DeferredTextArray More info A wrapper for resolving a text array on demand. DeferredTypeface [androidJvm] Content interface DeferredTypeface More info A wrapper for resolving a typeface on demand.","title":"Package com.backbase.deferredresources   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/#package-combackbasedeferredresources","text":"","title":"Package com.backbase.deferredresources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/#types","text":"Name Summary DeferredBoolean [androidJvm] Content interface DeferredBoolean More info A wrapper for resolving a boolean on demand. DeferredColor [androidJvm] Content interface DeferredColor More info A wrapper for resolving a ColorInt color on demand. DeferredDimension [androidJvm] Content interface DeferredDimension More info A wrapper for resolving an integer dimension on demand. DeferredDrawable [androidJvm] Content interface DeferredDrawable More info A wrapper for resolving a Drawable on demand. DeferredFormattedPlurals [androidJvm] Content interface DeferredFormattedPlurals More info A wrapper for resolving format-able pluralized text on demand. DeferredFormattedString [androidJvm] Content interface DeferredFormattedString More info A wrapper for resolving a formatted string on demand. DeferredInteger [androidJvm] Content interface DeferredInteger More info A wrapper for resolving an integer on demand. DeferredIntegerArray [androidJvm] Content interface DeferredIntegerArray More info A wrapper for resolving an integer array on demand. DeferredPlurals [androidJvm] Content interface DeferredPlurals More info A wrapper for resolving pluralized text on demand. DeferredText [androidJvm] Content interface DeferredText More info A wrapper for resolving text on demand. DeferredTextArray [androidJvm] Content interface DeferredTextArray More info A wrapper for resolving a text array on demand. DeferredTypeface [androidJvm] Content interface DeferredTypeface More info A wrapper for resolving a typeface on demand.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean DeferredBoolean [androidJvm] interface DeferredBoolean A wrapper for resolving a boolean on demand. Types Name Summary Attribute [androidJvm] Content class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredBoolean Constant [androidJvm] Content class Constant ( value : Boolean ) : ParcelableDeferredBoolean More info A wrapper for a constant boolean value . Resource [androidJvm] Content class Resource (@ BoolRes () resId : Int ) : ParcelableDeferredBoolean More info A wrapper for a BoolRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Boolean More info Resolve the boolean. Inheritors Name ParcelableDeferredBoolean","title":"DeferredBoolean   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/#deferredboolean","text":"[androidJvm] interface DeferredBoolean A wrapper for resolving a boolean on demand.","title":"DeferredBoolean"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/#types","text":"Name Summary Attribute [androidJvm] Content class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredBoolean Constant [androidJvm] Content class Constant ( value : Boolean ) : ParcelableDeferredBoolean More info A wrapper for a constant boolean value . Resource [androidJvm] Content class Resource (@ BoolRes () resId : Int ) : ParcelableDeferredBoolean More info A wrapper for a BoolRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Boolean More info Resolve the boolean.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/#inheritors","text":"Name ParcelableDeferredBoolean","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): Boolean More info Resolve the boolean.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): Boolean More info Resolve the boolean.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Attribute Attribute [androidJvm] class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredBoolean Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context 's theme. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/#attribute","text":"[androidJvm] class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredBoolean","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context 's theme. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Attribute / Attribute Attribute [androidJvm] Content fun Attribute (@ AttrRes ()resId: Int )","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/-attribute/#attribute","text":"[androidJvm] Content fun Attribute (@ AttrRes ()resId: Int )","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Attribute / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context 's theme. Throws java.lang.IllegalArgumentException if resId cannot be resolved to a boolean.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context 's theme.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-attribute/resolve/#throws","text":"java.lang.IllegalArgumentException if resId cannot be resolved to a boolean.","title":"Throws"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Constant Constant [androidJvm] class Constant ( value : Boolean ) : ParcelableDeferredBoolean A wrapper for a constant boolean value . Constructors Constant [androidJvm] fun Constant (value: Boolean ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Always resolves to value , ignoring context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/#constant","text":"[androidJvm] class Constant ( value : Boolean ) : ParcelableDeferredBoolean A wrapper for a constant boolean value .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/#constructors","text":"Constant [androidJvm] fun Constant (value: Boolean )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Always resolves to value , ignoring context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Constant / Constant Constant [androidJvm] Content fun Constant (value: Boolean )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (value: Boolean )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Always resolves to value , ignoring context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Boolean More info Always resolves to value , ignoring context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Resource Resource [androidJvm] class Resource (@ BoolRes () resId : Int ) : ParcelableDeferredBoolean A wrapper for a BoolRes . Constructors Resource [androidJvm] fun Resource (@ BoolRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/#resource","text":"[androidJvm] class Resource (@ BoolRes () resId : Int ) : ParcelableDeferredBoolean A wrapper for a BoolRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ BoolRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Resource / Resource Resource [androidJvm] Content fun Resource (@ BoolRes ()resId: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ BoolRes ()resId: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredBoolean / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-boolean/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Boolean More info Resolve resId to a boolean with the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor DeferredColor [androidJvm] interface DeferredColor A wrapper for resolving a ColorInt color on demand. Types Name Summary Attribute [androidJvm] Content class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredColor More info A wrapper for a AttrRes reference to a color. Constant [androidJvm] Content class Constant (@ ColorInt () value : Int ) : ParcelableDeferredColor More info A wrapper for a constant color value . Resource [androidJvm] Content class Resource (@ ColorRes () resId : Int ) : ParcelableDeferredColor More info A wrapper for a ColorRes . Functions Name Summary resolve [androidJvm] Content @ ColorInt () abstract fun resolve (context: Context ): Int More info Resolve the ColorInt color. resolveToStateList [androidJvm] Content abstract fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . Inheritors Name ParcelableDeferredColor Extensions Name Summary asDrawable [androidJvm] Content fun DeferredColor . asDrawable (): DeferredColorDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable . withAlpha [androidJvm] Content fun DeferredColor . withAlpha (@ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ): DeferredColorWithAlpha fun DeferredColor . withAlpha (@ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ): DeferredColorWithAlpha More info Create a DeferredColor that resolves with the given alpha , regardless of the base color's original alpha.","title":"DeferredColor   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/#deferredcolor","text":"[androidJvm] interface DeferredColor A wrapper for resolving a ColorInt color on demand.","title":"DeferredColor"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/#types","text":"Name Summary Attribute [androidJvm] Content class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredColor More info A wrapper for a AttrRes reference to a color. Constant [androidJvm] Content class Constant (@ ColorInt () value : Int ) : ParcelableDeferredColor More info A wrapper for a constant color value . Resource [androidJvm] Content class Resource (@ ColorRes () resId : Int ) : ParcelableDeferredColor More info A wrapper for a ColorRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/#functions","text":"Name Summary resolve [androidJvm] Content @ ColorInt () abstract fun resolve (context: Context ): Int More info Resolve the ColorInt color. resolveToStateList [androidJvm] Content abstract fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/#inheritors","text":"Name ParcelableDeferredColor","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/#extensions","text":"Name Summary asDrawable [androidJvm] Content fun DeferredColor . asDrawable (): DeferredColorDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable . withAlpha [androidJvm] Content fun DeferredColor . withAlpha (@ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ): DeferredColorWithAlpha fun DeferredColor . withAlpha (@ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ): DeferredColorWithAlpha More info Create a DeferredColor that resolves with the given alpha , regardless of the base color's original alpha.","title":"Extensions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/resolve-to-state-list/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / resolveToStateList resolveToStateList [androidJvm] Content abstract fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"resolveToStateList   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/resolve-to-state-list/#resolvetostatelist","text":"[androidJvm] Content abstract fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"resolveToStateList"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / resolve resolve [androidJvm] Content @ ColorInt () abstract fun resolve (context: Context ): Int More info Resolve the ColorInt color.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/resolve/#resolve","text":"[androidJvm] Content @ ColorInt () abstract fun resolve (context: Context ): Int More info Resolve the ColorInt color.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Attribute Attribute [androidJvm] class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredColor A wrapper for a AttrRes reference to a color. Constructors Attribute [androidJvm] fun Attribute (@ AttrRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context 's theme. resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/#attribute","text":"[androidJvm] class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredColor A wrapper for a AttrRes reference to a color.","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/#constructors","text":"Attribute [androidJvm] fun Attribute (@ AttrRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context 's theme. resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Attribute / Attribute Attribute [androidJvm] Content fun Attribute (@ AttrRes ()resId: Int )","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/-attribute/#attribute","text":"[androidJvm] Content fun Attribute (@ AttrRes ()resId: Int )","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/resolve-to-state-list/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Attribute / resolveToStateList resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"resolveToStateList   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/resolve-to-state-list/#resolvetostatelist","text":"[androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"resolveToStateList"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Attribute / resolve resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context 's theme. If resId would resolve a color selector, resolves to the default color of that selector. Throws java.lang.IllegalArgumentException if resId cannot be resolved to a color.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/resolve/#resolve","text":"[androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context 's theme. If resId would resolve a color selector, resolves to the default color of that selector.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-attribute/resolve/#throws","text":"java.lang.IllegalArgumentException if resId cannot be resolved to a color.","title":"Throws"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Constant Constant [androidJvm] class Constant (@ ColorInt () value : Int ) : ParcelableDeferredColor A wrapper for a constant color value . Constructors Constant [androidJvm] fun Constant (colorString: String )Convenience for wrapping a constant color value parsed from the given colorString . Constant [androidJvm] fun Constant (@ ColorInt ()value: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context . resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Always resolves to value wrapped in a new ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/#constant","text":"[androidJvm] class Constant (@ ColorInt () value : Int ) : ParcelableDeferredColor A wrapper for a constant color value .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/#constructors","text":"Constant [androidJvm] fun Constant (colorString: String )Convenience for wrapping a constant color value parsed from the given colorString . Constant [androidJvm] fun Constant (@ ColorInt ()value: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context . resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Always resolves to value wrapped in a new ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Constant / Constant Constant [androidJvm] Content fun Constant (colorString: String ) More info Convenience for wrapping a constant color value parsed from the given colorString . [androidJvm] Content fun Constant (@ ColorInt ()value: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (colorString: String ) More info Convenience for wrapping a constant color value parsed from the given colorString . [androidJvm] Content fun Constant (@ ColorInt ()value: Int )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/resolve-to-state-list/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Constant / resolveToStateList resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Always resolves to value wrapped in a new ColorStateList .","title":"resolveToStateList   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/resolve-to-state-list/#resolvetostatelist","text":"[androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Always resolves to value wrapped in a new ColorStateList .","title":"resolveToStateList"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Constant / resolve resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-constant/resolve/#resolve","text":"[androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Resource Resource [androidJvm] class Resource (@ ColorRes () resId : Int ) : ParcelableDeferredColor A wrapper for a ColorRes . Constructors Resource [androidJvm] fun Resource (@ ColorRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context . resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve resId to a ColorStateList with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/#resource","text":"[androidJvm] class Resource (@ ColorRes () resId : Int ) : ParcelableDeferredColor A wrapper for a ColorRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ ColorRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context . resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve resId to a ColorStateList with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Resource / Resource Resource [androidJvm] Content fun Resource (@ ColorRes ()resId: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ ColorRes ()resId: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/resolve-to-state-list/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Resource / resolveToStateList resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve resId to a ColorStateList with the given context .","title":"resolveToStateList   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/resolve-to-state-list/#resolvetostatelist","text":"[androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve resId to a ColorStateList with the given context .","title":"resolveToStateList"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredColor / Resource / resolve resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context . If resId resolves to a color selector resource, resolves the default color of that selector.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-color/-resource/resolve/#resolve","text":"[androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve resId to a ColorInt with the given context . If resId resolves to a color selector resource, resolves the default color of that selector.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension DeferredDimension [androidJvm] interface DeferredDimension A wrapper for resolving an integer dimension on demand. Types Name Summary Attribute [androidJvm] Content class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredDimension More info A wrapper for an AttrRes reference to a dimension. Constant [androidJvm] Content class Constant (@ Dimension () value : Float , unit : DeferredDimension.Constant.Unit ) : ParcelableDeferredDimension More info A wrapper for a constant dimension value . Resource [androidJvm] Content class Resource (@ DimenRes () resId : Int ) : ParcelableDeferredDimension More info A wrapper for a DimenRes . Functions Name Summary resolveAsOffset [androidJvm] Content @ Px () abstract fun resolveAsOffset (context: Context ): Int More info Resolve the dimension as an integer pixel value. resolveAsSize [androidJvm] Content @ Px () abstract fun resolveAsSize (context: Context ): Int More info Resolve the dimension as an integer pixel value for use as a size. resolveExact [androidJvm] Content @ Px () abstract fun resolveExact (context: Context ): Float More info Resolve the dimension's exact value. Inheritors Name ParcelableDeferredDimension","title":"DeferredDimension   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/#deferreddimension","text":"[androidJvm] interface DeferredDimension A wrapper for resolving an integer dimension on demand.","title":"DeferredDimension"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/#types","text":"Name Summary Attribute [androidJvm] Content class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredDimension More info A wrapper for an AttrRes reference to a dimension. Constant [androidJvm] Content class Constant (@ Dimension () value : Float , unit : DeferredDimension.Constant.Unit ) : ParcelableDeferredDimension More info A wrapper for a constant dimension value . Resource [androidJvm] Content class Resource (@ DimenRes () resId : Int ) : ParcelableDeferredDimension More info A wrapper for a DimenRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/#functions","text":"Name Summary resolveAsOffset [androidJvm] Content @ Px () abstract fun resolveAsOffset (context: Context ): Int More info Resolve the dimension as an integer pixel value. resolveAsSize [androidJvm] Content @ Px () abstract fun resolveAsSize (context: Context ): Int More info Resolve the dimension as an integer pixel value for use as a size. resolveExact [androidJvm] Content @ Px () abstract fun resolveExact (context: Context ): Float More info Resolve the dimension's exact value.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/#inheritors","text":"Name ParcelableDeferredDimension","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/resolve-as-offset/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / resolveAsOffset resolveAsOffset [androidJvm] Content @ Px () abstract fun resolveAsOffset (context: Context ): Int More info Resolve the dimension as an integer pixel value. The exact value is truncated to an integer.","title":"resolveAsOffset   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/resolve-as-offset/#resolveasoffset","text":"[androidJvm] Content @ Px () abstract fun resolveAsOffset (context: Context ): Int More info Resolve the dimension as an integer pixel value. The exact value is truncated to an integer.","title":"resolveAsOffset"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/resolve-as-size/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / resolveAsSize resolveAsSize [androidJvm] Content @ Px () abstract fun resolveAsSize (context: Context ): Int More info Resolve the dimension as an integer pixel value for use as a size. The exact value is rounded, and non-zero exact values are ensured to be at least one pixel in size.","title":"resolveAsSize   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/resolve-as-size/#resolveassize","text":"[androidJvm] Content @ Px () abstract fun resolveAsSize (context: Context ): Int More info Resolve the dimension as an integer pixel value for use as a size. The exact value is rounded, and non-zero exact values are ensured to be at least one pixel in size.","title":"resolveAsSize"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/resolve-exact/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / resolveExact resolveExact [androidJvm] Content @ Px () abstract fun resolveExact (context: Context ): Float More info Resolve the dimension's exact value.","title":"resolveExact   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/resolve-exact/#resolveexact","text":"[androidJvm] Content @ Px () abstract fun resolveExact (context: Context ): Float More info Resolve the dimension's exact value.","title":"resolveExact"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Attribute Attribute [androidJvm] class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredDimension A wrapper for an AttrRes reference to a dimension. Constructors Attribute [androidJvm] fun Attribute (@ AttrRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a Px int for use as an offset with the given context 's theme. resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a Px int for use as a size with the given context 's theme. resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to an exact Px value for use as a size with the given context 's theme. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/#attribute","text":"[androidJvm] class Attribute (@ AttrRes () resId : Int ) : ParcelableDeferredDimension A wrapper for an AttrRes reference to a dimension.","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/#constructors","text":"Attribute [androidJvm] fun Attribute (@ AttrRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a Px int for use as an offset with the given context 's theme. resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a Px int for use as a size with the given context 's theme. resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to an exact Px value for use as a size with the given context 's theme. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Attribute / Attribute Attribute [androidJvm] Content fun Attribute (@ AttrRes ()resId: Int )","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/-attribute/#attribute","text":"[androidJvm] Content fun Attribute (@ AttrRes ()resId: Int )","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-as-offset/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Attribute / resolveAsOffset resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a Px int for use as an offset with the given context 's theme. The exact value is truncated to an integer. Throws java.lang.IllegalArgumentException if resId cannot be resolved to a dimension.","title":"resolveAsOffset   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-as-offset/#resolveasoffset","text":"[androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a Px int for use as an offset with the given context 's theme. The exact value is truncated to an integer.","title":"resolveAsOffset"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-as-offset/#throws","text":"java.lang.IllegalArgumentException if resId cannot be resolved to a dimension.","title":"Throws"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-as-size/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Attribute / resolveAsSize resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a Px int for use as a size with the given context 's theme. The exact value is rounded, and non-zero exact values are ensured to be at least one pixel in size. Throws java.lang.IllegalArgumentException if resId cannot be resolved to a dimension.","title":"resolveAsSize   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-as-size/#resolveassize","text":"[androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a Px int for use as a size with the given context 's theme. The exact value is rounded, and non-zero exact values are ensured to be at least one pixel in size.","title":"resolveAsSize"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-as-size/#throws","text":"java.lang.IllegalArgumentException if resId cannot be resolved to a dimension.","title":"Throws"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-exact/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Attribute / resolveExact resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to an exact Px value for use as a size with the given context 's theme. Throws java.lang.IllegalArgumentException if resId cannot be resolved to a dimension.","title":"resolveExact   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-exact/#resolveexact","text":"[androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to an exact Px value for use as a size with the given context 's theme.","title":"resolveExact"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-attribute/resolve-exact/#throws","text":"java.lang.IllegalArgumentException if resId cannot be resolved to a dimension.","title":"Throws"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant Constant [androidJvm] class Constant (@ Dimension () value : Float , unit : DeferredDimension.Constant.Unit ) : ParcelableDeferredDimension A wrapper for a constant dimension value . If the given unit is Unit.DP or Unit.SP , the resolved pixel value will depend on the Context used to resolve it. Constructors Constant [androidJvm] fun Constant (@ Dimension ()value: Int , unit: DeferredDimension.Constant.Unit )Convenience for initializing with an integer value of the given unit . Constant [androidJvm] fun Constant (@ Px ()pxValue: Float )Convenience for initializing with a pxValue of Unit.PX . Constant [androidJvm] fun Constant (@ Px ()pxValue: Int )Convenience for initializing with an integer pxValue of Unit.PX . Constant [androidJvm] fun Constant (@ Dimension ()value: Float , unit: DeferredDimension.Constant.Unit ) Types Name Summary Unit [androidJvm] Content enum Unit : Enum < DeferredDimension.Constant.Unit > More info The measurement unit of the constant dimension value. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Truncates the resolved pixel value to an integer. resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Rounds the resolved pixel value to an integer. resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Returns the exact resolved pixel value. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/#constant","text":"[androidJvm] class Constant (@ Dimension () value : Float , unit : DeferredDimension.Constant.Unit ) : ParcelableDeferredDimension A wrapper for a constant dimension value . If the given unit is Unit.DP or Unit.SP , the resolved pixel value will depend on the Context used to resolve it.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/#constructors","text":"Constant [androidJvm] fun Constant (@ Dimension ()value: Int , unit: DeferredDimension.Constant.Unit )Convenience for initializing with an integer value of the given unit . Constant [androidJvm] fun Constant (@ Px ()pxValue: Float )Convenience for initializing with a pxValue of Unit.PX . Constant [androidJvm] fun Constant (@ Px ()pxValue: Int )Convenience for initializing with an integer pxValue of Unit.PX . Constant [androidJvm] fun Constant (@ Dimension ()value: Float , unit: DeferredDimension.Constant.Unit )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/#types","text":"Name Summary Unit [androidJvm] Content enum Unit : Enum < DeferredDimension.Constant.Unit > More info The measurement unit of the constant dimension value.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Truncates the resolved pixel value to an integer. resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Rounds the resolved pixel value to an integer. resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Returns the exact resolved pixel value. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Constant Constant [androidJvm] Content fun Constant (@ Dimension ()value: Int , unit: DeferredDimension.Constant.Unit ) More info Convenience for initializing with an integer value of the given unit . [androidJvm] Content fun Constant (@ Px ()pxValue: Float ) More info Convenience for initializing with a pxValue of Unit.PX . [androidJvm] Content fun Constant (@ Px ()pxValue: Int ) More info Convenience for initializing with an integer pxValue of Unit.PX . [androidJvm] Content fun Constant (@ Dimension ()value: Float , unit: DeferredDimension.Constant.Unit )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (@ Dimension ()value: Int , unit: DeferredDimension.Constant.Unit ) More info Convenience for initializing with an integer value of the given unit . [androidJvm] Content fun Constant (@ Px ()pxValue: Float ) More info Convenience for initializing with a pxValue of Unit.PX . [androidJvm] Content fun Constant (@ Px ()pxValue: Int ) More info Convenience for initializing with an integer pxValue of Unit.PX . [androidJvm] Content fun Constant (@ Dimension ()value: Float , unit: DeferredDimension.Constant.Unit )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/resolve-as-offset/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / resolveAsOffset resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Truncates the resolved pixel value to an integer. context is used to convert the original DP or SP value to pixels.","title":"resolveAsOffset   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/resolve-as-offset/#resolveasoffset","text":"[androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Truncates the resolved pixel value to an integer. context is used to convert the original DP or SP value to pixels.","title":"resolveAsOffset"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/resolve-as-size/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / resolveAsSize resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Rounds the resolved pixel value to an integer. If the pixel value is non-zero but rounds to zero, returns 1 pixel. context is used to convert the original DP or SP value to pixels.","title":"resolveAsSize   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/resolve-as-size/#resolveassize","text":"[androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Rounds the resolved pixel value to an integer. If the pixel value is non-zero but rounds to zero, returns 1 pixel. context is used to convert the original DP or SP value to pixels.","title":"resolveAsSize"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/resolve-exact/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / resolveExact resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Returns the exact resolved pixel value. context is used to convert the original DP or SP value to pixels.","title":"resolveExact   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/resolve-exact/#resolveexact","text":"[androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Returns the exact resolved pixel value. context is used to convert the original DP or SP value to pixels.","title":"resolveExact"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit Unit [androidJvm] enum Unit : Enum < DeferredDimension.Constant.Unit > The measurement unit of the constant dimension value. Entries SP [androidJvm] SP () DP [androidJvm] DP () PX [androidJvm] PX () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Unit   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/#unit","text":"[androidJvm] enum Unit : Enum < DeferredDimension.Constant.Unit > The measurement unit of the constant dimension value.","title":"Unit"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/#entries","text":"SP [androidJvm] SP () DP [androidJvm] DP () PX [androidJvm] PX ()","title":"Entries"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / DP DP [androidJvm] DP () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"DP   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/#dp","text":"[androidJvm] DP ()","title":"DP"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / DP / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / DP / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-d-p/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / PX PX [androidJvm] PX () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"PX   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/#px","text":"[androidJvm] PX ()","title":"PX"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / PX / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / PX / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-p-x/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / SP SP [androidJvm] SP () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"SP   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/#sp","text":"[androidJvm] SP ()","title":"SP"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / SP / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Constant / Unit / SP / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-constant/-unit/-s-p/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Resource Resource [androidJvm] class Resource (@ DimenRes () resId : Int ) : ParcelableDeferredDimension A wrapper for a DimenRes . Constructors Resource [androidJvm] fun Resource (@ DimenRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a pixel dimension offset with the given context . resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a pixel dimension size with the given context . resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to a pixel dimension with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/#resource","text":"[androidJvm] class Resource (@ DimenRes () resId : Int ) : ParcelableDeferredDimension A wrapper for a DimenRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ DimenRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a pixel dimension offset with the given context . resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a pixel dimension size with the given context . resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to a pixel dimension with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Resource / Resource Resource [androidJvm] Content fun Resource (@ DimenRes ()resId: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ DimenRes ()resId: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/resolve-as-offset/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Resource / resolveAsOffset resolveAsOffset [androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a pixel dimension offset with the given context .","title":"resolveAsOffset   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/resolve-as-offset/#resolveasoffset","text":"[androidJvm] Content @ Px () open override fun resolveAsOffset (context: Context ): Int More info Resolve resId to a pixel dimension offset with the given context .","title":"resolveAsOffset"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/resolve-as-size/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Resource / resolveAsSize resolveAsSize [androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a pixel dimension size with the given context .","title":"resolveAsSize   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/resolve-as-size/#resolveassize","text":"[androidJvm] Content @ Px () open override fun resolveAsSize (context: Context ): Int More info Resolve resId to a pixel dimension size with the given context .","title":"resolveAsSize"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/resolve-exact/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDimension / Resource / resolveExact resolveExact [androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to a pixel dimension with the given context .","title":"resolveExact   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-dimension/-resource/resolve-exact/#resolveexact","text":"[androidJvm] Content @ Px () open override fun resolveExact (context: Context ): Float More info Resolve resId to a pixel dimension with the given context .","title":"resolveExact"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable DeferredDrawable [androidJvm] interface DeferredDrawable A wrapper for resolving a Drawable on demand. Types Name Summary Attribute [androidJvm] Content class Attribute @ JvmOverloads ()constructor(@ AttrRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable More info A wrapper for a Drawable . Constant [androidJvm] Content class Constant ( value : Drawable ?) : DeferredDrawable More info A wrapper for a constant Drawable value . Resource [androidJvm] Content class Resource @ JvmOverloads ()constructor(@ DrawableRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable More info A wrapper for a Drawable . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Drawable ? More info Resolve the Drawable . Inheritors Name DeferredDrawable DeferredDrawable DeferredDrawable DeferredColorDrawable","title":"DeferredDrawable   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/#deferreddrawable","text":"[androidJvm] interface DeferredDrawable A wrapper for resolving a Drawable on demand.","title":"DeferredDrawable"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/#types","text":"Name Summary Attribute [androidJvm] Content class Attribute @ JvmOverloads ()constructor(@ AttrRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable More info A wrapper for a Drawable . Constant [androidJvm] Content class Constant ( value : Drawable ?) : DeferredDrawable More info A wrapper for a constant Drawable value . Resource [androidJvm] Content class Resource @ JvmOverloads ()constructor(@ DrawableRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable More info A wrapper for a Drawable .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Drawable ? More info Resolve the Drawable .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/#inheritors","text":"Name DeferredDrawable DeferredDrawable DeferredDrawable DeferredColorDrawable","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): Drawable ? More info Resolve the Drawable .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): Drawable ? More info Resolve the Drawable .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Attribute Attribute [androidJvm] class Attribute @ JvmOverloads ()constructor(@ AttrRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable A wrapper for a Drawable . Optionally mutate s each resolved Drawable. Optionally provide transformations (such as Drawable.setTint ) to apply each time the Drawable is resolved. If transformations are supplied, mutate should be true. Constructors Attribute [androidJvm] fun Attribute (@ AttrRes ()resId: Int , transformations: Drawable .( Context ) -> Unit )Convenience constructor that sets mutate to true when transformations are supplied. Attribute [androidJvm] @ JvmOverloads () fun Attribute (@ AttrRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {}) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context .","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/#attribute","text":"[androidJvm] class Attribute @ JvmOverloads ()constructor(@ AttrRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable A wrapper for a Drawable . Optionally mutate s each resolved Drawable. Optionally provide transformations (such as Drawable.setTint ) to apply each time the Drawable is resolved. If transformations are supplied, mutate should be true.","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/#constructors","text":"Attribute [androidJvm] fun Attribute (@ AttrRes ()resId: Int , transformations: Drawable .( Context ) -> Unit )Convenience constructor that sets mutate to true when transformations are supplied. Attribute [androidJvm] @ JvmOverloads () fun Attribute (@ AttrRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {})","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/-attribute/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Attribute / Attribute Attribute [androidJvm] Content fun Attribute (@ AttrRes ()resId: Int , transformations: Drawable .( Context ) -> Unit ) More info Convenience constructor that sets mutate to true when transformations are supplied. [androidJvm] Content @ JvmOverloads () fun Attribute (@ AttrRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {})","title":"Attribute   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/-attribute/#attribute","text":"[androidJvm] Content fun Attribute (@ AttrRes ()resId: Int , transformations: Drawable .( Context ) -> Unit ) More info Convenience constructor that sets mutate to true when transformations are supplied. [androidJvm] Content @ JvmOverloads () fun Attribute (@ AttrRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {})","title":"Attribute"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Attribute / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context . If mutate is true, returns the result of Drawable.mutate instead of the original Drawable. Applies transformations before returning.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-attribute/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context . If mutate is true, returns the result of Drawable.mutate instead of the original Drawable. Applies transformations before returning.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Constant Constant [androidJvm] class Constant ( value : Drawable ?) : DeferredDrawable A wrapper for a constant Drawable value . Constructors Constant [androidJvm] fun Constant (value: Drawable ?) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Always resolves to value , ignoring context .","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/#constant","text":"[androidJvm] class Constant ( value : Drawable ?) : DeferredDrawable A wrapper for a constant Drawable value .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/#constructors","text":"Constant [androidJvm] fun Constant (value: Drawable ?)","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Always resolves to value , ignoring context .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Constant / Constant Constant [androidJvm] Content fun Constant (value: Drawable ?)","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (value: Drawable ?)","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Always resolves to value , ignoring context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Always resolves to value , ignoring context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Resource Resource [androidJvm] class Resource @ JvmOverloads ()constructor(@ DrawableRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable A wrapper for a Drawable . Optionally mutate s each resolved Drawable. Optionally provide transformations (such as Drawable.setTint ) to apply each time the Drawable is resolved. If transformations are supplied, mutate should be true. Constructors Resource [androidJvm] fun Resource (@ DrawableRes ()resId: Int , transformations: Drawable .( Context ) -> Unit )Convenience constructor that sets mutate to true when transformations are supplied. Resource [androidJvm] @ JvmOverloads () fun Resource (@ DrawableRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {}) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context .","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/#resource","text":"[androidJvm] class Resource @ JvmOverloads ()constructor(@ DrawableRes () resId : Int , mutate : Boolean , transformations : Drawable .( Context ) -> Unit ) : DeferredDrawable A wrapper for a Drawable . Optionally mutate s each resolved Drawable. Optionally provide transformations (such as Drawable.setTint ) to apply each time the Drawable is resolved. If transformations are supplied, mutate should be true.","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ DrawableRes ()resId: Int , transformations: Drawable .( Context ) -> Unit )Convenience constructor that sets mutate to true when transformations are supplied. Resource [androidJvm] @ JvmOverloads () fun Resource (@ DrawableRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {})","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Resource / Resource Resource [androidJvm] Content fun Resource (@ DrawableRes ()resId: Int , transformations: Drawable .( Context ) -> Unit ) More info Convenience constructor that sets mutate to true when transformations are supplied. [androidJvm] Content @ JvmOverloads () fun Resource (@ DrawableRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {})","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ DrawableRes ()resId: Int , transformations: Drawable .( Context ) -> Unit ) More info Convenience constructor that sets mutate to true when transformations are supplied. [androidJvm] Content @ JvmOverloads () fun Resource (@ DrawableRes ()resId: Int , mutate: Boolean = true, transformations: Drawable .( Context ) -> Unit = {})","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredDrawable / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context . If mutate is true, returns the result of Drawable.mutate instead of the original Drawable. Applies transformations before returning.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-drawable/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Drawable ? More info Resolve resId to a Drawable with the given context . If mutate is true, returns the result of Drawable.mutate instead of the original Drawable. Applies transformations before returning.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals DeferredFormattedPlurals [androidJvm] interface DeferredFormattedPlurals A wrapper for resolving format-able pluralized text on demand. Types Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredFormattedPlurals More info A wrapper for constant format-able pluralized text. Resource [androidJvm] Content class Resource (@ PluralsRes () resId : Int ) : ParcelableDeferredFormattedPlurals More info A wrapper for a format-able PluralsRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): String More info Resolve the string for the given quantity with the given formatArgs . Inheritors Name ParcelableDeferredFormattedPlurals Extensions Name Summary withFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing formatArgs to be used when resolved. [androidJvm] Content ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing its formatArgs to be used when resolved. withQuantity [androidJvm] Content fun DeferredFormattedPlurals . withQuantity (quantity: Int ): QuantifiedDeferredFormattedString ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredFormattedString More info Convert a DeferredFormattedPlurals to a DeferredFormattedString by providing a quantity to be used when resolved. withQuantityAndFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withQuantityAndFormatArgs (quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): QuantifiedFormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantityAndFormatArgs~~ ~~(~~~~quantity~~~~:~~ Int ~~,~~ ~~vararg~~ ~~formatArgs~~~~:~~ Any ~~= arrayOf(quantity)~~~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedPlurals to a normal DeferredText by providing a quantity and formatArgs to be used when resolved.","title":"DeferredFormattedPlurals   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/#deferredformattedplurals","text":"[androidJvm] interface DeferredFormattedPlurals A wrapper for resolving format-able pluralized text on demand.","title":"DeferredFormattedPlurals"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/#types","text":"Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredFormattedPlurals More info A wrapper for constant format-able pluralized text. Resource [androidJvm] Content class Resource (@ PluralsRes () resId : Int ) : ParcelableDeferredFormattedPlurals More info A wrapper for a format-able PluralsRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): String More info Resolve the string for the given quantity with the given formatArgs .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/#inheritors","text":"Name ParcelableDeferredFormattedPlurals","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/#extensions","text":"Name Summary withFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing formatArgs to be used when resolved. [androidJvm] Content ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing its formatArgs to be used when resolved. withQuantity [androidJvm] Content fun DeferredFormattedPlurals . withQuantity (quantity: Int ): QuantifiedDeferredFormattedString ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredFormattedString More info Convert a DeferredFormattedPlurals to a DeferredFormattedString by providing a quantity to be used when resolved. withQuantityAndFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withQuantityAndFormatArgs (quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): QuantifiedFormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantityAndFormatArgs~~ ~~(~~~~quantity~~~~:~~ Int ~~,~~ ~~vararg~~ ~~formatArgs~~~~:~~ Any ~~= arrayOf(quantity)~~~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedPlurals to a normal DeferredText by providing a quantity and formatArgs to be used when resolved.","title":"Extensions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / resolve resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): String More info Resolve the string for the given quantity with the given formatArgs .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): String More info Resolve the string for the given quantity with the given formatArgs .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / Constant Constant [androidJvm] class Constant : ParcelableDeferredFormattedPlurals A wrapper for constant format-able pluralized text. Constructors Constant [androidJvm] @ RequiresApi (value = 24) fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other, type: PluralRules.PluralType ?)Constructor for API 24+. Constant [androidJvm] fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other)Constructor for API < 24. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolves and formats one of the constructor-provided pluralized values depending on the primary locale from context , the given quantity , and formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/#constant","text":"[androidJvm] class Constant : ParcelableDeferredFormattedPlurals A wrapper for constant format-able pluralized text.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/#constructors","text":"Constant [androidJvm] @ RequiresApi (value = 24) fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other, type: PluralRules.PluralType ?)Constructor for API 24+. Constant [androidJvm] fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other)Constructor for API < 24.","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolves and formats one of the constructor-provided pluralized values depending on the primary locale from context , the given quantity , and formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / Constant / Constant Constant [androidJvm] Content @ RequiresApi (value = 24) fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other, type: PluralRules.PluralType ?) More info Constructor for API 24+. type can be supplied to choose between PluralRules.PluralType.CARDINAL and PluralRules.PluralType.ORDINAL . If null, the system default of PluralRules.PluralType.CARDINAL is used implicitly. [androidJvm] Content fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other) More info Constructor for API < 24. \"CARDINAL\" plural type will be used implicitly.","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/-constant/#constant","text":"[androidJvm] Content @ RequiresApi (value = 24) fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other, type: PluralRules.PluralType ?) More info Constructor for API 24+. type can be supplied to choose between PluralRules.PluralType.CARDINAL and PluralRules.PluralType.ORDINAL . If null, the system default of PluralRules.PluralType.CARDINAL is used implicitly. [androidJvm] Content fun Constant (other: String , zero: String = other, one: String = other, two: String = other, few: String = other, many: String = other) More info Constructor for API < 24. \"CARDINAL\" plural type will be used implicitly.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolves and formats one of the constructor-provided pluralized values depending on the primary locale from context , the given quantity , and formatArgs .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolves and formats one of the constructor-provided pluralized values depending on the primary locale from context , the given quantity , and formatArgs .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / Resource Resource [androidJvm] class Resource (@ PluralsRes () resId : Int ) : ParcelableDeferredFormattedPlurals A wrapper for a format-able PluralsRes . Constructors Resource [androidJvm] fun Resource (@ PluralsRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context , quantity , and formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/#resource","text":"[androidJvm] class Resource (@ PluralsRes () resId : Int ) : ParcelableDeferredFormattedPlurals A wrapper for a format-able PluralsRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ PluralsRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context , quantity , and formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / Resource / Resource Resource [androidJvm] Content fun Resource (@ PluralsRes ()resId: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ PluralsRes ()resId: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedPlurals / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context , quantity , and formatArgs .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-plurals/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , quantity: Int , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context , quantity , and formatArgs .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString DeferredFormattedString [androidJvm] interface DeferredFormattedString A wrapper for resolving a formatted string on demand. Types Name Summary Constant [androidJvm] Content class Constant ( format : String ) : ParcelableDeferredFormattedString More info A wrapper for a constant format-able format string. Resource [androidJvm] Content class Resource (@ StringRes () resId : Int ) : ParcelableDeferredFormattedString More info A wrapper for a format-able StringRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve the string with the supplied formatArgs . Inheritors Name ParcelableDeferredFormattedString Extensions Name Summary withFormatArgs [androidJvm] Content fun DeferredFormattedString . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedString ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedString to a normal DeferredText by providing formatArgs to be used when resolved.","title":"DeferredFormattedString   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/#deferredformattedstring","text":"[androidJvm] interface DeferredFormattedString A wrapper for resolving a formatted string on demand.","title":"DeferredFormattedString"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/#types","text":"Name Summary Constant [androidJvm] Content class Constant ( format : String ) : ParcelableDeferredFormattedString More info A wrapper for a constant format-able format string. Resource [androidJvm] Content class Resource (@ StringRes () resId : Int ) : ParcelableDeferredFormattedString More info A wrapper for a format-able StringRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve the string with the supplied formatArgs .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/#inheritors","text":"Name ParcelableDeferredFormattedString","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/#extensions","text":"Name Summary withFormatArgs [androidJvm] Content fun DeferredFormattedString . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedString ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedString to a normal DeferredText by providing formatArgs to be used when resolved.","title":"Extensions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / resolve resolve [androidJvm] Content abstract fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve the string with the supplied formatArgs .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve the string with the supplied formatArgs .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / Constant Constant [androidJvm] class Constant ( format : String ) : ParcelableDeferredFormattedString A wrapper for a constant format-able format string. Constructors Constant [androidJvm] fun Constant (format: String ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Always resolves format with the supplied formatArgs and the primary locale from context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/#constant","text":"[androidJvm] class Constant ( format : String ) : ParcelableDeferredFormattedString A wrapper for a constant format-able format string.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/#constructors","text":"Constant [androidJvm] fun Constant (format: String )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Always resolves format with the supplied formatArgs and the primary locale from context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / Constant / Constant Constant [androidJvm] Content fun Constant (format: String )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (format: String )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Always resolves format with the supplied formatArgs and the primary locale from context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Always resolves format with the supplied formatArgs and the primary locale from context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / Resource Resource [androidJvm] class Resource (@ StringRes () resId : Int ) : ParcelableDeferredFormattedString A wrapper for a format-able StringRes . Constructors Resource [androidJvm] fun Resource (@ StringRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context and formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/#resource","text":"[androidJvm] class Resource (@ StringRes () resId : Int ) : ParcelableDeferredFormattedString A wrapper for a format-able StringRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ StringRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context and formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / Resource / Resource Resource [androidJvm] Content fun Resource (@ StringRes ()resId: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ StringRes ()resId: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredFormattedString / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context and formatArgs .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-formatted-string/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve resId to a formatted string with the given context and formatArgs .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger DeferredInteger [androidJvm] interface DeferredInteger A wrapper for resolving an integer on demand. Types Name Summary Constant [androidJvm] Content class Constant ( value : Int ) : ParcelableDeferredInteger More info A wrapper for a constant integer value . Resource [androidJvm] Content class Resource (@ IntegerRes () resId : Int ) : ParcelableDeferredInteger More info A wrapper for a IntegerRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Int More info Resolve the integer. Inheritors Name ParcelableDeferredInteger","title":"DeferredInteger   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/#deferredinteger","text":"[androidJvm] interface DeferredInteger A wrapper for resolving an integer on demand.","title":"DeferredInteger"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/#types","text":"Name Summary Constant [androidJvm] Content class Constant ( value : Int ) : ParcelableDeferredInteger More info A wrapper for a constant integer value . Resource [androidJvm] Content class Resource (@ IntegerRes () resId : Int ) : ParcelableDeferredInteger More info A wrapper for a IntegerRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Int More info Resolve the integer.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/#inheritors","text":"Name ParcelableDeferredInteger","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): Int More info Resolve the integer.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): Int More info Resolve the integer.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / Constant Constant [androidJvm] class Constant ( value : Int ) : ParcelableDeferredInteger A wrapper for a constant integer value . Constructors Constant [androidJvm] fun Constant (value: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/#constant","text":"[androidJvm] class Constant ( value : Int ) : ParcelableDeferredInteger A wrapper for a constant integer value .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/#constructors","text":"Constant [androidJvm] fun Constant (value: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / Constant / Constant Constant [androidJvm] Content fun Constant (value: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (value: Int )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Int More info Always resolves to value , ignoring context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / Resource Resource [androidJvm] class Resource (@ IntegerRes () resId : Int ) : ParcelableDeferredInteger A wrapper for a IntegerRes . Constructors Resource [androidJvm] fun Resource (@ IntegerRes ()resId: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Int More info Resolve resId to an integer with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/#resource","text":"[androidJvm] class Resource (@ IntegerRes () resId : Int ) : ParcelableDeferredInteger A wrapper for a IntegerRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ IntegerRes ()resId: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Int More info Resolve resId to an integer with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / Resource / Resource Resource [androidJvm] Content fun Resource (@ IntegerRes ()resId: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ IntegerRes ()resId: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredInteger / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Int More info Resolve resId to an integer with the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Int More info Resolve resId to an integer with the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray DeferredIntegerArray [androidJvm] interface DeferredIntegerArray A wrapper for resolving an integer array on demand. Types Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredIntegerArray More info A wrapper for a constant array of integer values . Resource [androidJvm] Content class Resource (@ ArrayRes () id : Int ) : ParcelableDeferredIntegerArray More info A wrapper for an integer ArrayRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): IntArray More info Resolve the integer array. Inheritors Name ParcelableDeferredIntegerArray","title":"DeferredIntegerArray   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/#deferredintegerarray","text":"[androidJvm] interface DeferredIntegerArray A wrapper for resolving an integer array on demand.","title":"DeferredIntegerArray"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/#types","text":"Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredIntegerArray More info A wrapper for a constant array of integer values . Resource [androidJvm] Content class Resource (@ ArrayRes () id : Int ) : ParcelableDeferredIntegerArray More info A wrapper for an integer ArrayRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): IntArray More info Resolve the integer array.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/#inheritors","text":"Name ParcelableDeferredIntegerArray","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): IntArray More info Resolve the integer array.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): IntArray More info Resolve the integer array.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / Constant Constant [androidJvm] class Constant : ParcelableDeferredIntegerArray A wrapper for a constant array of integer values . This class protects against array mutability by holding a copy of the input values and by always returning a new copy of those values when resolved. Constructors Constant [androidJvm] fun Constant (vararg values: Int )Initialize with the given integer values . Constant [androidJvm] fun Constant (values: Collection < Int >)Convenience for initializing with a Collection of integer values . Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): IntArray More info Always resolves to a new array copied from values . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/#constant","text":"[androidJvm] class Constant : ParcelableDeferredIntegerArray A wrapper for a constant array of integer values . This class protects against array mutability by holding a copy of the input values and by always returning a new copy of those values when resolved.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/#constructors","text":"Constant [androidJvm] fun Constant (vararg values: Int )Initialize with the given integer values . Constant [androidJvm] fun Constant (values: Collection < Int >)Convenience for initializing with a Collection of integer values .","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): IntArray More info Always resolves to a new array copied from values . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / Constant / Constant Constant [androidJvm] Content fun Constant (vararg values: Int ) More info Initialize with the given integer values . The given values array is copied on construction, so later external changes to the original will not be reflected in this DeferredIntegerArray . [androidJvm] Content fun Constant (values: Collection < Int >) More info Convenience for initializing with a Collection of integer values .","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (vararg values: Int ) More info Initialize with the given integer values . The given values array is copied on construction, so later external changes to the original will not be reflected in this DeferredIntegerArray . [androidJvm] Content fun Constant (values: Collection < Int >) More info Convenience for initializing with a Collection of integer values .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): IntArray More info Always resolves to a new array copied from values . Changes to the returned array will not be reflected in future calls to resolve this DeferredIntegerArray .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): IntArray More info Always resolves to a new array copied from values . Changes to the returned array will not be reflected in future calls to resolve this DeferredIntegerArray .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / Resource Resource [androidJvm] class Resource (@ ArrayRes () id : Int ) : ParcelableDeferredIntegerArray A wrapper for an integer ArrayRes . Constructors Resource [androidJvm] fun Resource (@ ArrayRes ()id: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): IntArray More info Resolve id to an integer array with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/#resource","text":"[androidJvm] class Resource (@ ArrayRes () id : Int ) : ParcelableDeferredIntegerArray A wrapper for an integer ArrayRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ ArrayRes ()id: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): IntArray More info Resolve id to an integer array with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / Resource / Resource Resource [androidJvm] Content fun Resource (@ ArrayRes ()id: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ ArrayRes ()id: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredIntegerArray / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): IntArray More info Resolve id to an integer array with the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-integer-array/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): IntArray More info Resolve id to an integer array with the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals DeferredPlurals [androidJvm] interface DeferredPlurals A wrapper for resolving pluralized text on demand. Types Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredPlurals More info A wrapper for constant pluralized text. Resource [androidJvm] Content class Resource (@ PluralsRes () resId : Int , type : DeferredPlurals.Resource.Type ) : ParcelableDeferredPlurals More info A wrapper for a PluralsRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve the text for the given quantity . Inheritors Name ParcelableDeferredPlurals Extensions Name Summary withQuantity [androidJvm] Content fun DeferredPlurals . withQuantity (quantity: Int ): QuantifiedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredText More info Convert a DeferredPlurals to a normal DeferredText by providing a quantity to be used when resolved.","title":"DeferredPlurals   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/#deferredplurals","text":"[androidJvm] interface DeferredPlurals A wrapper for resolving pluralized text on demand.","title":"DeferredPlurals"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/#types","text":"Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredPlurals More info A wrapper for constant pluralized text. Resource [androidJvm] Content class Resource (@ PluralsRes () resId : Int , type : DeferredPlurals.Resource.Type ) : ParcelableDeferredPlurals More info A wrapper for a PluralsRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve the text for the given quantity .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/#inheritors","text":"Name ParcelableDeferredPlurals","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/#extensions","text":"Name Summary withQuantity [androidJvm] Content fun DeferredPlurals . withQuantity (quantity: Int ): QuantifiedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredText More info Convert a DeferredPlurals to a normal DeferredText by providing a quantity to be used when resolved.","title":"Extensions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / resolve resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve the text for the given quantity .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve the text for the given quantity .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Constant Constant [androidJvm] class Constant : ParcelableDeferredPlurals A wrapper for constant pluralized text. zero , one , two , few , and many are locale-specific, quantity-specific text values, while other is the fallback. Constructors Constant [androidJvm] @ RequiresApi (value = 24) fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other, type: PluralRules.PluralType ?)Constructor for API 24+. Constant [androidJvm] fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other)Constructor for APIs < 24. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolves to one of zero , one , two , few , many , or other depending on the device's primary locale and the given quantity . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/#constant","text":"[androidJvm] class Constant : ParcelableDeferredPlurals A wrapper for constant pluralized text. zero , one , two , few , and many are locale-specific, quantity-specific text values, while other is the fallback.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/#constructors","text":"Constant [androidJvm] @ RequiresApi (value = 24) fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other, type: PluralRules.PluralType ?)Constructor for API 24+. Constant [androidJvm] fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other)Constructor for APIs < 24.","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolves to one of zero , one , two , few , many , or other depending on the device's primary locale and the given quantity . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Constant / Constant Constant [androidJvm] Content @ RequiresApi (value = 24) fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other, type: PluralRules.PluralType ?) More info Constructor for API 24+. type can be supplied to choose between PluralRules.PluralType.CARDINAL and PluralRules.PluralType.ORDINAL . If null, the system default of PluralRules.PluralType.CARDINAL is used implicitly. [androidJvm] Content fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other) More info Constructor for APIs < 24. \"CARDINAL\" plural type will be used implicitly.","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/-constant/#constant","text":"[androidJvm] Content @ RequiresApi (value = 24) fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other, type: PluralRules.PluralType ?) More info Constructor for API 24+. type can be supplied to choose between PluralRules.PluralType.CARDINAL and PluralRules.PluralType.ORDINAL . If null, the system default of PluralRules.PluralType.CARDINAL is used implicitly. [androidJvm] Content fun Constant (other: CharSequence , zero: CharSequence = other, one: CharSequence = other, two: CharSequence = other, few: CharSequence = other, many: CharSequence = other) More info Constructor for APIs < 24. \"CARDINAL\" plural type will be used implicitly.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolves to one of zero , one , two , few , many , or other depending on the device's primary locale and the given quantity .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolves to one of zero , one , two , few , many , or other depending on the device's primary locale and the given quantity .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource Resource [androidJvm] class Resource (@ PluralsRes () resId : Int , type : DeferredPlurals.Resource.Type ) : ParcelableDeferredPlurals A wrapper for a PluralsRes . Constructors Resource [androidJvm] fun Resource (@ PluralsRes ()resId: Int , type: DeferredPlurals.Resource.Type = Type.STRING) Types Name Summary Type [androidJvm] Content enum Type : Enum < DeferredPlurals.Resource.Type > More info The type of text resource to resolve. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve resId to text with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/#resource","text":"[androidJvm] class Resource (@ PluralsRes () resId : Int , type : DeferredPlurals.Resource.Type ) : ParcelableDeferredPlurals A wrapper for a PluralsRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ PluralsRes ()resId: Int , type: DeferredPlurals.Resource.Type = Type.STRING)","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/#types","text":"Name Summary Type [androidJvm] Content enum Type : Enum < DeferredPlurals.Resource.Type > More info The type of text resource to resolve.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve resId to text with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Resource Resource [androidJvm] Content fun Resource (@ PluralsRes ()resId: Int , type: DeferredPlurals.Resource.Type = Type.STRING)","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ PluralsRes ()resId: Int , type: DeferredPlurals.Resource.Type = Type.STRING)","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve resId to text with the given context . If type is Type.STRING , resolves a localized string. If type is Type.TEXT , resolves a localized, styled CharSequence . See also androidJvm android.content.res.Resources","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve resId to text with the given context . If type is Type.STRING , resolves a localized string. If type is Type.TEXT , resolves a localized, styled CharSequence .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/resolve/#see-also","text":"androidJvm android.content.res.Resources","title":"See also"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type Type [androidJvm] enum Type : Enum < DeferredPlurals.Resource.Type > The type of text resource to resolve. Entries TEXT [androidJvm] TEXT () STRING [androidJvm] STRING () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Type   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/#type","text":"[androidJvm] enum Type : Enum < DeferredPlurals.Resource.Type > The type of text resource to resolve.","title":"Type"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/#entries","text":"TEXT [androidJvm] TEXT () STRING [androidJvm] STRING ()","title":"Entries"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type / STRING STRING [androidJvm] STRING () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"STRING   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/#string","text":"[androidJvm] STRING ()","title":"STRING"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type / STRING / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type / STRING / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-s-t-r-i-n-g/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type / TEXT TEXT [androidJvm] TEXT () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"TEXT   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/#text","text":"[androidJvm] TEXT ()","title":"TEXT"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type / TEXT / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredPlurals / Resource / Type / TEXT / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-plurals/-resource/-type/-t-e-x-t/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText DeferredText [androidJvm] interface DeferredText A wrapper for resolving text on demand. Types Name Summary Constant [androidJvm] Content class Constant ( value : CharSequence ) : ParcelableDeferredText More info A wrapper for a constant text value . Resource [androidJvm] Content class Resource @ JvmOverloads ()constructor(@ StringRes () resId : Int , type : DeferredText.Resource.Type ) : ParcelableDeferredText More info A wrapper for a text resId . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): CharSequence More info Resolve the text. Inheritors Name ParcelableDeferredText Extensions Name Summary resolveToString [androidJvm] Content fun DeferredText . resolveToString (context: Context ): String More info Resolve a DeferredText to a string rather than a CharSequence by calling toString on the resolved value.","title":"DeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/#deferredtext","text":"[androidJvm] interface DeferredText A wrapper for resolving text on demand.","title":"DeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/#types","text":"Name Summary Constant [androidJvm] Content class Constant ( value : CharSequence ) : ParcelableDeferredText More info A wrapper for a constant text value . Resource [androidJvm] Content class Resource @ JvmOverloads ()constructor(@ StringRes () resId : Int , type : DeferredText.Resource.Type ) : ParcelableDeferredText More info A wrapper for a text resId .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): CharSequence More info Resolve the text.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/#inheritors","text":"Name ParcelableDeferredText","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/#extensions","text":"Name Summary resolveToString [androidJvm] Content fun DeferredText . resolveToString (context: Context ): String More info Resolve a DeferredText to a string rather than a CharSequence by calling toString on the resolved value.","title":"Extensions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): CharSequence More info Resolve the text.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): CharSequence More info Resolve the text.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Constant Constant [androidJvm] class Constant ( value : CharSequence ) : ParcelableDeferredText A wrapper for a constant text value . Constructors Constant [androidJvm] fun Constant (value: CharSequence ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Always resolves to value , ignoring context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/#constant","text":"[androidJvm] class Constant ( value : CharSequence ) : ParcelableDeferredText A wrapper for a constant text value .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/#constructors","text":"Constant [androidJvm] fun Constant (value: CharSequence )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Always resolves to value , ignoring context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Constant / Constant Constant [androidJvm] Content fun Constant (value: CharSequence )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (value: CharSequence )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Always resolves to value , ignoring context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Always resolves to value , ignoring context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource Resource [androidJvm] class Resource @ JvmOverloads ()constructor(@ StringRes () resId : Int , type : DeferredText.Resource.Type ) : ParcelableDeferredText A wrapper for a text resId . Constructors Resource [androidJvm] @ JvmOverloads () fun Resource (@ StringRes ()resId: Int , type: DeferredText.Resource.Type = Type.STRING) Types Name Summary Type [androidJvm] Content enum Type : Enum < DeferredText.Resource.Type > More info The type of text resource to resolve. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve resId to text with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/#resource","text":"[androidJvm] class Resource @ JvmOverloads ()constructor(@ StringRes () resId : Int , type : DeferredText.Resource.Type ) : ParcelableDeferredText A wrapper for a text resId .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/#constructors","text":"Resource [androidJvm] @ JvmOverloads () fun Resource (@ StringRes ()resId: Int , type: DeferredText.Resource.Type = Type.STRING)","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/#types","text":"Name Summary Type [androidJvm] Content enum Type : Enum < DeferredText.Resource.Type > More info The type of text resource to resolve.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve resId to text with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Resource Resource [androidJvm] Content @ JvmOverloads () fun Resource (@ StringRes ()resId: Int , type: DeferredText.Resource.Type = Type.STRING)","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-resource/#resource","text":"[androidJvm] Content @ JvmOverloads () fun Resource (@ StringRes ()resId: Int , type: DeferredText.Resource.Type = Type.STRING)","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve resId to text with the given context . If type is Type.STRING , resolves a localized string. If type is Type.TEXT , resolves a localized, styled CharSequence . See also androidJvm android.content.Context","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve resId to text with the given context . If type is Type.STRING , resolves a localized string. If type is Type.TEXT , resolves a localized, styled CharSequence .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/resolve/#see-also","text":"androidJvm android.content.Context","title":"See also"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type Type [androidJvm] enum Type : Enum < DeferredText.Resource.Type > The type of text resource to resolve. Entries TEXT [androidJvm] TEXT () STRING [androidJvm] STRING () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Type   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/#type","text":"[androidJvm] enum Type : Enum < DeferredText.Resource.Type > The type of text resource to resolve.","title":"Type"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/#entries","text":"TEXT [androidJvm] TEXT () STRING [androidJvm] STRING ()","title":"Entries"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type / STRING STRING [androidJvm] STRING () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"STRING   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/#string","text":"[androidJvm] STRING ()","title":"STRING"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type / STRING / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type / STRING / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-s-t-r-i-n-g/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type / TEXT TEXT [androidJvm] TEXT () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"TEXT   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/#text","text":"[androidJvm] TEXT ()","title":"TEXT"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type / TEXT / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredText / Resource / Type / TEXT / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text/-resource/-type/-t-e-x-t/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray DeferredTextArray [androidJvm] interface DeferredTextArray A wrapper for resolving a text array on demand. Types Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredTextArray More info A wrapper for a constant array of text values . Resource [androidJvm] Content class Resource @ JvmOverloads ()constructor(@ ArrayRes () id : Int , type : DeferredTextArray.Resource.Type ) : ParcelableDeferredTextArray More info A wrapper for a text ArrayRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Array CharSequence > More info Resolve the text array. Inheritors Name ParcelableDeferredTextArray","title":"DeferredTextArray   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/#deferredtextarray","text":"[androidJvm] interface DeferredTextArray A wrapper for resolving a text array on demand.","title":"DeferredTextArray"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/#types","text":"Name Summary Constant [androidJvm] Content class Constant : ParcelableDeferredTextArray More info A wrapper for a constant array of text values . Resource [androidJvm] Content class Resource @ JvmOverloads ()constructor(@ ArrayRes () id : Int , type : DeferredTextArray.Resource.Type ) : ParcelableDeferredTextArray More info A wrapper for a text ArrayRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Array CharSequence > More info Resolve the text array.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/#inheritors","text":"Name ParcelableDeferredTextArray","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): Array CharSequence > More info Resolve the text array.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): Array CharSequence > More info Resolve the text array.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Constant Constant [androidJvm] class Constant : ParcelableDeferredTextArray A wrapper for a constant array of text values . This class protects against array mutability by holding a copy of the input values and by always returning a new copy of those values when resolved. Constructors Constant [androidJvm] fun Constant (vararg values: CharSequence )Initialize with the given text values . Constant [androidJvm] fun Constant (values: Collection < CharSequence >)Convenience for initializing with a Collection of text values . Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Always resolves to a new array copied from values . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/#constant","text":"[androidJvm] class Constant : ParcelableDeferredTextArray A wrapper for a constant array of text values . This class protects against array mutability by holding a copy of the input values and by always returning a new copy of those values when resolved.","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/#constructors","text":"Constant [androidJvm] fun Constant (vararg values: CharSequence )Initialize with the given text values . Constant [androidJvm] fun Constant (values: Collection < CharSequence >)Convenience for initializing with a Collection of text values .","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Always resolves to a new array copied from values . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Constant / Constant Constant [androidJvm] Content fun Constant (vararg values: CharSequence ) More info Initialize with the given text values . The given values array is copied on construction, so later external changes to the original will not be reflected in this DeferredTextArray . [androidJvm] Content fun Constant (values: Collection < CharSequence >) More info Convenience for initializing with a Collection of text values .","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (vararg values: CharSequence ) More info Initialize with the given text values . The given values array is copied on construction, so later external changes to the original will not be reflected in this DeferredTextArray . [androidJvm] Content fun Constant (values: Collection < CharSequence >) More info Convenience for initializing with a Collection of text values .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Always resolves to a new array copied from values . Changes to the returned array will not be reflected in future calls to resolve this DeferredTextArray .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Always resolves to a new array copied from values . Changes to the returned array will not be reflected in future calls to resolve this DeferredTextArray .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource Resource [androidJvm] class Resource @ JvmOverloads ()constructor(@ ArrayRes () id : Int , type : DeferredTextArray.Resource.Type ) : ParcelableDeferredTextArray A wrapper for a text ArrayRes . Optionally set type to Type.TEXT to retain style information in each resource. Constructors Resource [androidJvm] @ JvmOverloads () fun Resource (@ ArrayRes ()id: Int , type: DeferredTextArray.Resource.Type = Type.STRING) Types Name Summary Type [androidJvm] Content enum Type : Enum < DeferredTextArray.Resource.Type > More info The type of text resource to resolve. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Resolve id to a text array with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/#resource","text":"[androidJvm] class Resource @ JvmOverloads ()constructor(@ ArrayRes () id : Int , type : DeferredTextArray.Resource.Type ) : ParcelableDeferredTextArray A wrapper for a text ArrayRes . Optionally set type to Type.TEXT to retain style information in each resource.","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/#constructors","text":"Resource [androidJvm] @ JvmOverloads () fun Resource (@ ArrayRes ()id: Int , type: DeferredTextArray.Resource.Type = Type.STRING)","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/#types","text":"Name Summary Type [androidJvm] Content enum Type : Enum < DeferredTextArray.Resource.Type > More info The type of text resource to resolve.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Resolve id to a text array with the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Resource Resource [androidJvm] Content @ JvmOverloads () fun Resource (@ ArrayRes ()id: Int , type: DeferredTextArray.Resource.Type = Type.STRING)","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-resource/#resource","text":"[androidJvm] Content @ JvmOverloads () fun Resource (@ ArrayRes ()id: Int , type: DeferredTextArray.Resource.Type = Type.STRING)","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Resolve id to a text array with the given context . If type is Type.STRING , resolves an array of (un-styled) strings. If type is Type.TEXT , resolves an array of styled CharSequence s. See also androidJvm android.content.res.Resources","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Array CharSequence > More info Resolve id to a text array with the given context . If type is Type.STRING , resolves an array of (un-styled) strings. If type is Type.TEXT , resolves an array of styled CharSequence s.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/resolve/#see-also","text":"androidJvm android.content.res.Resources","title":"See also"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type Type [androidJvm] enum Type : Enum < DeferredTextArray.Resource.Type > The type of text resource to resolve. Entries TEXT [androidJvm] TEXT () STRING [androidJvm] STRING () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Type   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/#type","text":"[androidJvm] enum Type : Enum < DeferredTextArray.Resource.Type > The type of text resource to resolve.","title":"Type"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/#entries","text":"TEXT [androidJvm] TEXT () STRING [androidJvm] STRING ()","title":"Entries"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type / STRING STRING [androidJvm] STRING () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"STRING   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/#string","text":"[androidJvm] STRING ()","title":"STRING"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type / STRING / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type / STRING / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-s-t-r-i-n-g/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type / TEXT TEXT [androidJvm] TEXT () Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"TEXT   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/#text","text":"[androidJvm] TEXT ()","title":"TEXT"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int","title":"Properties"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/name/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type / TEXT / name name [androidJvm] Content val name : String","title":"name   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/name/#name","text":"[androidJvm] Content val name : String","title":"name"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/ordinal/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTextArray / Resource / Type / TEXT / ordinal ordinal [androidJvm] Content val ordinal : Int","title":"ordinal   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-text-array/-resource/-type/-t-e-x-t/ordinal/#ordinal","text":"[androidJvm] Content val ordinal : Int","title":"ordinal"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface DeferredTypeface [androidJvm] interface DeferredTypeface A wrapper for resolving a typeface on demand. Types Name Summary Asset [androidJvm] Content class Asset ( path : String ) : DeferredTypeface Constant [androidJvm] Content class Constant ( value : Typeface ) : DeferredTypeface More info A wrapper for a constant typeface value . Resource [androidJvm] Content class Resource (@ FontRes () id : Int ) : DeferredTypeface More info A wrapper for a FontRes . Functions Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Typeface ? More info Resolve the typeface synchronously. [androidJvm] Content abstract fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ? = null) More info Resolve the typeface asynchronously. Inheritors Name DeferredTypeface DeferredTypeface DeferredTypeface","title":"DeferredTypeface   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/#deferredtypeface","text":"[androidJvm] interface DeferredTypeface A wrapper for resolving a typeface on demand.","title":"DeferredTypeface"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/#types","text":"Name Summary Asset [androidJvm] Content class Asset ( path : String ) : DeferredTypeface Constant [androidJvm] Content class Constant ( value : Typeface ) : DeferredTypeface More info A wrapper for a constant typeface value . Resource [androidJvm] Content class Resource (@ FontRes () id : Int ) : DeferredTypeface More info A wrapper for a FontRes .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/#functions","text":"Name Summary resolve [androidJvm] Content abstract fun resolve (context: Context ): Typeface ? More info Resolve the typeface synchronously. [androidJvm] Content abstract fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ? = null) More info Resolve the typeface asynchronously.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/#inheritors","text":"Name DeferredTypeface DeferredTypeface DeferredTypeface","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / resolve resolve [androidJvm] Content abstract fun resolve (context: Context ): Typeface ? More info Resolve the typeface synchronously. [androidJvm] Content abstract fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ? = null) More info Resolve the typeface asynchronously. fontCallback will be triggered on the handler 's thread. If handler is null, fontCallback will be triggered on the UI thread.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/resolve/#resolve","text":"[androidJvm] Content abstract fun resolve (context: Context ): Typeface ? More info Resolve the typeface synchronously. [androidJvm] Content abstract fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ? = null) More info Resolve the typeface asynchronously. fontCallback will be triggered on the handler 's thread. If handler is null, fontCallback will be triggered on the UI thread.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Asset Asset [androidJvm] class Asset ( path : String ) : DeferredTypeface Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface More info Resolve the asset path to a typeface with the given context 's assets. [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve the asset path to a typeface with the given context 's assets and provide it asynchronously to fontCallback .","title":"Asset   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/#asset","text":"[androidJvm] class Asset ( path : String ) : DeferredTypeface","title":"Asset"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface More info Resolve the asset path to a typeface with the given context 's assets. [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve the asset path to a typeface with the given context 's assets and provide it asynchronously to fontCallback .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/-asset/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Asset / Asset Asset [androidJvm] Content fun Asset (path: String )","title":"Asset   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/-asset/#asset","text":"[androidJvm] Content fun Asset (path: String )","title":"Asset"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Asset / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface More info Resolve the asset path to a typeface with the given context 's assets. [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve the asset path to a typeface with the given context 's assets and provide it asynchronously to fontCallback . If path is an invalid path, FAIL_REASON_FONT_NOT_FOUND is sent to the callback.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-asset/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Typeface More info Resolve the asset path to a typeface with the given context 's assets. [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve the asset path to a typeface with the given context 's assets and provide it asynchronously to fontCallback . If path is an invalid path, FAIL_REASON_FONT_NOT_FOUND is sent to the callback.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Constant Constant [androidJvm] class Constant ( value : Typeface ) : DeferredTypeface A wrapper for a constant typeface value . Constructors Constant [androidJvm] fun Constant (value: Typeface ) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface More info Always resolves to value , ignoring context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Always post value to fontCallback on the handler thread, or the UI thread if handler is null.","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/#constant","text":"[androidJvm] class Constant ( value : Typeface ) : DeferredTypeface A wrapper for a constant typeface value .","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/#constructors","text":"Constant [androidJvm] fun Constant (value: Typeface )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface More info Always resolves to value , ignoring context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Always post value to fontCallback on the handler thread, or the UI thread if handler is null.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/-constant/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Constant / Constant Constant [androidJvm] Content fun Constant (value: Typeface )","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (value: Typeface )","title":"Constant"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface More info Always resolves to value , ignoring context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Always post value to fontCallback on the handler thread, or the UI thread if handler is null. context is ignored.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Typeface More info Always resolves to value , ignoring context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Always post value to fontCallback on the handler thread, or the UI thread if handler is null. context is ignored.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Resource Resource [androidJvm] class Resource (@ FontRes () id : Int ) : DeferredTypeface A wrapper for a FontRes . Constructors Resource [androidJvm] fun Resource (@ FontRes ()id: Int ) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface ? More info Resolve id to a typeface with the given context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve id to a typeface asynchronously with the given context .","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/#resource","text":"[androidJvm] class Resource (@ FontRes () id : Int ) : DeferredTypeface A wrapper for a FontRes .","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ FontRes ()id: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface ? More info Resolve id to a typeface with the given context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve id to a typeface asynchronously with the given context .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/-resource/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Resource / Resource Resource [androidJvm] Content fun Resource (@ FontRes ()id: Int )","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ FontRes ()id: Int )","title":"Resource"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/resolve/","text":"// deferred-resources / com.backbase.deferredresources / DeferredTypeface / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): Typeface ? More info Resolve id to a typeface with the given context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve id to a typeface asynchronously with the given context . fontCallback will be triggered on the handler 's thread. If handler is null, fontCallback will be triggered on the UI thread.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources/-deferred-typeface/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): Typeface ? More info Resolve id to a typeface with the given context . [androidJvm] Content open override fun resolve (context: Context , fontCallback: ResourcesCompat.FontCallback , handler: Handler ?) More info Resolve id to a typeface asynchronously with the given context . fontCallback will be triggered on the handler 's thread. If handler is null, fontCallback will be triggered on the UI thread.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/","text":"// deferred-resources / com.backbase.deferredresources.bool Package com.backbase.deferredresources.bool Types Name Summary ParcelableDeferredBoolean [androidJvm] Content interface ParcelableDeferredBoolean : DeferredBoolean , Parcelable More info A Parcelable wrapper for resolving a boolean on demand.","title":"Package com.backbase.deferredresources.bool   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/#package-combackbasedeferredresourcesbool","text":"","title":"Package com.backbase.deferredresources.bool"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/#types","text":"Name Summary ParcelableDeferredBoolean [androidJvm] Content interface ParcelableDeferredBoolean : DeferredBoolean , Parcelable More info A Parcelable wrapper for resolving a boolean on demand.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/-parcelable-deferred-boolean/","text":"// deferred-resources / com.backbase.deferredresources.bool / ParcelableDeferredBoolean ParcelableDeferredBoolean [androidJvm] interface ParcelableDeferredBoolean : DeferredBoolean , Parcelable A Parcelable wrapper for resolving a boolean on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): Boolean More info Resolve the boolean. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredBoolean DeferredBoolean DeferredBoolean","title":"ParcelableDeferredBoolean   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/-parcelable-deferred-boolean/#parcelabledeferredboolean","text":"[androidJvm] interface ParcelableDeferredBoolean : DeferredBoolean , Parcelable A Parcelable wrapper for resolving a boolean on demand.","title":"ParcelableDeferredBoolean"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/-parcelable-deferred-boolean/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): Boolean More info Resolve the boolean. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.bool/-parcelable-deferred-boolean/#inheritors","text":"Name DeferredBoolean DeferredBoolean DeferredBoolean","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/","text":"// deferred-resources / com.backbase.deferredresources.color Package com.backbase.deferredresources.color Types Name Summary DeferredColorWithAlpha [androidJvm] Content class DeferredColorWithAlpha ( base : DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong()) alpha : Int ) : ParcelableDeferredColor More info A DeferredColor that always resolves with a specific alpha value, ignoring the base color's alpha. ParcelableDeferredColor [androidJvm] Content interface ParcelableDeferredColor : DeferredColor , Parcelable More info A Parcelable wrapper for resolving a ColorInt color on demand. SdkIntDeferredColor [androidJvm] Content class SdkIntDeferredColor : ParcelableDeferredColor More info A DeferredColor with a different source depending on the runtime Android SDK version. Functions Name Summary withAlpha [androidJvm] Content fun DeferredColor . withAlpha (@ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ): DeferredColorWithAlpha fun DeferredColor . withAlpha (@ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ): DeferredColorWithAlpha More info Create a DeferredColor that resolves with the given alpha , regardless of the base color's original alpha.","title":"Package com.backbase.deferredresources.color   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/#package-combackbasedeferredresourcescolor","text":"","title":"Package com.backbase.deferredresources.color"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/#types","text":"Name Summary DeferredColorWithAlpha [androidJvm] Content class DeferredColorWithAlpha ( base : DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong()) alpha : Int ) : ParcelableDeferredColor More info A DeferredColor that always resolves with a specific alpha value, ignoring the base color's alpha. ParcelableDeferredColor [androidJvm] Content interface ParcelableDeferredColor : DeferredColor , Parcelable More info A Parcelable wrapper for resolving a ColorInt color on demand. SdkIntDeferredColor [androidJvm] Content class SdkIntDeferredColor : ParcelableDeferredColor More info A DeferredColor with a different source depending on the runtime Android SDK version.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/#functions","text":"Name Summary withAlpha [androidJvm] Content fun DeferredColor . withAlpha (@ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ): DeferredColorWithAlpha fun DeferredColor . withAlpha (@ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ): DeferredColorWithAlpha More info Create a DeferredColor that resolves with the given alpha , regardless of the base color's original alpha.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/with-alpha/","text":"// deferred-resources / com.backbase.deferredresources.color / withAlpha withAlpha [androidJvm] Content fun DeferredColor . withAlpha (@ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ): DeferredColorWithAlpha fun DeferredColor . withAlpha (@ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ): DeferredColorWithAlpha More info Create a DeferredColor that resolves with the given alpha , regardless of the base color's original alpha.","title":"withAlpha   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/with-alpha/#withalpha","text":"[androidJvm] Content fun DeferredColor . withAlpha (@ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ): DeferredColorWithAlpha fun DeferredColor . withAlpha (@ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ): DeferredColorWithAlpha More info Create a DeferredColor that resolves with the given alpha , regardless of the base color's original alpha.","title":"withAlpha"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/","text":"// deferred-resources / com.backbase.deferredresources.color / DeferredColorWithAlpha DeferredColorWithAlpha [androidJvm] class DeferredColorWithAlpha ( base : DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong()) alpha : Int ) : ParcelableDeferredColor A DeferredColor that always resolves with a specific alpha value, ignoring the base color's alpha. This class implements android.os.Parcelable . It will throw at runtime if base cannot be marshalled. Constructors DeferredColorWithAlpha [androidJvm] fun DeferredColorWithAlpha (base: DeferredColor , @ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float )Convenience constructor to specify a float alpha value to apply on the base color. DeferredColorWithAlpha [androidJvm] fun DeferredColorWithAlpha (base: DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Using the given context , resolve the base color with the specified alpha applied. resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"DeferredColorWithAlpha   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/#deferredcolorwithalpha","text":"[androidJvm] class DeferredColorWithAlpha ( base : DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong()) alpha : Int ) : ParcelableDeferredColor A DeferredColor that always resolves with a specific alpha value, ignoring the base color's alpha. This class implements android.os.Parcelable . It will throw at runtime if base cannot be marshalled.","title":"DeferredColorWithAlpha"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/#constructors","text":"DeferredColorWithAlpha [androidJvm] fun DeferredColorWithAlpha (base: DeferredColor , @ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float )Convenience constructor to specify a float alpha value to apply on the base color. DeferredColorWithAlpha [androidJvm] fun DeferredColorWithAlpha (base: DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Using the given context , resolve the base color with the specified alpha applied. resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/-deferred-color-with-alpha/","text":"// deferred-resources / com.backbase.deferredresources.color / DeferredColorWithAlpha / DeferredColorWithAlpha DeferredColorWithAlpha [androidJvm] Content fun DeferredColorWithAlpha (base: DeferredColor , @ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ) More info Convenience constructor to specify a float alpha value to apply on the base color. [androidJvm] Content fun DeferredColorWithAlpha (base: DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int )","title":"DeferredColorWithAlpha   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/-deferred-color-with-alpha/#deferredcolorwithalpha","text":"[androidJvm] Content fun DeferredColorWithAlpha (base: DeferredColor , @ FloatRange (from = 0.0.toDouble(), to = 1.0.toDouble())alpha: Float ) More info Convenience constructor to specify a float alpha value to apply on the base color. [androidJvm] Content fun DeferredColorWithAlpha (base: DeferredColor , @ IntRange (from = 0.toLong(), to = 255.toLong())alpha: Int )","title":"DeferredColorWithAlpha"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/resolve-to-state-list/","text":"// deferred-resources / com.backbase.deferredresources.color / DeferredColorWithAlpha / resolveToStateList resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"resolveToStateList   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/resolve-to-state-list/#resolvetostatelist","text":"[androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList .","title":"resolveToStateList"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/resolve/","text":"// deferred-resources / com.backbase.deferredresources.color / DeferredColorWithAlpha / resolve resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Using the given context , resolve the base color with the specified alpha applied.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-deferred-color-with-alpha/resolve/#resolve","text":"[androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Using the given context , resolve the base color with the specified alpha applied.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-parcelable-deferred-color/","text":"// deferred-resources / com.backbase.deferredresources.color / ParcelableDeferredColor ParcelableDeferredColor [androidJvm] interface ParcelableDeferredColor : DeferredColor , Parcelable A Parcelable wrapper for resolving a ColorInt color on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () abstract fun resolve (context: Context ): Int More info Resolve the ColorInt color. resolveToStateList [androidJvm] Content abstract fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredColor DeferredColor DeferredColor DeferredColorWithAlpha SdkIntDeferredColor","title":"ParcelableDeferredColor   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-parcelable-deferred-color/#parcelabledeferredcolor","text":"[androidJvm] interface ParcelableDeferredColor : DeferredColor , Parcelable A Parcelable wrapper for resolving a ColorInt color on demand.","title":"ParcelableDeferredColor"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-parcelable-deferred-color/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () abstract fun resolve (context: Context ): Int More info Resolve the ColorInt color. resolveToStateList [androidJvm] Content abstract fun resolveToStateList (context: Context ): ColorStateList More info Resolve the color to a ColorStateList . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-parcelable-deferred-color/#inheritors","text":"Name DeferredColor DeferredColor DeferredColor DeferredColorWithAlpha SdkIntDeferredColor","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/","text":"// deferred-resources / com.backbase.deferredresources.color / SdkIntDeferredColor SdkIntDeferredColor [androidJvm] class SdkIntDeferredColor : ParcelableDeferredColor A DeferredColor with a different source depending on the runtime Android SDK version. This is useful because different SDK levels treat colors differently in some contexts. For example, SDK 27+ can support light system navigation bar colors, but lower SDKs cannot. This class implements android.os.Parcelable . It will throw at runtime if the SDK-specific source DeferredColor instance cannot be marshalled. Constructors SdkIntDeferredColor [androidJvm] fun SdkIntDeferredColor (minSdk: DeferredColor , sdk15: DeferredColor = minSdk, sdk16: DeferredColor = sdk15, sdk17: DeferredColor = sdk16, sdk18: DeferredColor = sdk17, sdk19: DeferredColor = sdk18, sdk20: DeferredColor = sdk19, sdk21: DeferredColor = sdk20, sdk22: DeferredColor = sdk21, sdk23: DeferredColor = sdk22, sdk24: DeferredColor = sdk23, sdk25: DeferredColor = sdk24, sdk26: DeferredColor = sdk25, sdk27: DeferredColor = sdk26, sdk28: DeferredColor = sdk27, sdk29: DeferredColor = sdk28, sdk30: DeferredColor = sdk29)Construct a DeferredColor instance that resolves to a color specific to the runtime Android SDK version. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve the source DeferredColor to a ColorInt color for the current runtime Android SDK. resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the source DeferredColor to a ColorStateList for the current runtime Android SDK. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"SdkIntDeferredColor   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/#sdkintdeferredcolor","text":"[androidJvm] class SdkIntDeferredColor : ParcelableDeferredColor A DeferredColor with a different source depending on the runtime Android SDK version. This is useful because different SDK levels treat colors differently in some contexts. For example, SDK 27+ can support light system navigation bar colors, but lower SDKs cannot. This class implements android.os.Parcelable . It will throw at runtime if the SDK-specific source DeferredColor instance cannot be marshalled.","title":"SdkIntDeferredColor"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/#constructors","text":"SdkIntDeferredColor [androidJvm] fun SdkIntDeferredColor (minSdk: DeferredColor , sdk15: DeferredColor = minSdk, sdk16: DeferredColor = sdk15, sdk17: DeferredColor = sdk16, sdk18: DeferredColor = sdk17, sdk19: DeferredColor = sdk18, sdk20: DeferredColor = sdk19, sdk21: DeferredColor = sdk20, sdk22: DeferredColor = sdk21, sdk23: DeferredColor = sdk22, sdk24: DeferredColor = sdk23, sdk25: DeferredColor = sdk24, sdk26: DeferredColor = sdk25, sdk27: DeferredColor = sdk26, sdk28: DeferredColor = sdk27, sdk29: DeferredColor = sdk28, sdk30: DeferredColor = sdk29)Construct a DeferredColor instance that resolves to a color specific to the runtime Android SDK version.","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve the source DeferredColor to a ColorInt color for the current runtime Android SDK. resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the source DeferredColor to a ColorStateList for the current runtime Android SDK. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/-sdk-int-deferred-color/","text":"// deferred-resources / com.backbase.deferredresources.color / SdkIntDeferredColor / SdkIntDeferredColor SdkIntDeferredColor [androidJvm] Content fun SdkIntDeferredColor (minSdk: DeferredColor , sdk15: DeferredColor = minSdk, sdk16: DeferredColor = sdk15, sdk17: DeferredColor = sdk16, sdk18: DeferredColor = sdk17, sdk19: DeferredColor = sdk18, sdk20: DeferredColor = sdk19, sdk21: DeferredColor = sdk20, sdk22: DeferredColor = sdk21, sdk23: DeferredColor = sdk22, sdk24: DeferredColor = sdk23, sdk25: DeferredColor = sdk24, sdk26: DeferredColor = sdk25, sdk27: DeferredColor = sdk26, sdk28: DeferredColor = sdk27, sdk29: DeferredColor = sdk28, sdk30: DeferredColor = sdk29) More info Construct a DeferredColor instance that resolves to a color specific to the runtime Android SDK version. Each constructor parameter has a default value of the next-lowest value, allowing Kotlin consumers to provide only each unique source once. For example, the following would resolve to GREEN on SDKs 14-22 and BLUE on SDKs 23+: SdkIntDeferredColor( minSdk = DeferredColor.Constant(Color.GREEN), sdk23 = DeferredColor.Constant(Color.BLUE) )","title":"SdkIntDeferredColor   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/-sdk-int-deferred-color/#sdkintdeferredcolor","text":"[androidJvm] Content fun SdkIntDeferredColor (minSdk: DeferredColor , sdk15: DeferredColor = minSdk, sdk16: DeferredColor = sdk15, sdk17: DeferredColor = sdk16, sdk18: DeferredColor = sdk17, sdk19: DeferredColor = sdk18, sdk20: DeferredColor = sdk19, sdk21: DeferredColor = sdk20, sdk22: DeferredColor = sdk21, sdk23: DeferredColor = sdk22, sdk24: DeferredColor = sdk23, sdk25: DeferredColor = sdk24, sdk26: DeferredColor = sdk25, sdk27: DeferredColor = sdk26, sdk28: DeferredColor = sdk27, sdk29: DeferredColor = sdk28, sdk30: DeferredColor = sdk29) More info Construct a DeferredColor instance that resolves to a color specific to the runtime Android SDK version. Each constructor parameter has a default value of the next-lowest value, allowing Kotlin consumers to provide only each unique source once. For example, the following would resolve to GREEN on SDKs 14-22 and BLUE on SDKs 23+: SdkIntDeferredColor( minSdk = DeferredColor.Constant(Color.GREEN), sdk23 = DeferredColor.Constant(Color.BLUE) )","title":"SdkIntDeferredColor"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/resolve-to-state-list/","text":"// deferred-resources / com.backbase.deferredresources.color / SdkIntDeferredColor / resolveToStateList resolveToStateList [androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the source DeferredColor to a ColorStateList for the current runtime Android SDK.","title":"resolveToStateList   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/resolve-to-state-list/#resolvetostatelist","text":"[androidJvm] Content open override fun resolveToStateList (context: Context ): ColorStateList More info Resolve the source DeferredColor to a ColorStateList for the current runtime Android SDK.","title":"resolveToStateList"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/resolve/","text":"// deferred-resources / com.backbase.deferredresources.color / SdkIntDeferredColor / resolve resolve [androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve the source DeferredColor to a ColorInt color for the current runtime Android SDK.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.color/-sdk-int-deferred-color/resolve/#resolve","text":"[androidJvm] Content @ ColorInt () open override fun resolve (context: Context ): Int More info Resolve the source DeferredColor to a ColorInt color for the current runtime Android SDK.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/","text":"// deferred-resources / com.backbase.deferredresources.dimension Package com.backbase.deferredresources.dimension Types Name Summary ParcelableDeferredDimension [androidJvm] Content interface ParcelableDeferredDimension : DeferredDimension , Parcelable More info A Parcelable wrapper for resolving an integer dimension on demand.","title":"Package com.backbase.deferredresources.dimension   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/#package-combackbasedeferredresourcesdimension","text":"","title":"Package com.backbase.deferredresources.dimension"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/#types","text":"Name Summary ParcelableDeferredDimension [androidJvm] Content interface ParcelableDeferredDimension : DeferredDimension , Parcelable More info A Parcelable wrapper for resolving an integer dimension on demand.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/-parcelable-deferred-dimension/","text":"// deferred-resources / com.backbase.deferredresources.dimension / ParcelableDeferredDimension ParcelableDeferredDimension [androidJvm] interface ParcelableDeferredDimension : DeferredDimension , Parcelable A Parcelable wrapper for resolving an integer dimension on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () abstract fun resolveAsOffset (context: Context ): Int More info Resolve the dimension as an integer pixel value. resolveAsSize [androidJvm] Content @ Px () abstract fun resolveAsSize (context: Context ): Int More info Resolve the dimension as an integer pixel value for use as a size. resolveExact [androidJvm] Content @ Px () abstract fun resolveExact (context: Context ): Float More info Resolve the dimension's exact value. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredDimension DeferredDimension DeferredDimension","title":"ParcelableDeferredDimension   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/-parcelable-deferred-dimension/#parcelabledeferreddimension","text":"[androidJvm] interface ParcelableDeferredDimension : DeferredDimension , Parcelable A Parcelable wrapper for resolving an integer dimension on demand.","title":"ParcelableDeferredDimension"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/-parcelable-deferred-dimension/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolveAsOffset [androidJvm] Content @ Px () abstract fun resolveAsOffset (context: Context ): Int More info Resolve the dimension as an integer pixel value. resolveAsSize [androidJvm] Content @ Px () abstract fun resolveAsSize (context: Context ): Int More info Resolve the dimension as an integer pixel value for use as a size. resolveExact [androidJvm] Content @ Px () abstract fun resolveExact (context: Context ): Float More info Resolve the dimension's exact value. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.dimension/-parcelable-deferred-dimension/#inheritors","text":"Name DeferredDimension DeferredDimension DeferredDimension","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/","text":"// deferred-resources / com.backbase.deferredresources.drawable Package com.backbase.deferredresources.drawable Types Name Summary DeferredColorDrawable [androidJvm] Content class DeferredColorDrawable ( deferredColor : DeferredColor ) : DeferredDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable . Functions Name Summary asDrawable [androidJvm] Content fun DeferredColor . asDrawable (): DeferredColorDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable .","title":"Package com.backbase.deferredresources.drawable   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/#package-combackbasedeferredresourcesdrawable","text":"","title":"Package com.backbase.deferredresources.drawable"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/#types","text":"Name Summary DeferredColorDrawable [androidJvm] Content class DeferredColorDrawable ( deferredColor : DeferredColor ) : DeferredDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/#functions","text":"Name Summary asDrawable [androidJvm] Content fun DeferredColor . asDrawable (): DeferredColorDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable .","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/as-drawable/","text":"// deferred-resources / com.backbase.deferredresources.drawable / asDrawable asDrawable [androidJvm] Content fun DeferredColor . asDrawable (): DeferredColorDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable .","title":"asDrawable   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/as-drawable/#asdrawable","text":"[androidJvm] Content fun DeferredColor . asDrawable (): DeferredColorDrawable More info Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable .","title":"asDrawable"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/","text":"// deferred-resources / com.backbase.deferredresources.drawable / DeferredColorDrawable DeferredColorDrawable [androidJvm] class DeferredColorDrawable ( deferredColor : DeferredColor ) : DeferredDrawable Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable . Constructors DeferredColorDrawable [androidJvm] fun DeferredColorDrawable (deferredColor: DeferredColor ) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): ColorDrawable More info Use context to resolve the color and create a new ColorDrawable displaying that color.","title":"DeferredColorDrawable   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/#deferredcolordrawable","text":"[androidJvm] class DeferredColorDrawable ( deferredColor : DeferredColor ) : DeferredDrawable Convert a DeferredColor to a DeferredDrawable by wrapping the resolved color in a ColorDrawable .","title":"DeferredColorDrawable"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/#constructors","text":"DeferredColorDrawable [androidJvm] fun DeferredColorDrawable (deferredColor: DeferredColor )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): ColorDrawable More info Use context to resolve the color and create a new ColorDrawable displaying that color.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/-deferred-color-drawable/","text":"// deferred-resources / com.backbase.deferredresources.drawable / DeferredColorDrawable / DeferredColorDrawable DeferredColorDrawable [androidJvm] Content fun DeferredColorDrawable (deferredColor: DeferredColor )","title":"DeferredColorDrawable   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/-deferred-color-drawable/#deferredcolordrawable","text":"[androidJvm] Content fun DeferredColorDrawable (deferredColor: DeferredColor )","title":"DeferredColorDrawable"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/resolve/","text":"// deferred-resources / com.backbase.deferredresources.drawable / DeferredColorDrawable / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): ColorDrawable More info Use context to resolve the color and create a new ColorDrawable displaying that color.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.drawable/-deferred-color-drawable/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): ColorDrawable More info Use context to resolve the color and create a new ColorDrawable displaying that color.","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/","text":"// deferred-resources / com.backbase.deferredresources.integer Package com.backbase.deferredresources.integer Types Name Summary ParcelableDeferredInteger [androidJvm] Content interface ParcelableDeferredInteger : DeferredInteger , Parcelable More info A Parcelable wrapper for resolving an integer on demand. ParcelableDeferredIntegerArray [androidJvm] Content interface ParcelableDeferredIntegerArray : DeferredIntegerArray , Parcelable More info A Parcelable wrapper for resolving an integer array on demand.","title":"Package com.backbase.deferredresources.integer   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/#package-combackbasedeferredresourcesinteger","text":"","title":"Package com.backbase.deferredresources.integer"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/#types","text":"Name Summary ParcelableDeferredInteger [androidJvm] Content interface ParcelableDeferredInteger : DeferredInteger , Parcelable More info A Parcelable wrapper for resolving an integer on demand. ParcelableDeferredIntegerArray [androidJvm] Content interface ParcelableDeferredIntegerArray : DeferredIntegerArray , Parcelable More info A Parcelable wrapper for resolving an integer array on demand.","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer/","text":"// deferred-resources / com.backbase.deferredresources.integer / ParcelableDeferredInteger ParcelableDeferredInteger [androidJvm] interface ParcelableDeferredInteger : DeferredInteger , Parcelable A Parcelable wrapper for resolving an integer on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): Int More info Resolve the integer. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredInteger DeferredInteger","title":"ParcelableDeferredInteger   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer/#parcelabledeferredinteger","text":"[androidJvm] interface ParcelableDeferredInteger : DeferredInteger , Parcelable A Parcelable wrapper for resolving an integer on demand.","title":"ParcelableDeferredInteger"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): Int More info Resolve the integer. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer/#inheritors","text":"Name DeferredInteger DeferredInteger","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer-array/","text":"// deferred-resources / com.backbase.deferredresources.integer / ParcelableDeferredIntegerArray ParcelableDeferredIntegerArray [androidJvm] interface ParcelableDeferredIntegerArray : DeferredIntegerArray , Parcelable A Parcelable wrapper for resolving an integer array on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): IntArray More info Resolve the integer array. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredIntegerArray DeferredIntegerArray","title":"ParcelableDeferredIntegerArray   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer-array/#parcelabledeferredintegerarray","text":"[androidJvm] interface ParcelableDeferredIntegerArray : DeferredIntegerArray , Parcelable A Parcelable wrapper for resolving an integer array on demand.","title":"ParcelableDeferredIntegerArray"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer-array/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): IntArray More info Resolve the integer array. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.integer/-parcelable-deferred-integer-array/#inheritors","text":"Name DeferredIntegerArray DeferredIntegerArray","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/","text":"// deferred-resources / com.backbase.deferredresources.text Package com.backbase.deferredresources.text Types Name Summary FormattedDeferredPlurals [androidJvm] Content class FormattedDeferredPlurals : ParcelableDeferredPlurals More info A DeferredPlurals implementation that wraps a DeferredFormattedPlurals along with its formatArgs . FormattedDeferredText [androidJvm] Content class FormattedDeferredText : ParcelableDeferredText More info A DeferredText implementation that wraps a DeferredFormattedString along with its formatArgs . ParcelableDeferredFormattedPlurals [androidJvm] Content interface ParcelableDeferredFormattedPlurals : DeferredFormattedPlurals , Parcelable More info A Parcelable wrapper for resolving format-able pluralized text on demand. ParcelableDeferredFormattedString [androidJvm] Content interface ParcelableDeferredFormattedString : DeferredFormattedString , Parcelable More info A Parcelable wrapper for resolving a formatted string on demand. ParcelableDeferredPlurals [androidJvm] Content interface ParcelableDeferredPlurals : DeferredPlurals , Parcelable More info A Parcelable wrapper for resolving pluralized text on demand. ParcelableDeferredText [androidJvm] Content interface ParcelableDeferredText : DeferredText , Parcelable More info A Parcelable wrapper for resolving text on demand. ParcelableDeferredTextArray [androidJvm] Content interface ParcelableDeferredTextArray : DeferredTextArray , Parcelable More info A Parcelable wrapper for resolving a text array on demand. QuantifiedDeferredFormattedString [androidJvm] Content class QuantifiedDeferredFormattedString ( wrapped : DeferredFormattedPlurals , quantity : Int ) : ParcelableDeferredFormattedString More info A DeferredFormattedString implementation that wraps a DeferredFormattedPlurals along with its quantity . QuantifiedDeferredText [androidJvm] Content class QuantifiedDeferredText ( wrapped : DeferredPlurals , quantity : Int ) : ParcelableDeferredText More info A DeferredText implementation that wraps a DeferredPlurals along with its quantity . QuantifiedFormattedDeferredText [androidJvm] Content class QuantifiedFormattedDeferredText : ParcelableDeferredText More info A DeferredText implementation that wraps a DeferredFormattedPlurals along with its quantity and formatArgs . Functions Name Summary resolveToString [androidJvm] Content fun DeferredText . resolveToString (context: Context ): String More info Resolve a DeferredText to a string rather than a CharSequence by calling toString on the resolved value. withFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing formatArgs to be used when resolved. [androidJvm] Content ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing its formatArgs to be used when resolved. [androidJvm] Content fun DeferredFormattedString . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedString ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedString to a normal DeferredText by providing formatArgs to be used when resolved. withQuantity [androidJvm] Content fun DeferredFormattedPlurals . withQuantity (quantity: Int ): QuantifiedDeferredFormattedString ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredFormattedString More info Convert a DeferredFormattedPlurals to a DeferredFormattedString by providing a quantity to be used when resolved. [androidJvm] Content fun DeferredPlurals . withQuantity (quantity: Int ): QuantifiedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredText More info Convert a DeferredPlurals to a normal DeferredText by providing a quantity to be used when resolved. withQuantityAndFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withQuantityAndFormatArgs (quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): QuantifiedFormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantityAndFormatArgs~~ ~~(~~~~quantity~~~~:~~ Int ~~,~~ ~~vararg~~ ~~formatArgs~~~~:~~ Any ~~= arrayOf(quantity)~~~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedPlurals to a normal DeferredText by providing a quantity and formatArgs to be used when resolved.","title":"Package com.backbase.deferredresources.text   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/#package-combackbasedeferredresourcestext","text":"","title":"Package com.backbase.deferredresources.text"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/#types","text":"Name Summary FormattedDeferredPlurals [androidJvm] Content class FormattedDeferredPlurals : ParcelableDeferredPlurals More info A DeferredPlurals implementation that wraps a DeferredFormattedPlurals along with its formatArgs . FormattedDeferredText [androidJvm] Content class FormattedDeferredText : ParcelableDeferredText More info A DeferredText implementation that wraps a DeferredFormattedString along with its formatArgs . ParcelableDeferredFormattedPlurals [androidJvm] Content interface ParcelableDeferredFormattedPlurals : DeferredFormattedPlurals , Parcelable More info A Parcelable wrapper for resolving format-able pluralized text on demand. ParcelableDeferredFormattedString [androidJvm] Content interface ParcelableDeferredFormattedString : DeferredFormattedString , Parcelable More info A Parcelable wrapper for resolving a formatted string on demand. ParcelableDeferredPlurals [androidJvm] Content interface ParcelableDeferredPlurals : DeferredPlurals , Parcelable More info A Parcelable wrapper for resolving pluralized text on demand. ParcelableDeferredText [androidJvm] Content interface ParcelableDeferredText : DeferredText , Parcelable More info A Parcelable wrapper for resolving text on demand. ParcelableDeferredTextArray [androidJvm] Content interface ParcelableDeferredTextArray : DeferredTextArray , Parcelable More info A Parcelable wrapper for resolving a text array on demand. QuantifiedDeferredFormattedString [androidJvm] Content class QuantifiedDeferredFormattedString ( wrapped : DeferredFormattedPlurals , quantity : Int ) : ParcelableDeferredFormattedString More info A DeferredFormattedString implementation that wraps a DeferredFormattedPlurals along with its quantity . QuantifiedDeferredText [androidJvm] Content class QuantifiedDeferredText ( wrapped : DeferredPlurals , quantity : Int ) : ParcelableDeferredText More info A DeferredText implementation that wraps a DeferredPlurals along with its quantity . QuantifiedFormattedDeferredText [androidJvm] Content class QuantifiedFormattedDeferredText : ParcelableDeferredText More info A DeferredText implementation that wraps a DeferredFormattedPlurals along with its quantity and formatArgs .","title":"Types"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/#functions","text":"Name Summary resolveToString [androidJvm] Content fun DeferredText . resolveToString (context: Context ): String More info Resolve a DeferredText to a string rather than a CharSequence by calling toString on the resolved value. withFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing formatArgs to be used when resolved. [androidJvm] Content ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing its formatArgs to be used when resolved. [androidJvm] Content fun DeferredFormattedString . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedString ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedString to a normal DeferredText by providing formatArgs to be used when resolved. withQuantity [androidJvm] Content fun DeferredFormattedPlurals . withQuantity (quantity: Int ): QuantifiedDeferredFormattedString ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredFormattedString More info Convert a DeferredFormattedPlurals to a DeferredFormattedString by providing a quantity to be used when resolved. [androidJvm] Content fun DeferredPlurals . withQuantity (quantity: Int ): QuantifiedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredText More info Convert a DeferredPlurals to a normal DeferredText by providing a quantity to be used when resolved. withQuantityAndFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withQuantityAndFormatArgs (quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): QuantifiedFormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantityAndFormatArgs~~ ~~(~~~~quantity~~~~:~~ Int ~~,~~ ~~vararg~~ ~~formatArgs~~~~:~~ Any ~~= arrayOf(quantity)~~~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedPlurals to a normal DeferredText by providing a quantity and formatArgs to be used when resolved.","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/resolve-to-string/","text":"// deferred-resources / com.backbase.deferredresources.text / resolveToString resolveToString [androidJvm] Content fun DeferredText . resolveToString (context: Context ): String More info Resolve a DeferredText to a string rather than a CharSequence by calling toString on the resolved value. Any styling information from the original CharSequence will typically be removed from the resolved string.","title":"resolveToString   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/resolve-to-string/#resolvetostring","text":"[androidJvm] Content fun DeferredText . resolveToString (context: Context ): String More info Resolve a DeferredText to a string rather than a CharSequence by calling toString on the resolved value. Any styling information from the original CharSequence will typically be removed from the resolved string.","title":"resolveToString"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/with-format-args/","text":"// deferred-resources / com.backbase.deferredresources.text / withFormatArgs withFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing formatArgs to be used when resolved. A quantity must still be provided when resolved. [androidJvm] Content ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing its formatArgs to be used when resolved. A quantity must still be provided when resolved. [androidJvm] Content fun DeferredFormattedString . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedString ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedString to a normal DeferredText by providing formatArgs to be used when resolved.","title":"withFormatArgs   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/with-format-args/#withformatargs","text":"[androidJvm] Content fun DeferredFormattedPlurals . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing formatArgs to be used when resolved. A quantity must still be provided when resolved. [androidJvm] Content ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredPlurals More info Convert a DeferredFormattedPlurals to a DeferredPlurals by providing its formatArgs to be used when resolved. A quantity must still be provided when resolved. [androidJvm] Content fun DeferredFormattedString . withFormatArgs (vararg formatArgs: Any ): FormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedString ~~.~~ ~~withFormatArgs~~ ~~(~~~~vararg~~ ~~formatArgs~~~~:~~ Any ~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedString to a normal DeferredText by providing formatArgs to be used when resolved.","title":"withFormatArgs"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/with-quantity-and-format-args/","text":"// deferred-resources / com.backbase.deferredresources.text / withQuantityAndFormatArgs withQuantityAndFormatArgs [androidJvm] Content fun DeferredFormattedPlurals . withQuantityAndFormatArgs (quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): QuantifiedFormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantityAndFormatArgs~~ ~~(~~~~quantity~~~~:~~ Int ~~,~~ ~~vararg~~ ~~formatArgs~~~~:~~ Any ~~= arrayOf(quantity)~~~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedPlurals to a normal DeferredText by providing a quantity and formatArgs to be used when resolved.","title":"withQuantityAndFormatArgs   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/with-quantity-and-format-args/#withquantityandformatargs","text":"[androidJvm] Content fun DeferredFormattedPlurals . withQuantityAndFormatArgs (quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): QuantifiedFormattedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantityAndFormatArgs~~ ~~(~~~~quantity~~~~:~~ Int ~~,~~ ~~vararg~~ ~~formatArgs~~~~:~~ Any ~~= arrayOf(quantity)~~~~)~~~~:~~ DeferredText More info Convert a DeferredFormattedPlurals to a normal DeferredText by providing a quantity and formatArgs to be used when resolved.","title":"withQuantityAndFormatArgs"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/with-quantity/","text":"// deferred-resources / com.backbase.deferredresources.text / withQuantity withQuantity [androidJvm] Content fun DeferredFormattedPlurals . withQuantity (quantity: Int ): QuantifiedDeferredFormattedString ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredFormattedString More info Convert a DeferredFormattedPlurals to a DeferredFormattedString by providing a quantity to be used when resolved. Format arguments must still be provided when resolved. [androidJvm] Content fun DeferredPlurals . withQuantity (quantity: Int ): QuantifiedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredText More info Convert a DeferredPlurals to a normal DeferredText by providing a quantity to be used when resolved.","title":"withQuantity   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/with-quantity/#withquantity","text":"[androidJvm] Content fun DeferredFormattedPlurals . withQuantity (quantity: Int ): QuantifiedDeferredFormattedString ~~fun~~ ~~<~~ T ~~>~~ DeferredFormattedPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredFormattedString More info Convert a DeferredFormattedPlurals to a DeferredFormattedString by providing a quantity to be used when resolved. Format arguments must still be provided when resolved. [androidJvm] Content fun DeferredPlurals . withQuantity (quantity: Int ): QuantifiedDeferredText ~~fun~~ ~~<~~ T ~~>~~ DeferredPlurals ~~.~~ ~~withQuantity~~ ~~(~~~~quantity~~~~:~~ Int ~~)~~~~:~~ DeferredText More info Convert a DeferredPlurals to a normal DeferredText by providing a quantity to be used when resolved.","title":"withQuantity"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/","text":"// deferred-resources / com.backbase.deferredresources.text / FormattedDeferredPlurals FormattedDeferredPlurals [androidJvm] class FormattedDeferredPlurals : ParcelableDeferredPlurals A DeferredPlurals implementation that wraps a DeferredFormattedPlurals along with its formatArgs . Designed for use cases where the format args are determined at the declaring site while the quantity is determined at the resolving site. If the format args are to be determined at the resolving site, stick with DeferredFormattedPlurals . If the quantity is to be determined at the declaring site, see QuantifiedFormattedDeferredText . This class implements android.os.Parcelable . It will throw at runtime if wrapped or any of formatArgs cannot be marshalled. Constructors FormattedDeferredPlurals [androidJvm] fun FormattedDeferredPlurals (wrapped: DeferredFormattedPlurals , vararg formatArgs: Any )Initialize with the given wrapped and formatArgs . Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"FormattedDeferredPlurals   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/#formatteddeferredplurals","text":"[androidJvm] class FormattedDeferredPlurals : ParcelableDeferredPlurals A DeferredPlurals implementation that wraps a DeferredFormattedPlurals along with its formatArgs . Designed for use cases where the format args are determined at the declaring site while the quantity is determined at the resolving site. If the format args are to be determined at the resolving site, stick with DeferredFormattedPlurals . If the quantity is to be determined at the declaring site, see QuantifiedFormattedDeferredText . This class implements android.os.Parcelable . It will throw at runtime if wrapped or any of formatArgs cannot be marshalled.","title":"FormattedDeferredPlurals"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/#constructors","text":"FormattedDeferredPlurals [androidJvm] fun FormattedDeferredPlurals (wrapped: DeferredFormattedPlurals , vararg formatArgs: Any )Initialize with the given wrapped and formatArgs .","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/-formatted-deferred-plurals/","text":"// deferred-resources / com.backbase.deferredresources.text / FormattedDeferredPlurals / FormattedDeferredPlurals FormattedDeferredPlurals [androidJvm] Content fun FormattedDeferredPlurals (wrapped: DeferredFormattedPlurals , vararg formatArgs: Any ) More info Initialize with the given wrapped and formatArgs . This constructor protects against array mutability by making a copy of formatArgs .","title":"FormattedDeferredPlurals   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/-formatted-deferred-plurals/#formatteddeferredplurals","text":"[androidJvm] Content fun FormattedDeferredPlurals (wrapped: DeferredFormattedPlurals , vararg formatArgs: Any ) More info Initialize with the given wrapped and formatArgs . This constructor protects against array mutability by making a copy of formatArgs .","title":"FormattedDeferredPlurals"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/resolve/","text":"// deferred-resources / com.backbase.deferredresources.text / FormattedDeferredPlurals / resolve resolve [androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-plurals/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / FormattedDeferredText FormattedDeferredText [androidJvm] class FormattedDeferredText : ParcelableDeferredText A DeferredText implementation that wraps a DeferredFormattedString along with its formatArgs . Designed for use cases where the format args are determined at the declaring site rather than the resolving site. If the format args are to be determined at the resolving site, stick with DeferredFormattedString . This class implements android.os.Parcelable . It will throw at runtime if wrapped or any of formatArgs cannot be marshalled. Constructors FormattedDeferredText [androidJvm] fun FormattedDeferredText (wrapped: DeferredFormattedString , vararg formatArgs: Any )Initialize with the given wrapped and formatArgs . Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"FormattedDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/#formatteddeferredtext","text":"[androidJvm] class FormattedDeferredText : ParcelableDeferredText A DeferredText implementation that wraps a DeferredFormattedString along with its formatArgs . Designed for use cases where the format args are determined at the declaring site rather than the resolving site. If the format args are to be determined at the resolving site, stick with DeferredFormattedString . This class implements android.os.Parcelable . It will throw at runtime if wrapped or any of formatArgs cannot be marshalled.","title":"FormattedDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/#constructors","text":"FormattedDeferredText [androidJvm] fun FormattedDeferredText (wrapped: DeferredFormattedString , vararg formatArgs: Any )Initialize with the given wrapped and formatArgs .","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/-formatted-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / FormattedDeferredText / FormattedDeferredText FormattedDeferredText [androidJvm] Content fun FormattedDeferredText (wrapped: DeferredFormattedString , vararg formatArgs: Any ) More info Initialize with the given wrapped and formatArgs . This constructor protects against array mutability by making a copy of formatArgs .","title":"FormattedDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/-formatted-deferred-text/#formatteddeferredtext","text":"[androidJvm] Content fun FormattedDeferredText (wrapped: DeferredFormattedString , vararg formatArgs: Any ) More info Initialize with the given wrapped and formatArgs . This constructor protects against array mutability by making a copy of formatArgs .","title":"FormattedDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/resolve/","text":"// deferred-resources / com.backbase.deferredresources.text / FormattedDeferredText / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with formatArgs using the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-formatted-deferred-text/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with formatArgs using the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-plurals/","text":"// deferred-resources / com.backbase.deferredresources.text / ParcelableDeferredFormattedPlurals ParcelableDeferredFormattedPlurals [androidJvm] interface ParcelableDeferredFormattedPlurals : DeferredFormattedPlurals , Parcelable A Parcelable wrapper for resolving format-able pluralized text on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): String More info Resolve the string for the given quantity with the given formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredFormattedPlurals DeferredFormattedPlurals","title":"ParcelableDeferredFormattedPlurals   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-plurals/#parcelabledeferredformattedplurals","text":"[androidJvm] interface ParcelableDeferredFormattedPlurals : DeferredFormattedPlurals , Parcelable A Parcelable wrapper for resolving format-able pluralized text on demand.","title":"ParcelableDeferredFormattedPlurals"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-plurals/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)): String More info Resolve the string for the given quantity with the given formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-plurals/#inheritors","text":"Name DeferredFormattedPlurals DeferredFormattedPlurals","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-string/","text":"// deferred-resources / com.backbase.deferredresources.text / ParcelableDeferredFormattedString ParcelableDeferredFormattedString [androidJvm] interface ParcelableDeferredFormattedString : DeferredFormattedString , Parcelable A Parcelable wrapper for resolving a formatted string on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve the string with the supplied formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredFormattedString DeferredFormattedString QuantifiedDeferredFormattedString","title":"ParcelableDeferredFormattedString   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-string/#parcelabledeferredformattedstring","text":"[androidJvm] interface ParcelableDeferredFormattedString : DeferredFormattedString , Parcelable A Parcelable wrapper for resolving a formatted string on demand.","title":"ParcelableDeferredFormattedString"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-string/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve the string with the supplied formatArgs . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-formatted-string/#inheritors","text":"Name DeferredFormattedString DeferredFormattedString QuantifiedDeferredFormattedString","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-plurals/","text":"// deferred-resources / com.backbase.deferredresources.text / ParcelableDeferredPlurals ParcelableDeferredPlurals [androidJvm] interface ParcelableDeferredPlurals : DeferredPlurals , Parcelable A Parcelable wrapper for resolving pluralized text on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve the text for the given quantity . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredPlurals DeferredPlurals FormattedDeferredPlurals","title":"ParcelableDeferredPlurals   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-plurals/#parcelabledeferredplurals","text":"[androidJvm] interface ParcelableDeferredPlurals : DeferredPlurals , Parcelable A Parcelable wrapper for resolving pluralized text on demand.","title":"ParcelableDeferredPlurals"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-plurals/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context , quantity: Int ): CharSequence More info Resolve the text for the given quantity . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-plurals/#inheritors","text":"Name DeferredPlurals DeferredPlurals FormattedDeferredPlurals","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / ParcelableDeferredText ParcelableDeferredText [androidJvm] interface ParcelableDeferredText : DeferredText , Parcelable A Parcelable wrapper for resolving text on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): CharSequence More info Resolve the text. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredText DeferredText FormattedDeferredText QuantifiedDeferredText QuantifiedFormattedDeferredText","title":"ParcelableDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text/#parcelabledeferredtext","text":"[androidJvm] interface ParcelableDeferredText : DeferredText , Parcelable A Parcelable wrapper for resolving text on demand.","title":"ParcelableDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): CharSequence More info Resolve the text. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text/#inheritors","text":"Name DeferredText DeferredText FormattedDeferredText QuantifiedDeferredText QuantifiedFormattedDeferredText","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text-array/","text":"// deferred-resources / com.backbase.deferredresources.text / ParcelableDeferredTextArray ParcelableDeferredTextArray [androidJvm] interface ParcelableDeferredTextArray : DeferredTextArray , Parcelable A Parcelable wrapper for resolving a text array on demand. Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): Array CharSequence > More info Resolve the text array. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int ) Inheritors Name DeferredTextArray DeferredTextArray","title":"ParcelableDeferredTextArray   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text-array/#parcelabledeferredtextarray","text":"[androidJvm] interface ParcelableDeferredTextArray : DeferredTextArray , Parcelable A Parcelable wrapper for resolving a text array on demand.","title":"ParcelableDeferredTextArray"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text-array/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content abstract fun resolve (context: Context ): Array CharSequence > More info Resolve the text array. writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-parcelable-deferred-text-array/#inheritors","text":"Name DeferredTextArray DeferredTextArray","title":"Inheritors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedDeferredFormattedString QuantifiedDeferredFormattedString [androidJvm] class QuantifiedDeferredFormattedString ( wrapped : DeferredFormattedPlurals , quantity : Int ) : ParcelableDeferredFormattedString A DeferredFormattedString implementation that wraps a DeferredFormattedPlurals along with its quantity . Designed for use cases where the quantity is determined at the declaring site while the format args are determined at the resolving site. If the quantity is to be determined at the resolving site, stick with DeferredFormattedPlurals . If the format args are to be determined at the declaring site, see QuantifiedFormattedDeferredText . This class implements android.os.Parcelable . It will throw at runtime if wrapped cannot be marshalled. Constructors QuantifiedDeferredFormattedString [androidJvm] fun QuantifiedDeferredFormattedString (wrapped: DeferredFormattedPlurals , quantity: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve wrapped with quantity and formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"QuantifiedDeferredFormattedString   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/#quantifieddeferredformattedstring","text":"[androidJvm] class QuantifiedDeferredFormattedString ( wrapped : DeferredFormattedPlurals , quantity : Int ) : ParcelableDeferredFormattedString A DeferredFormattedString implementation that wraps a DeferredFormattedPlurals along with its quantity . Designed for use cases where the quantity is determined at the declaring site while the format args are determined at the resolving site. If the quantity is to be determined at the resolving site, stick with DeferredFormattedPlurals . If the format args are to be determined at the declaring site, see QuantifiedFormattedDeferredText . This class implements android.os.Parcelable . It will throw at runtime if wrapped cannot be marshalled.","title":"QuantifiedDeferredFormattedString"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/#constructors","text":"QuantifiedDeferredFormattedString [androidJvm] fun QuantifiedDeferredFormattedString (wrapped: DeferredFormattedPlurals , quantity: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve wrapped with quantity and formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/-quantified-deferred-formatted-string/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedDeferredFormattedString / QuantifiedDeferredFormattedString QuantifiedDeferredFormattedString [androidJvm] Content fun QuantifiedDeferredFormattedString (wrapped: DeferredFormattedPlurals , quantity: Int )","title":"QuantifiedDeferredFormattedString   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/-quantified-deferred-formatted-string/#quantifieddeferredformattedstring","text":"[androidJvm] Content fun QuantifiedDeferredFormattedString (wrapped: DeferredFormattedPlurals , quantity: Int )","title":"QuantifiedDeferredFormattedString"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/resolve/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedDeferredFormattedString / resolve resolve [androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve wrapped with quantity and formatArgs using the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-formatted-string/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context , vararg formatArgs: Any ): String More info Resolve wrapped with quantity and formatArgs using the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedDeferredText QuantifiedDeferredText [androidJvm] class QuantifiedDeferredText ( wrapped : DeferredPlurals , quantity : Int ) : ParcelableDeferredText A DeferredText implementation that wraps a DeferredPlurals along with its quantity . Designed for use cases where the quantity is determined at the declaring site rather than the resolving site. If the quantity is to be determined at the resolving site, stick with DeferredPlurals . This class implements android.os.Parcelable . It will throw at runtime if wrapped cannot be marshalled. Constructors QuantifiedDeferredText [androidJvm] fun QuantifiedDeferredText (wrapped: DeferredPlurals , quantity: Int ) Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped for quantity using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"QuantifiedDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/#quantifieddeferredtext","text":"[androidJvm] class QuantifiedDeferredText ( wrapped : DeferredPlurals , quantity : Int ) : ParcelableDeferredText A DeferredText implementation that wraps a DeferredPlurals along with its quantity . Designed for use cases where the quantity is determined at the declaring site rather than the resolving site. If the quantity is to be determined at the resolving site, stick with DeferredPlurals . This class implements android.os.Parcelable . It will throw at runtime if wrapped cannot be marshalled.","title":"QuantifiedDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/#constructors","text":"QuantifiedDeferredText [androidJvm] fun QuantifiedDeferredText (wrapped: DeferredPlurals , quantity: Int )","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped for quantity using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/-quantified-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedDeferredText / QuantifiedDeferredText QuantifiedDeferredText [androidJvm] Content fun QuantifiedDeferredText (wrapped: DeferredPlurals , quantity: Int )","title":"QuantifiedDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/-quantified-deferred-text/#quantifieddeferredtext","text":"[androidJvm] Content fun QuantifiedDeferredText (wrapped: DeferredPlurals , quantity: Int )","title":"QuantifiedDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/resolve/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedDeferredText / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped for quantity using the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-deferred-text/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped for quantity using the given context .","title":"resolve"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedFormattedDeferredText QuantifiedFormattedDeferredText [androidJvm] class QuantifiedFormattedDeferredText : ParcelableDeferredText A DeferredText implementation that wraps a DeferredFormattedPlurals along with its quantity and formatArgs . Designed for use cases where the quantity and format args are determined at the declaring site rather than the resolving site. If the quantity and format args are to be determined at the resolving site, stick with DeferredFormattedPlurals . This class implements android.os.Parcelable . It will throw at runtime if wrapped or any of formatArgs cannot be marshalled. Constructors QuantifiedFormattedDeferredText [androidJvm] fun QuantifiedFormattedDeferredText (wrapped: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any = arrayOf(quantity))Initialize with the given wrapped , quantity , and formatArgs . Functions Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"QuantifiedFormattedDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/#quantifiedformatteddeferredtext","text":"[androidJvm] class QuantifiedFormattedDeferredText : ParcelableDeferredText A DeferredText implementation that wraps a DeferredFormattedPlurals along with its quantity and formatArgs . Designed for use cases where the quantity and format args are determined at the declaring site rather than the resolving site. If the quantity and format args are to be determined at the resolving site, stick with DeferredFormattedPlurals . This class implements android.os.Parcelable . It will throw at runtime if wrapped or any of formatArgs cannot be marshalled.","title":"QuantifiedFormattedDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/#constructors","text":"QuantifiedFormattedDeferredText [androidJvm] fun QuantifiedFormattedDeferredText (wrapped: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any = arrayOf(quantity))Initialize with the given wrapped , quantity , and formatArgs .","title":"Constructors"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/#functions","text":"Name Summary describeContents [androidJvm] Content abstract fun describeContents (): Int resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context . writeToParcel [androidJvm] Content abstract fun writeToParcel (p0: Parcel , p1: Int )","title":"Functions"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/-quantified-formatted-deferred-text/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedFormattedDeferredText / QuantifiedFormattedDeferredText QuantifiedFormattedDeferredText [androidJvm] Content fun QuantifiedFormattedDeferredText (wrapped: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)) More info Initialize with the given wrapped , quantity , and formatArgs . This constructor protects against array mutability by making a copy of formatArgs .","title":"QuantifiedFormattedDeferredText   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/-quantified-formatted-deferred-text/#quantifiedformatteddeferredtext","text":"[androidJvm] Content fun QuantifiedFormattedDeferredText (wrapped: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any = arrayOf(quantity)) More info Initialize with the given wrapped , quantity , and formatArgs . This constructor protects against array mutability by making a copy of formatArgs .","title":"QuantifiedFormattedDeferredText"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/resolve/","text":"// deferred-resources / com.backbase.deferredresources.text / QuantifiedFormattedDeferredText / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources/deferred-resources/com.backbase.deferredresources.text/-quantified-formatted-deferred-text/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): CharSequence More info Resolve wrapped with quantity and formatArgs using the given context .","title":"resolve"},{"location":"1.x/deferred-resources-animation-lottie/","text":"// deferred-resources-animation-lottie deferred-resources-animation-lottie Packages Name com.backbase.deferredresources.animation.lottie","title":"deferred-resources-animation-lottie   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/#deferred-resources-animation-lottie","text":"","title":"deferred-resources-animation-lottie"},{"location":"1.x/deferred-resources-animation-lottie/#packages","text":"Name com.backbase.deferredresources.animation.lottie","title":"Packages"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie Package com.backbase.deferredresources.animation.lottie Types Name Summary DeferredLottieDrawable [androidJvm] Content interface DeferredLottieDrawable : DeferredDrawable More info A wrapper for resolving a LottieDrawable on demand.","title":"Package com.backbase.deferredresources.animation.lottie   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/#package-combackbasedeferredresourcesanimationlottie","text":"","title":"Package com.backbase.deferredresources.animation.lottie"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/#types","text":"Name Summary DeferredLottieDrawable [androidJvm] Content interface DeferredLottieDrawable : DeferredDrawable More info A wrapper for resolving a LottieDrawable on demand.","title":"Types"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable DeferredLottieDrawable [androidJvm] interface DeferredLottieDrawable : DeferredDrawable A wrapper for resolving a LottieDrawable on demand. Types Name Summary Asset [androidJvm] Content class Asset ( fileName : String , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable More info A wrapper for a LottieDrawable stored in assets folder with name fileName . Constant [androidJvm] Content class Constant ( drawable : LottieDrawable?) : DeferredLottieDrawable More info A wrapper for a constant LottieDrawable drawable . Resource [androidJvm] Content class Resource (@ RawRes () rawResId : Int , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable More info A wrapper for a LottieDrawable . Stream [androidJvm] Content class Stream ( stream : InputStream , key : String ?, transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable More info A wrapper for a LottieDrawable provided as a stream object from a remote or local storage location. Functions Name Summary resolve [androidJvm] Content abstract override fun resolve (context: Context ): LottieDrawable? More info Resolve the LottieDrawable. Inheritors Name DeferredLottieDrawable DeferredLottieDrawable DeferredLottieDrawable DeferredLottieDrawable","title":"DeferredLottieDrawable   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/#deferredlottiedrawable","text":"[androidJvm] interface DeferredLottieDrawable : DeferredDrawable A wrapper for resolving a LottieDrawable on demand.","title":"DeferredLottieDrawable"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/#types","text":"Name Summary Asset [androidJvm] Content class Asset ( fileName : String , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable More info A wrapper for a LottieDrawable stored in assets folder with name fileName . Constant [androidJvm] Content class Constant ( drawable : LottieDrawable?) : DeferredLottieDrawable More info A wrapper for a constant LottieDrawable drawable . Resource [androidJvm] Content class Resource (@ RawRes () rawResId : Int , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable More info A wrapper for a LottieDrawable . Stream [androidJvm] Content class Stream ( stream : InputStream , key : String ?, transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable More info A wrapper for a LottieDrawable provided as a stream object from a remote or local storage location.","title":"Types"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/#functions","text":"Name Summary resolve [androidJvm] Content abstract override fun resolve (context: Context ): LottieDrawable? More info Resolve the LottieDrawable.","title":"Functions"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/#inheritors","text":"Name DeferredLottieDrawable DeferredLottieDrawable DeferredLottieDrawable DeferredLottieDrawable","title":"Inheritors"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/resolve/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / resolve resolve [androidJvm] Content abstract override fun resolve (context: Context ): LottieDrawable? More info Resolve the LottieDrawable.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/resolve/#resolve","text":"[androidJvm] Content abstract override fun resolve (context: Context ): LottieDrawable? More info Resolve the LottieDrawable.","title":"resolve"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Asset Asset [androidJvm] class Asset ( fileName : String , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable A wrapper for a LottieDrawable stored in assets folder with name fileName . Optionally provide transformations (such as LottieDrawable.setRepeatCount) to apply each time the LottieDrawable is resolved. Constructors Asset [androidJvm] fun Asset (fileName: String , transformations: LottieDrawable.( Context ) -> Unit = {}) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve fileName to a LottieDrawable with the given context .","title":"Asset   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/#asset","text":"[androidJvm] class Asset ( fileName : String , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable A wrapper for a LottieDrawable stored in assets folder with name fileName . Optionally provide transformations (such as LottieDrawable.setRepeatCount) to apply each time the LottieDrawable is resolved.","title":"Asset"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/#constructors","text":"Asset [androidJvm] fun Asset (fileName: String , transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Constructors"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve fileName to a LottieDrawable with the given context .","title":"Functions"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/-asset/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Asset / Asset Asset [androidJvm] Content fun Asset (fileName: String , transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Asset   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/-asset/#asset","text":"[androidJvm] Content fun Asset (fileName: String , transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Asset"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/resolve/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Asset / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve fileName to a LottieDrawable with the given context . Applies transformations before returning.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-asset/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve fileName to a LottieDrawable with the given context . Applies transformations before returning.","title":"resolve"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Constant Constant [androidJvm] class Constant ( drawable : LottieDrawable?) : DeferredLottieDrawable A wrapper for a constant LottieDrawable drawable . Constructors Constant [androidJvm] fun Constant (drawable: LottieDrawable?) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Always resolves to drawable , ignoring context .","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/#constant","text":"[androidJvm] class Constant ( drawable : LottieDrawable?) : DeferredLottieDrawable A wrapper for a constant LottieDrawable drawable .","title":"Constant"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/#constructors","text":"Constant [androidJvm] fun Constant (drawable: LottieDrawable?)","title":"Constructors"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Always resolves to drawable , ignoring context .","title":"Functions"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/-constant/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Constant / Constant Constant [androidJvm] Content fun Constant (drawable: LottieDrawable?)","title":"Constant   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/-constant/#constant","text":"[androidJvm] Content fun Constant (drawable: LottieDrawable?)","title":"Constant"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/resolve/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Constant / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Always resolves to drawable , ignoring context .","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-constant/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Always resolves to drawable , ignoring context .","title":"resolve"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Resource Resource [androidJvm] class Resource (@ RawRes () rawResId : Int , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable A wrapper for a LottieDrawable . Optionally provide transformations (such as LottieDrawable.setRepeatCount) to apply each time the LottieDrawable is resolved. Constructors Resource [androidJvm] fun Resource (@ RawRes ()rawResId: Int , transformations: LottieDrawable.( Context ) -> Unit = {}) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve rawResId to a LottieDrawable with the given context .","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/#resource","text":"[androidJvm] class Resource (@ RawRes () rawResId : Int , transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable A wrapper for a LottieDrawable . Optionally provide transformations (such as LottieDrawable.setRepeatCount) to apply each time the LottieDrawable is resolved.","title":"Resource"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/#constructors","text":"Resource [androidJvm] fun Resource (@ RawRes ()rawResId: Int , transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Constructors"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve rawResId to a LottieDrawable with the given context .","title":"Functions"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/-resource/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Resource / Resource Resource [androidJvm] Content fun Resource (@ RawRes ()rawResId: Int , transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Resource   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/-resource/#resource","text":"[androidJvm] Content fun Resource (@ RawRes ()rawResId: Int , transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Resource"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/resolve/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Resource / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve rawResId to a LottieDrawable with the given context . Applies transformations before returning.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-resource/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve rawResId to a LottieDrawable with the given context . Applies transformations before returning.","title":"resolve"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Stream Stream [androidJvm] class Stream ( stream : InputStream , key : String ?, transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable A wrapper for a LottieDrawable provided as a stream object from a remote or local storage location. Optionally provide a cache key so that the stream can be cache-retrieved for consecutive resolve invocations. Optionally provide transformations (such as LottieDrawable.setRepeatCount) to apply each time the LottieDrawable is resolved. Constructors Stream [androidJvm] fun Stream (stream: InputStream , key: String ? = null, transformations: LottieDrawable.( Context ) -> Unit = {}) Functions Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve stream to a LottieDrawable with the given context .","title":"Stream   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/#stream","text":"[androidJvm] class Stream ( stream : InputStream , key : String ?, transformations : LottieDrawable.( Context ) -> Unit ) : DeferredLottieDrawable A wrapper for a LottieDrawable provided as a stream object from a remote or local storage location. Optionally provide a cache key so that the stream can be cache-retrieved for consecutive resolve invocations. Optionally provide transformations (such as LottieDrawable.setRepeatCount) to apply each time the LottieDrawable is resolved.","title":"Stream"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/#constructors","text":"Stream [androidJvm] fun Stream (stream: InputStream , key: String ? = null, transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Constructors"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/#functions","text":"Name Summary resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve stream to a LottieDrawable with the given context .","title":"Functions"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/-stream/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Stream / Stream Stream [androidJvm] Content fun Stream (stream: InputStream , key: String ? = null, transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Stream   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/-stream/#stream","text":"[androidJvm] Content fun Stream (stream: InputStream , key: String ? = null, transformations: LottieDrawable.( Context ) -> Unit = {})","title":"Stream"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/resolve/","text":"// deferred-resources-animation-lottie / com.backbase.deferredresources.animation.lottie / DeferredLottieDrawable / Stream / resolve resolve [androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve stream to a LottieDrawable with the given context . Applies transformations before returning.","title":"resolve   - Deferred Resources"},{"location":"1.x/deferred-resources-animation-lottie/deferred-resources-animation-lottie/com.backbase.deferredresources.animation.lottie/-deferred-lottie-drawable/-stream/resolve/#resolve","text":"[androidJvm] Content open override fun resolve (context: Context ): LottieDrawable? More info Resolve stream to a LottieDrawable with the given context . Applies transformations before returning.","title":"resolve"},{"location":"1.x/deferred-resources-compose-adapter/","text":"// deferred-resources-compose-adapter deferred-resources-compose-adapter Packages Name com.backbase.deferredresources.compose","title":"compose-adapter"},{"location":"1.x/deferred-resources-compose-adapter/#deferred-resources-compose-adapter","text":"","title":"deferred-resources-compose-adapter"},{"location":"1.x/deferred-resources-compose-adapter/#packages","text":"Name com.backbase.deferredresources.compose","title":"Packages"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose Package com.backbase.deferredresources.compose Types Name Summary ExperimentalComposeAdapter [androidJvm] Content annotation class ExperimentalComposeAdapter More info Indicates an experimental API for adapting Deferred Resources to Jetpack Compose. Functions Name Summary rememberResolvedAnnotatedString [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredText: DeferredText ): AnnotatedString More info Resolve deferredText , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredPlurals: DeferredPlurals , quantity: Int ): AnnotatedString More info Resolve deferredPlurals , remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedColor [androidJvm] Content @Composable() fun rememberResolvedColor (deferredColor: DeferredColor ): Color More info Resolve deferredColor , remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedDp [androidJvm] Content @Composable() fun rememberResolvedDp (deferredDimension: DeferredDimension ): Dp More info Resolve deferredDimension to a Dp value, remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedFontFamily [androidJvm] Content @Composable() fun rememberResolvedFontFamily (deferredTypeface: DeferredTypeface ): FontFamily? More info Resolve a deferredTypeface to a Compose FontFamily, remembering the resulting font family instance as long as the current LocalContext and deferredTypeface don't change. rememberResolvedPainter [androidJvm] Content @Composable() fun rememberResolvedPainter (deferredDrawable: DeferredDrawable ): Painter More info Resolve a deferredDrawable into a Compose Painter, remembering the resulting painter as long as the current LocalContext and deferredDrawable don't change. rememberResolvedString [androidJvm] Content @Composable() fun rememberResolvedString (deferredText: DeferredText ): String More info Resolve deferredText to a plain string, remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int ): String More info Resolve deferredFormattedPlurals with the given quantity and using quantity as the only format arg, remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedString: DeferredFormattedString , vararg formatArgs: Any ): String More info Resolve deferredFormattedString with the given formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any ): String More info Resolve deferredFormattedPlurals with the given quantity and formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedValue [androidJvm] Content @Composable() fun rememberResolvedValue (deferredBoolean: DeferredBoolean ): Boolean More info Resolve deferredBoolean , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedValue (deferredInteger: DeferredInteger ): Int More info Resolve deferredInteger , remembering the resulting value as long as the current LocalContext doesn't change.","title":"Package com.backbase.deferredresources.compose   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/#package-combackbasedeferredresourcescompose","text":"","title":"Package com.backbase.deferredresources.compose"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/#types","text":"Name Summary ExperimentalComposeAdapter [androidJvm] Content annotation class ExperimentalComposeAdapter More info Indicates an experimental API for adapting Deferred Resources to Jetpack Compose.","title":"Types"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/#functions","text":"Name Summary rememberResolvedAnnotatedString [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredText: DeferredText ): AnnotatedString More info Resolve deferredText , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredPlurals: DeferredPlurals , quantity: Int ): AnnotatedString More info Resolve deferredPlurals , remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedColor [androidJvm] Content @Composable() fun rememberResolvedColor (deferredColor: DeferredColor ): Color More info Resolve deferredColor , remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedDp [androidJvm] Content @Composable() fun rememberResolvedDp (deferredDimension: DeferredDimension ): Dp More info Resolve deferredDimension to a Dp value, remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedFontFamily [androidJvm] Content @Composable() fun rememberResolvedFontFamily (deferredTypeface: DeferredTypeface ): FontFamily? More info Resolve a deferredTypeface to a Compose FontFamily, remembering the resulting font family instance as long as the current LocalContext and deferredTypeface don't change. rememberResolvedPainter [androidJvm] Content @Composable() fun rememberResolvedPainter (deferredDrawable: DeferredDrawable ): Painter More info Resolve a deferredDrawable into a Compose Painter, remembering the resulting painter as long as the current LocalContext and deferredDrawable don't change. rememberResolvedString [androidJvm] Content @Composable() fun rememberResolvedString (deferredText: DeferredText ): String More info Resolve deferredText to a plain string, remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int ): String More info Resolve deferredFormattedPlurals with the given quantity and using quantity as the only format arg, remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedString: DeferredFormattedString , vararg formatArgs: Any ): String More info Resolve deferredFormattedString with the given formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any ): String More info Resolve deferredFormattedPlurals with the given quantity and formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. rememberResolvedValue [androidJvm] Content @Composable() fun rememberResolvedValue (deferredBoolean: DeferredBoolean ): Boolean More info Resolve deferredBoolean , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedValue (deferredInteger: DeferredInteger ): Int More info Resolve deferredInteger , remembering the resulting value as long as the current LocalContext doesn't change.","title":"Functions"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-annotated-string/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedAnnotatedString rememberResolvedAnnotatedString [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredPlurals: DeferredPlurals , quantity: Int ): AnnotatedString More info Resolve deferredPlurals , remembering the resulting value as long as the current LocalContext doesn't change. Note: Currently, style elements from resource-resolved text are not kept. [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredText: DeferredText ): AnnotatedString More info Resolve deferredText , remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedAnnotatedString   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-annotated-string/#rememberresolvedannotatedstring","text":"[androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredPlurals: DeferredPlurals , quantity: Int ): AnnotatedString More info Resolve deferredPlurals , remembering the resulting value as long as the current LocalContext doesn't change. Note: Currently, style elements from resource-resolved text are not kept. [androidJvm] Content @Composable() fun rememberResolvedAnnotatedString (deferredText: DeferredText ): AnnotatedString More info Resolve deferredText , remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedAnnotatedString"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-color/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedColor rememberResolvedColor [androidJvm] Content @Composable() fun rememberResolvedColor (deferredColor: DeferredColor ): Color More info Resolve deferredColor , remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedColor   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-color/#rememberresolvedcolor","text":"[androidJvm] Content @Composable() fun rememberResolvedColor (deferredColor: DeferredColor ): Color More info Resolve deferredColor , remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedColor"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-dp/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedDp rememberResolvedDp [androidJvm] Content @Composable() fun rememberResolvedDp (deferredDimension: DeferredDimension ): Dp More info Resolve deferredDimension to a Dp value, remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedDp   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-dp/#rememberresolveddp","text":"[androidJvm] Content @Composable() fun rememberResolvedDp (deferredDimension: DeferredDimension ): Dp More info Resolve deferredDimension to a Dp value, remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedDp"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-font-family/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedFontFamily rememberResolvedFontFamily [androidJvm] Content @Composable() fun rememberResolvedFontFamily (deferredTypeface: DeferredTypeface ): FontFamily? More info Resolve a deferredTypeface to a Compose FontFamily, remembering the resulting font family instance as long as the current LocalContext and deferredTypeface don't change. If the given deferredTypeface resolves to a null typeface, returns null.","title":"rememberResolvedFontFamily   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-font-family/#rememberresolvedfontfamily","text":"[androidJvm] Content @Composable() fun rememberResolvedFontFamily (deferredTypeface: DeferredTypeface ): FontFamily? More info Resolve a deferredTypeface to a Compose FontFamily, remembering the resulting font family instance as long as the current LocalContext and deferredTypeface don't change. If the given deferredTypeface resolves to a null typeface, returns null.","title":"rememberResolvedFontFamily"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-painter/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedPainter rememberResolvedPainter [androidJvm] Content @Composable() fun rememberResolvedPainter (deferredDrawable: DeferredDrawable ): Painter More info Resolve a deferredDrawable into a Compose Painter, remembering the resulting painter as long as the current LocalContext and deferredDrawable don't change. Note: If used in the material Icon composable, androidx.compose.ui.graphics.Color.Unspecified must be provided as the tint color in order to retain the original Drawable's tint.","title":"rememberResolvedPainter   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-painter/#rememberresolvedpainter","text":"[androidJvm] Content @Composable() fun rememberResolvedPainter (deferredDrawable: DeferredDrawable ): Painter More info Resolve a deferredDrawable into a Compose Painter, remembering the resulting painter as long as the current LocalContext and deferredDrawable don't change. Note: If used in the material Icon composable, androidx.compose.ui.graphics.Color.Unspecified must be provided as the tint color in order to retain the original Drawable's tint.","title":"rememberResolvedPainter"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-string/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedString rememberResolvedString [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int ): String More info Resolve deferredFormattedPlurals with the given quantity and using quantity as the only format arg, remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any ): String More info Resolve deferredFormattedPlurals with the given quantity and formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedString: DeferredFormattedString , vararg formatArgs: Any ): String More info Resolve deferredFormattedString with the given formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredText: DeferredText ): String More info Resolve deferredText to a plain string, remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedString   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-string/#rememberresolvedstring","text":"[androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int ): String More info Resolve deferredFormattedPlurals with the given quantity and using quantity as the only format arg, remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedPlurals: DeferredFormattedPlurals , quantity: Int , vararg formatArgs: Any ): String More info Resolve deferredFormattedPlurals with the given quantity and formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredFormattedString: DeferredFormattedString , vararg formatArgs: Any ): String More info Resolve deferredFormattedString with the given formatArgs , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedString (deferredText: DeferredText ): String More info Resolve deferredText to a plain string, remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedString"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-value/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / rememberResolvedValue rememberResolvedValue [androidJvm] Content @Composable() fun rememberResolvedValue (deferredBoolean: DeferredBoolean ): Boolean More info Resolve deferredBoolean , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedValue (deferredInteger: DeferredInteger ): Int More info Resolve deferredInteger , remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedValue   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/remember-resolved-value/#rememberresolvedvalue","text":"[androidJvm] Content @Composable() fun rememberResolvedValue (deferredBoolean: DeferredBoolean ): Boolean More info Resolve deferredBoolean , remembering the resulting value as long as the current LocalContext doesn't change. [androidJvm] Content @Composable() fun rememberResolvedValue (deferredInteger: DeferredInteger ): Int More info Resolve deferredInteger , remembering the resulting value as long as the current LocalContext doesn't change.","title":"rememberResolvedValue"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/-experimental-compose-adapter/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / ExperimentalComposeAdapter ExperimentalComposeAdapter [androidJvm] annotation class ExperimentalComposeAdapter Indicates an experimental API for adapting Deferred Resources to Jetpack Compose. Such APIs are likely to break as Compose changes and best practices are iterated upon. Constructors ExperimentalComposeAdapter [androidJvm] fun ExperimentalComposeAdapter ()","title":"ExperimentalComposeAdapter   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/-experimental-compose-adapter/#experimentalcomposeadapter","text":"[androidJvm] annotation class ExperimentalComposeAdapter Indicates an experimental API for adapting Deferred Resources to Jetpack Compose. Such APIs are likely to break as Compose changes and best practices are iterated upon.","title":"ExperimentalComposeAdapter"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/-experimental-compose-adapter/#constructors","text":"ExperimentalComposeAdapter [androidJvm] fun ExperimentalComposeAdapter ()","title":"Constructors"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/-experimental-compose-adapter/-experimental-compose-adapter/","text":"// deferred-resources-compose-adapter / com.backbase.deferredresources.compose / ExperimentalComposeAdapter / ExperimentalComposeAdapter ExperimentalComposeAdapter [androidJvm] Content fun ExperimentalComposeAdapter ()","title":"ExperimentalComposeAdapter   - Deferred Resources"},{"location":"1.x/deferred-resources-compose-adapter/deferred-resources-compose-adapter/com.backbase.deferredresources.compose/-experimental-compose-adapter/-experimental-compose-adapter/#experimentalcomposeadapter","text":"[androidJvm] Content fun ExperimentalComposeAdapter ()","title":"ExperimentalComposeAdapter"},{"location":"1.x/deferred-resources-view-extensions/","text":"// deferred-resources-view-extensions deferred-resources-view-extensions Packages Name com.backbase.deferredresources.viewx","title":"view-extensions"},{"location":"1.x/deferred-resources-view-extensions/#deferred-resources-view-extensions","text":"","title":"deferred-resources-view-extensions"},{"location":"1.x/deferred-resources-view-extensions/#packages","text":"Name com.backbase.deferredresources.viewx","title":"Packages"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx Package com.backbase.deferredresources.viewx Functions Name Summary announceForAccessibility [androidJvm] Content @ RequiresApi (value = 16) fun View . announceForAccessibility (deferredText: DeferredText ) More info Convenience method for sending a android.view.accessibility.AccessibilityEvent.TYPE_ANNOUNCEMENT to suggest that an accessibility service announce the resolved deferredText to its users. offsetLeftAndRight [androidJvm] Content fun View . offsetLeftAndRight (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's horizontal location by the resolved amount. offsetTopAndBottom [androidJvm] Content fun View . offsetTopAndBottom (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's vertical location by the resolved amount. setAccessibilityPaneTitle [androidJvm] Content fun View . setAccessibilityPaneTitle (deferredAccessibilityPaneTitle: DeferredText ?) More info Resolve deferredAccessibilityPaneTitle and set it as the View's accessibility pane title. setAutoSizeTextTypeUniformWithConfiguration [androidJvm] Content fun TextView . setAutoSizeTextTypeUniformWithConfiguration (deferredMinTextSize: DeferredDimension , deferredMaxTextSize: DeferredDimension , deferredStepGranularity: DeferredDimension ) More info Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds. setBackground [androidJvm] Content fun View . setBackground (deferredBackground: DeferredDrawable ) More info Resolve deferredBackground and set the background of the view to the resolved Drawable, or remove the background if the resolved drawable is null. setBackgroundColor [androidJvm] Content fun View . setBackgroundColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the background color for this view. setBackgroundTintList [androidJvm] Content fun View . setBackgroundTintList (deferredTintList: DeferredColor ) More info Resolves deferredTintList and applies the resolved color as a tint to the background drawable. setCameraDistance [androidJvm] Content fun View . setCameraDistance (deferredDistance: DeferredDimension ) More info Resolves deferredDistance and sets the distance along the Z axis from the camera to this view. setColorFilter [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor ) More info Resolve deferredColor and set the resolved color as a tinting option for the image. [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor , mode: PorterDuff.Mode ) More info Resolve deferredColor and set the resolved color as a tinting option for the image and the given blending mode . setContentDescription [androidJvm] Content fun View . setContentDescription (deferredContentDescription: DeferredText ) More info Sets the View's content description to the resolved deferredContentDescription . setElevation [androidJvm] Content fun View . setElevation (deferredElevation: DeferredDimension ) More info Resolves deferredElevation and sets the base elevation of this view. setFadingEdgeLength [androidJvm] Content fun View . setFadingEdgeLength (deferredLength: DeferredDimension ) More info Resolve deferredLength and set the size of the faded edge used to indicate that more content in this view is available. setFirstBaselineToTopHeight [androidJvm] Content fun TextView . setFirstBaselineToTopHeight (deferredFirstBaselineToTopHeight: DeferredDimension ) More info Resolves deferredFirstBaselineToTopHeight and updates the top padding of the TextView so that the resolved height is equal to the distance between the first text baseline and the top of this TextView. setForeground [androidJvm] Content @ RequiresApi (value = 23) fun View . setForeground (deferredForeground: DeferredDrawable ) More info Resolve deferredForeground and supply the resolved Drawable to be rendered on top of all of the content in the view. setForegroundTintList [androidJvm] Content @ RequiresApi (value = 23) fun View . setForegroundTintList (deferredTint: DeferredColor ) More info Resolves deferredTint and applies the resolved color as a tint to the foreground drawable. setHeight [androidJvm] Content fun TextView . setHeight (deferredHeight: DeferredDimension ) More info Resolves deferredHeight and sets the height of the TextView to be exactly that tall. setHint [androidJvm] Content fun TextView . setHint (deferredHint: DeferredText ) More info Resolves deferredHint and sets the text to be displayed when the text of the TextView is empty. setHintTextColor [androidJvm] Content fun TextView . setHintTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the color of the hint text for all the states of this TextView. setImageDrawable [androidJvm] Content fun ImageView . setImageDrawable (deferredDrawable: DeferredDrawable ) More info Resolves deferredDrawable and sets the resolved drawable as the content of this ImageView. setLastBaselineToBottomHeight [androidJvm] Content fun TextView . setLastBaselineToBottomHeight (deferredLastBaselineToBottomHeight: DeferredDimension ) More info Resolves deferredLastBaselineToBottomHeight and updates the bottom padding of the TextView so that the resolved height is equal to the distance between the last text baseline and the bottom of this TextView. setLineHeight [androidJvm] Content fun TextView . setLineHeight (deferredLineHeight: DeferredDimension ) More info Resolves deferredLineHeight and sets an explicit line height for this TextView. setMaxHeight [androidJvm] Content fun TextView . setMaxHeight (deferredMaxHeight: DeferredDimension ) More info Resolves deferredMaxHeight and sets the height of the TextView to be at most that tall. setMaxWidth [androidJvm] Content fun TextView . setMaxWidth (deferredMaxWidth: DeferredDimension ) More info Resolves deferredMaxWidth and sets the width of the TextView to be at most that wide. setMinHeight [androidJvm] Content fun TextView . setMinHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the height of the TextView to be at least that tall. setMinimumHeight [androidJvm] Content fun View . setMinimumHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the minimum height of the view. setMinimumWidth [androidJvm] Content fun View . setMinimumWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the minimum width of the view. setMinWidth [androidJvm] Content fun TextView . setMinWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the width of the TextView to be at least that wide. setPadding [androidJvm] Content fun View . setPadding (deferredLeft: DeferredDimension = DeferredDimension.Constant(paddingLeft), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredRight: DeferredDimension = DeferredDimension.Constant(paddingRight), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredLeft , deferredTop , deferredRight , and deferredBottom and sets the padding. setPaddingRelative [androidJvm] Content fun View . setPaddingRelative (deferredStart: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingStart(this)), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredEnd: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingEnd(this)), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredStart , deferredTop , deferredEnd , and deferredBottom and sets the relative padding. setText [androidJvm] Content fun TextView . setText (deferredText: DeferredText ) More info Resolves deferredText and sets it as the text to be displayed. [androidJvm] Content fun TextView . setText (deferredText: DeferredText , type: TextView.BufferType ) More info Resolves deferredText and sets it as the text to be displayed with the given type . setTextColor [androidJvm] Content fun TextView . setTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the text color for all the states to be the resolved color. setTextSize [androidJvm] Content fun TextView . setTextSize (deferredSize: DeferredDimension ) More info Resolve deferredSize and set the default text size to the resolved value. setTranslationX [androidJvm] Content fun View . setTranslationX (deferredTranslationX: DeferredDimension ) More info Resolves deferredTranslationX and sets the horizontal location of this view relative to its left position. setTranslationY [androidJvm] Content fun View . setTranslationY (deferredTranslationY: DeferredDimension ) More info Resolves deferredTranslationY and sets the vertical location of this view relative to its top position. setTranslationZ [androidJvm] Content fun View . setTranslationZ (deferredTranslationZ: DeferredDimension ) More info Resolves deferredTranslationZ and sets the depth location of this view relative to its elevation . setTypeface [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface ) More info Resolves the deferredTypeface and sets the typeface and style in which the text should be displayed. [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface , style: Int ) More info Resolves the deferredTypeface and sets the typeface along with the style in which the text should be displayed. setWidth [androidJvm] Content fun TextView . setWidth (deferredWidth: DeferredDimension ) More info Resolves deferredWidth and sets the width of the TextView to be exactly that wide. setX [androidJvm] Content fun View . setX (deferredX: DeferredDimension ) More info Resolves deferredX and sets the visual x position of this view. setY [androidJvm] Content fun View . setY (deferredY: DeferredDimension ) More info Resolves deferredY and sets the visual y position of this view. setZ [androidJvm] Content fun View . setZ (deferredZ: DeferredDimension ) More info Resolves deferredZ and sets the visual z position of this view.","title":"Package com.backbase.deferredresources.viewx   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/#package-combackbasedeferredresourcesviewx","text":"","title":"Package com.backbase.deferredresources.viewx"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/#functions","text":"Name Summary announceForAccessibility [androidJvm] Content @ RequiresApi (value = 16) fun View . announceForAccessibility (deferredText: DeferredText ) More info Convenience method for sending a android.view.accessibility.AccessibilityEvent.TYPE_ANNOUNCEMENT to suggest that an accessibility service announce the resolved deferredText to its users. offsetLeftAndRight [androidJvm] Content fun View . offsetLeftAndRight (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's horizontal location by the resolved amount. offsetTopAndBottom [androidJvm] Content fun View . offsetTopAndBottom (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's vertical location by the resolved amount. setAccessibilityPaneTitle [androidJvm] Content fun View . setAccessibilityPaneTitle (deferredAccessibilityPaneTitle: DeferredText ?) More info Resolve deferredAccessibilityPaneTitle and set it as the View's accessibility pane title. setAutoSizeTextTypeUniformWithConfiguration [androidJvm] Content fun TextView . setAutoSizeTextTypeUniformWithConfiguration (deferredMinTextSize: DeferredDimension , deferredMaxTextSize: DeferredDimension , deferredStepGranularity: DeferredDimension ) More info Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds. setBackground [androidJvm] Content fun View . setBackground (deferredBackground: DeferredDrawable ) More info Resolve deferredBackground and set the background of the view to the resolved Drawable, or remove the background if the resolved drawable is null. setBackgroundColor [androidJvm] Content fun View . setBackgroundColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the background color for this view. setBackgroundTintList [androidJvm] Content fun View . setBackgroundTintList (deferredTintList: DeferredColor ) More info Resolves deferredTintList and applies the resolved color as a tint to the background drawable. setCameraDistance [androidJvm] Content fun View . setCameraDistance (deferredDistance: DeferredDimension ) More info Resolves deferredDistance and sets the distance along the Z axis from the camera to this view. setColorFilter [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor ) More info Resolve deferredColor and set the resolved color as a tinting option for the image. [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor , mode: PorterDuff.Mode ) More info Resolve deferredColor and set the resolved color as a tinting option for the image and the given blending mode . setContentDescription [androidJvm] Content fun View . setContentDescription (deferredContentDescription: DeferredText ) More info Sets the View's content description to the resolved deferredContentDescription . setElevation [androidJvm] Content fun View . setElevation (deferredElevation: DeferredDimension ) More info Resolves deferredElevation and sets the base elevation of this view. setFadingEdgeLength [androidJvm] Content fun View . setFadingEdgeLength (deferredLength: DeferredDimension ) More info Resolve deferredLength and set the size of the faded edge used to indicate that more content in this view is available. setFirstBaselineToTopHeight [androidJvm] Content fun TextView . setFirstBaselineToTopHeight (deferredFirstBaselineToTopHeight: DeferredDimension ) More info Resolves deferredFirstBaselineToTopHeight and updates the top padding of the TextView so that the resolved height is equal to the distance between the first text baseline and the top of this TextView. setForeground [androidJvm] Content @ RequiresApi (value = 23) fun View . setForeground (deferredForeground: DeferredDrawable ) More info Resolve deferredForeground and supply the resolved Drawable to be rendered on top of all of the content in the view. setForegroundTintList [androidJvm] Content @ RequiresApi (value = 23) fun View . setForegroundTintList (deferredTint: DeferredColor ) More info Resolves deferredTint and applies the resolved color as a tint to the foreground drawable. setHeight [androidJvm] Content fun TextView . setHeight (deferredHeight: DeferredDimension ) More info Resolves deferredHeight and sets the height of the TextView to be exactly that tall. setHint [androidJvm] Content fun TextView . setHint (deferredHint: DeferredText ) More info Resolves deferredHint and sets the text to be displayed when the text of the TextView is empty. setHintTextColor [androidJvm] Content fun TextView . setHintTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the color of the hint text for all the states of this TextView. setImageDrawable [androidJvm] Content fun ImageView . setImageDrawable (deferredDrawable: DeferredDrawable ) More info Resolves deferredDrawable and sets the resolved drawable as the content of this ImageView. setLastBaselineToBottomHeight [androidJvm] Content fun TextView . setLastBaselineToBottomHeight (deferredLastBaselineToBottomHeight: DeferredDimension ) More info Resolves deferredLastBaselineToBottomHeight and updates the bottom padding of the TextView so that the resolved height is equal to the distance between the last text baseline and the bottom of this TextView. setLineHeight [androidJvm] Content fun TextView . setLineHeight (deferredLineHeight: DeferredDimension ) More info Resolves deferredLineHeight and sets an explicit line height for this TextView. setMaxHeight [androidJvm] Content fun TextView . setMaxHeight (deferredMaxHeight: DeferredDimension ) More info Resolves deferredMaxHeight and sets the height of the TextView to be at most that tall. setMaxWidth [androidJvm] Content fun TextView . setMaxWidth (deferredMaxWidth: DeferredDimension ) More info Resolves deferredMaxWidth and sets the width of the TextView to be at most that wide. setMinHeight [androidJvm] Content fun TextView . setMinHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the height of the TextView to be at least that tall. setMinimumHeight [androidJvm] Content fun View . setMinimumHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the minimum height of the view. setMinimumWidth [androidJvm] Content fun View . setMinimumWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the minimum width of the view. setMinWidth [androidJvm] Content fun TextView . setMinWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the width of the TextView to be at least that wide. setPadding [androidJvm] Content fun View . setPadding (deferredLeft: DeferredDimension = DeferredDimension.Constant(paddingLeft), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredRight: DeferredDimension = DeferredDimension.Constant(paddingRight), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredLeft , deferredTop , deferredRight , and deferredBottom and sets the padding. setPaddingRelative [androidJvm] Content fun View . setPaddingRelative (deferredStart: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingStart(this)), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredEnd: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingEnd(this)), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredStart , deferredTop , deferredEnd , and deferredBottom and sets the relative padding. setText [androidJvm] Content fun TextView . setText (deferredText: DeferredText ) More info Resolves deferredText and sets it as the text to be displayed. [androidJvm] Content fun TextView . setText (deferredText: DeferredText , type: TextView.BufferType ) More info Resolves deferredText and sets it as the text to be displayed with the given type . setTextColor [androidJvm] Content fun TextView . setTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the text color for all the states to be the resolved color. setTextSize [androidJvm] Content fun TextView . setTextSize (deferredSize: DeferredDimension ) More info Resolve deferredSize and set the default text size to the resolved value. setTranslationX [androidJvm] Content fun View . setTranslationX (deferredTranslationX: DeferredDimension ) More info Resolves deferredTranslationX and sets the horizontal location of this view relative to its left position. setTranslationY [androidJvm] Content fun View . setTranslationY (deferredTranslationY: DeferredDimension ) More info Resolves deferredTranslationY and sets the vertical location of this view relative to its top position. setTranslationZ [androidJvm] Content fun View . setTranslationZ (deferredTranslationZ: DeferredDimension ) More info Resolves deferredTranslationZ and sets the depth location of this view relative to its elevation . setTypeface [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface ) More info Resolves the deferredTypeface and sets the typeface and style in which the text should be displayed. [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface , style: Int ) More info Resolves the deferredTypeface and sets the typeface along with the style in which the text should be displayed. setWidth [androidJvm] Content fun TextView . setWidth (deferredWidth: DeferredDimension ) More info Resolves deferredWidth and sets the width of the TextView to be exactly that wide. setX [androidJvm] Content fun View . setX (deferredX: DeferredDimension ) More info Resolves deferredX and sets the visual x position of this view. setY [androidJvm] Content fun View . setY (deferredY: DeferredDimension ) More info Resolves deferredY and sets the visual y position of this view. setZ [androidJvm] Content fun View . setZ (deferredZ: DeferredDimension ) More info Resolves deferredZ and sets the visual z position of this view.","title":"Functions"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/announce-for-accessibility/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / announceForAccessibility announceForAccessibility [androidJvm] Content @ RequiresApi (value = 16) fun View . announceForAccessibility (deferredText: DeferredText ) More info Convenience method for sending a android.view.accessibility.AccessibilityEvent.TYPE_ANNOUNCEMENT to suggest that an accessibility service announce the resolved deferredText to its users. Note: The event generated with this API carries no semantic meaning, and is appropriate only in exceptional situations. Apps can generally achieve correct behavior for accessibility by accurately supplying the semantics of their UI. They should not need to specify what exactly is announced to users.","title":"announceForAccessibility   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/announce-for-accessibility/#announceforaccessibility","text":"[androidJvm] Content @ RequiresApi (value = 16) fun View . announceForAccessibility (deferredText: DeferredText ) More info Convenience method for sending a android.view.accessibility.AccessibilityEvent.TYPE_ANNOUNCEMENT to suggest that an accessibility service announce the resolved deferredText to its users. Note: The event generated with this API carries no semantic meaning, and is appropriate only in exceptional situations. Apps can generally achieve correct behavior for accessibility by accurately supplying the semantics of their UI. They should not need to specify what exactly is announced to users.","title":"announceForAccessibility"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/offset-left-and-right/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / offsetLeftAndRight offsetLeftAndRight [androidJvm] Content fun View . offsetLeftAndRight (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's horizontal location by the resolved amount.","title":"offsetLeftAndRight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/offset-left-and-right/#offsetleftandright","text":"[androidJvm] Content fun View . offsetLeftAndRight (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's horizontal location by the resolved amount.","title":"offsetLeftAndRight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/offset-top-and-bottom/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / offsetTopAndBottom offsetTopAndBottom [androidJvm] Content fun View . offsetTopAndBottom (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's vertical location by the resolved amount.","title":"offsetTopAndBottom   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/offset-top-and-bottom/#offsettopandbottom","text":"[androidJvm] Content fun View . offsetTopAndBottom (deferredOffset: DeferredDimension ) More info Resolve deferredOffset and offset this view's vertical location by the resolved amount.","title":"offsetTopAndBottom"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-accessibility-pane-title/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setAccessibilityPaneTitle setAccessibilityPaneTitle [androidJvm] Content fun View . setAccessibilityPaneTitle (deferredAccessibilityPaneTitle: DeferredText ?) More info Resolve deferredAccessibilityPaneTitle and set it as the View's accessibility pane title. A null deferredAccessibilityPaneTitle indicates that the View is not a pane. Visually distinct portion of a window with window-like semantics are considered panes for accessibility purposes. One example is the content view of a fragment that is replaced. In order for accessibility services to understand a pane's window-like behavior, panes should have descriptive titles. Views with pane titles produce android.view.accessibility.AccessibilityEvent s when they appear, disappear, or change title. This function is a no-op on Android API < 19.","title":"setAccessibilityPaneTitle   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-accessibility-pane-title/#setaccessibilitypanetitle","text":"[androidJvm] Content fun View . setAccessibilityPaneTitle (deferredAccessibilityPaneTitle: DeferredText ?) More info Resolve deferredAccessibilityPaneTitle and set it as the View's accessibility pane title. A null deferredAccessibilityPaneTitle indicates that the View is not a pane. Visually distinct portion of a window with window-like semantics are considered panes for accessibility purposes. One example is the content view of a fragment that is replaced. In order for accessibility services to understand a pane's window-like behavior, panes should have descriptive titles. Views with pane titles produce android.view.accessibility.AccessibilityEvent s when they appear, disappear, or change title. This function is a no-op on Android API < 19.","title":"setAccessibilityPaneTitle"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-auto-size-text-type-uniform-with-configuration/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setAutoSizeTextTypeUniformWithConfiguration setAutoSizeTextTypeUniformWithConfiguration [androidJvm] Content fun TextView . setAutoSizeTextTypeUniformWithConfiguration (deferredMinTextSize: DeferredDimension , deferredMaxTextSize: DeferredDimension , deferredStepGranularity: DeferredDimension ) More info Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds. If the resolved deferredMinTextSize , deferredMaxTextSize , and deferredStepGranularity are valid, the type of auto-size is set to TextViewCompat.AUTO_SIZE_TEXT_TYPE_UNIFORM . Throws java.lang.IllegalArgumentException if any of the configuration params are invalid.","title":"setAutoSizeTextTypeUniformWithConfiguration   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-auto-size-text-type-uniform-with-configuration/#setautosizetexttypeuniformwithconfiguration","text":"[androidJvm] Content fun TextView . setAutoSizeTextTypeUniformWithConfiguration (deferredMinTextSize: DeferredDimension , deferredMaxTextSize: DeferredDimension , deferredStepGranularity: DeferredDimension ) More info Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds. If the resolved deferredMinTextSize , deferredMaxTextSize , and deferredStepGranularity are valid, the type of auto-size is set to TextViewCompat.AUTO_SIZE_TEXT_TYPE_UNIFORM .","title":"setAutoSizeTextTypeUniformWithConfiguration"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-auto-size-text-type-uniform-with-configuration/#throws","text":"java.lang.IllegalArgumentException if any of the configuration params are invalid.","title":"Throws"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-background-color/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setBackgroundColor setBackgroundColor [androidJvm] Content fun View . setBackgroundColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the background color for this view.","title":"setBackgroundColor   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-background-color/#setbackgroundcolor","text":"[androidJvm] Content fun View . setBackgroundColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the background color for this view.","title":"setBackgroundColor"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-background-tint-list/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setBackgroundTintList setBackgroundTintList [androidJvm] Content fun View . setBackgroundTintList (deferredTintList: DeferredColor ) More info Resolves deferredTintList and applies the resolved color as a tint to the background drawable. This will always take effect when running on API v21 or newer. When running on platforms previous to API v21, it will only take effect if the view implements the androidx.core.view.TintableBackgroundView interface.","title":"setBackgroundTintList   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-background-tint-list/#setbackgroundtintlist","text":"[androidJvm] Content fun View . setBackgroundTintList (deferredTintList: DeferredColor ) More info Resolves deferredTintList and applies the resolved color as a tint to the background drawable. This will always take effect when running on API v21 or newer. When running on platforms previous to API v21, it will only take effect if the view implements the androidx.core.view.TintableBackgroundView interface.","title":"setBackgroundTintList"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-background/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setBackground setBackground [androidJvm] Content fun View . setBackground (deferredBackground: DeferredDrawable ) More info Resolve deferredBackground and set the background of the view to the resolved Drawable, or remove the background if the resolved drawable is null. If the background has padding, the view's padding is set to the resolved background's padding. However, when a background is removed, this View's padding isn't touched. If setting the padding is desired, please use View.setPadding .","title":"setBackground   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-background/#setbackground","text":"[androidJvm] Content fun View . setBackground (deferredBackground: DeferredDrawable ) More info Resolve deferredBackground and set the background of the view to the resolved Drawable, or remove the background if the resolved drawable is null. If the background has padding, the view's padding is set to the resolved background's padding. However, when a background is removed, this View's padding isn't touched. If setting the padding is desired, please use View.setPadding .","title":"setBackground"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-camera-distance/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setCameraDistance setCameraDistance [androidJvm] Content fun View . setCameraDistance (deferredDistance: DeferredDimension ) More info Resolves deferredDistance and sets the distance along the Z axis from the camera to this view. See also androidJvm android.view.View","title":"setCameraDistance   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-camera-distance/#setcameradistance","text":"[androidJvm] Content fun View . setCameraDistance (deferredDistance: DeferredDimension ) More info Resolves deferredDistance and sets the distance along the Z axis from the camera to this view.","title":"setCameraDistance"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-camera-distance/#see-also","text":"androidJvm android.view.View","title":"See also"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-color-filter/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setColorFilter setColorFilter [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor ) More info Resolve deferredColor and set the resolved color as a tinting option for the image. Assumes PorterDuff.Mode.SRC_ATOP blending mode. [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor , mode: PorterDuff.Mode ) More info Resolve deferredColor and set the resolved color as a tinting option for the image and the given blending mode .","title":"setColorFilter   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-color-filter/#setcolorfilter","text":"[androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor ) More info Resolve deferredColor and set the resolved color as a tinting option for the image. Assumes PorterDuff.Mode.SRC_ATOP blending mode. [androidJvm] Content fun ImageView . setColorFilter (deferredColor: DeferredColor , mode: PorterDuff.Mode ) More info Resolve deferredColor and set the resolved color as a tinting option for the image and the given blending mode .","title":"setColorFilter"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-content-description/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setContentDescription setContentDescription [androidJvm] Content fun View . setContentDescription (deferredContentDescription: DeferredText ) More info Sets the View's content description to the resolved deferredContentDescription . A content description briefly describes the view and is primarily used for accessibility support to determine how a view should be presented to the user. In the case of a view with no textual representation, a useful content description explains what the view does. For example, an image button with a phone icon that is used to place a call may use \"Call\" as its content description. An image of a floppy disk that is used to save a file may use \"Save\".","title":"setContentDescription   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-content-description/#setcontentdescription","text":"[androidJvm] Content fun View . setContentDescription (deferredContentDescription: DeferredText ) More info Sets the View's content description to the resolved deferredContentDescription . A content description briefly describes the view and is primarily used for accessibility support to determine how a view should be presented to the user. In the case of a view with no textual representation, a useful content description explains what the view does. For example, an image button with a phone icon that is used to place a call may use \"Call\" as its content description. An image of a floppy disk that is used to save a file may use \"Save\".","title":"setContentDescription"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-elevation/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setElevation setElevation [androidJvm] Content fun View . setElevation (deferredElevation: DeferredDimension ) More info Resolves deferredElevation and sets the base elevation of this view.","title":"setElevation   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-elevation/#setelevation","text":"[androidJvm] Content fun View . setElevation (deferredElevation: DeferredDimension ) More info Resolves deferredElevation and sets the base elevation of this view.","title":"setElevation"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-fading-edge-length/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setFadingEdgeLength setFadingEdgeLength [androidJvm] Content fun View . setFadingEdgeLength (deferredLength: DeferredDimension ) More info Resolve deferredLength and set the size of the faded edge used to indicate that more content in this view is available. Will not change whether the fading edge is enabled; use View.setVerticalFadingEdgeEnabled or View.setHorizontalFadingEdgeEnabled to enable the fading edge for the vertical or horizontal fading edges.","title":"setFadingEdgeLength   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-fading-edge-length/#setfadingedgelength","text":"[androidJvm] Content fun View . setFadingEdgeLength (deferredLength: DeferredDimension ) More info Resolve deferredLength and set the size of the faded edge used to indicate that more content in this view is available. Will not change whether the fading edge is enabled; use View.setVerticalFadingEdgeEnabled or View.setHorizontalFadingEdgeEnabled to enable the fading edge for the vertical or horizontal fading edges.","title":"setFadingEdgeLength"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-first-baseline-to-top-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setFirstBaselineToTopHeight setFirstBaselineToTopHeight [androidJvm] Content fun TextView . setFirstBaselineToTopHeight (deferredFirstBaselineToTopHeight: DeferredDimension ) More info Resolves deferredFirstBaselineToTopHeight and updates the top padding of the TextView so that the resolved height is equal to the distance between the first text baseline and the top of this TextView. Note: If FontMetrics.top or FontMetrics.ascent was already greater than the resolved height, the top padding is not updated.","title":"setFirstBaselineToTopHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-first-baseline-to-top-height/#setfirstbaselinetotopheight","text":"[androidJvm] Content fun TextView . setFirstBaselineToTopHeight (deferredFirstBaselineToTopHeight: DeferredDimension ) More info Resolves deferredFirstBaselineToTopHeight and updates the top padding of the TextView so that the resolved height is equal to the distance between the first text baseline and the top of this TextView. Note: If FontMetrics.top or FontMetrics.ascent was already greater than the resolved height, the top padding is not updated.","title":"setFirstBaselineToTopHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-foreground-tint-list/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setForegroundTintList setForegroundTintList [androidJvm] Content @ RequiresApi (value = 23) fun View . setForegroundTintList (deferredTint: DeferredColor ) More info Resolves deferredTint and applies the resolved color as a tint to the foreground drawable. Does not modify the current tint mode, which is android.graphics.PorterDuff.Mode.SRC_IN by default. Subsequent calls to setForeground will automatically mutate the resolved drawable and apply the specified tint and tint mode using android.graphics.drawable.Drawable.setTintList .","title":"setForegroundTintList   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-foreground-tint-list/#setforegroundtintlist","text":"[androidJvm] Content @ RequiresApi (value = 23) fun View . setForegroundTintList (deferredTint: DeferredColor ) More info Resolves deferredTint and applies the resolved color as a tint to the foreground drawable. Does not modify the current tint mode, which is android.graphics.PorterDuff.Mode.SRC_IN by default. Subsequent calls to setForeground will automatically mutate the resolved drawable and apply the specified tint and tint mode using android.graphics.drawable.Drawable.setTintList .","title":"setForegroundTintList"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-foreground/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setForeground setForeground [androidJvm] Content @ RequiresApi (value = 23) fun View . setForeground (deferredForeground: DeferredDrawable ) More info Resolve deferredForeground and supply the resolved Drawable to be rendered on top of all of the content in the view.","title":"setForeground   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-foreground/#setforeground","text":"[androidJvm] Content @ RequiresApi (value = 23) fun View . setForeground (deferredForeground: DeferredDrawable ) More info Resolve deferredForeground and supply the resolved Drawable to be rendered on top of all of the content in the view.","title":"setForeground"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setHeight setHeight [androidJvm] Content fun TextView . setHeight (deferredHeight: DeferredDimension ) More info Resolves deferredHeight and sets the height of the TextView to be exactly that tall. This value is used for height calculation if LayoutParams does not force TextView to have an exact height. Setting this value overrides previous minimum/maximum height configurations such as setMinHeight or setMaxHeight .","title":"setHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-height/#setheight","text":"[androidJvm] Content fun TextView . setHeight (deferredHeight: DeferredDimension ) More info Resolves deferredHeight and sets the height of the TextView to be exactly that tall. This value is used for height calculation if LayoutParams does not force TextView to have an exact height. Setting this value overrides previous minimum/maximum height configurations such as setMinHeight or setMaxHeight .","title":"setHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-hint-text-color/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setHintTextColor setHintTextColor [androidJvm] Content fun TextView . setHintTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the color of the hint text for all the states of this TextView.","title":"setHintTextColor   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-hint-text-color/#sethinttextcolor","text":"[androidJvm] Content fun TextView . setHintTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the color of the hint text for all the states of this TextView.","title":"setHintTextColor"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-hint/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setHint setHint [androidJvm] Content fun TextView . setHint (deferredHint: DeferredText ) More info Resolves deferredHint and sets the text to be displayed when the text of the TextView is empty.","title":"setHint   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-hint/#sethint","text":"[androidJvm] Content fun TextView . setHint (deferredHint: DeferredText ) More info Resolves deferredHint and sets the text to be displayed when the text of the TextView is empty.","title":"setHint"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-image-drawable/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setImageDrawable setImageDrawable [androidJvm] Content fun ImageView . setImageDrawable (deferredDrawable: DeferredDrawable ) More info Resolves deferredDrawable and sets the resolved drawable as the content of this ImageView.","title":"setImageDrawable   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-image-drawable/#setimagedrawable","text":"[androidJvm] Content fun ImageView . setImageDrawable (deferredDrawable: DeferredDrawable ) More info Resolves deferredDrawable and sets the resolved drawable as the content of this ImageView.","title":"setImageDrawable"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-last-baseline-to-bottom-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setLastBaselineToBottomHeight setLastBaselineToBottomHeight [androidJvm] Content fun TextView . setLastBaselineToBottomHeight (deferredLastBaselineToBottomHeight: DeferredDimension ) More info Resolves deferredLastBaselineToBottomHeight and updates the bottom padding of the TextView so that the resolved height is equal to the distance between the last text baseline and the bottom of this TextView. Note: If FontMetrics.bottom or FontMetrics.descent was already greater than the resolved height, the bottom padding is not updated.","title":"setLastBaselineToBottomHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-last-baseline-to-bottom-height/#setlastbaselinetobottomheight","text":"[androidJvm] Content fun TextView . setLastBaselineToBottomHeight (deferredLastBaselineToBottomHeight: DeferredDimension ) More info Resolves deferredLastBaselineToBottomHeight and updates the bottom padding of the TextView so that the resolved height is equal to the distance between the last text baseline and the bottom of this TextView. Note: If FontMetrics.bottom or FontMetrics.descent was already greater than the resolved height, the bottom padding is not updated.","title":"setLastBaselineToBottomHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-line-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setLineHeight setLineHeight [androidJvm] Content fun TextView . setLineHeight (deferredLineHeight: DeferredDimension ) More info Resolves deferredLineHeight and sets an explicit line height for this TextView. This is equivalent to the vertical distance between subsequent baselines in the TextView.","title":"setLineHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-line-height/#setlineheight","text":"[androidJvm] Content fun TextView . setLineHeight (deferredLineHeight: DeferredDimension ) More info Resolves deferredLineHeight and sets an explicit line height for this TextView. This is equivalent to the vertical distance between subsequent baselines in the TextView.","title":"setLineHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-max-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setMaxHeight setMaxHeight [androidJvm] Content fun TextView . setMaxHeight (deferredMaxHeight: DeferredDimension ) More info Resolves deferredMaxHeight and sets the height of the TextView to be at most that tall. This value is used for height calculation if LayoutParams does not force TextView to have an exact height. Setting this value overrides previous maximum height configurations such as TextView.setMaxLines or TextView.setLines .","title":"setMaxHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-max-height/#setmaxheight","text":"[androidJvm] Content fun TextView . setMaxHeight (deferredMaxHeight: DeferredDimension ) More info Resolves deferredMaxHeight and sets the height of the TextView to be at most that tall. This value is used for height calculation if LayoutParams does not force TextView to have an exact height. Setting this value overrides previous maximum height configurations such as TextView.setMaxLines or TextView.setLines .","title":"setMaxHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-max-width/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setMaxWidth setMaxWidth [androidJvm] Content fun TextView . setMaxWidth (deferredMaxWidth: DeferredDimension ) More info Resolves deferredMaxWidth and sets the width of the TextView to be at most that wide. This value is used for width calculation if LayoutParams does not force TextView to have an exact width. Setting this value overrides previous maximum width configurations such as TextView.setMaxEms or TextView.setEms .","title":"setMaxWidth   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-max-width/#setmaxwidth","text":"[androidJvm] Content fun TextView . setMaxWidth (deferredMaxWidth: DeferredDimension ) More info Resolves deferredMaxWidth and sets the width of the TextView to be at most that wide. This value is used for width calculation if LayoutParams does not force TextView to have an exact width. Setting this value overrides previous maximum width configurations such as TextView.setMaxEms or TextView.setEms .","title":"setMaxWidth"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-min-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setMinHeight setMinHeight [androidJvm] Content fun TextView . setMinHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the height of the TextView to be at least that tall. This value is used for height calculation if LayoutParams does not force TextView to have an exact height. Setting this value overrides previous minimum height configurations such as TextView.setMinLines or TextView.setLines . The value given here is different than setMinimumHeight . Between this and the value set in setMinimumHeight , the greater one is used to decide the final height.","title":"setMinHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-min-height/#setminheight","text":"[androidJvm] Content fun TextView . setMinHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the height of the TextView to be at least that tall. This value is used for height calculation if LayoutParams does not force TextView to have an exact height. Setting this value overrides previous minimum height configurations such as TextView.setMinLines or TextView.setLines . The value given here is different than setMinimumHeight . Between this and the value set in setMinimumHeight , the greater one is used to decide the final height.","title":"setMinHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-min-width/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setMinWidth setMinWidth [androidJvm] Content fun TextView . setMinWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the width of the TextView to be at least that wide. This value is used for width calculation if LayoutParams does not force TextView to have an exact width. Setting this value overrides previous minimum width configurations such as TextView.setMinEms or TextView.setEms . The value given here is different than setMinimumWidth . Between this and the value set in setMinimumWidth , the greater one is used to decide the final width.","title":"setMinWidth   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-min-width/#setminwidth","text":"[androidJvm] Content fun TextView . setMinWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the width of the TextView to be at least that wide. This value is used for width calculation if LayoutParams does not force TextView to have an exact width. Setting this value overrides previous minimum width configurations such as TextView.setMinEms or TextView.setEms . The value given here is different than setMinimumWidth . Between this and the value set in setMinimumWidth , the greater one is used to decide the final width.","title":"setMinWidth"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-minimum-height/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setMinimumHeight setMinimumHeight [androidJvm] Content fun View . setMinimumHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the minimum height of the view. It is not guaranteed the view will be able to achieve this minimum height (for example, if its parent layout constrains it with less available height).","title":"setMinimumHeight   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-minimum-height/#setminimumheight","text":"[androidJvm] Content fun View . setMinimumHeight (deferredMinHeight: DeferredDimension ) More info Resolves deferredMinHeight and sets the minimum height of the view. It is not guaranteed the view will be able to achieve this minimum height (for example, if its parent layout constrains it with less available height).","title":"setMinimumHeight"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-minimum-width/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setMinimumWidth setMinimumWidth [androidJvm] Content fun View . setMinimumWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the minimum width of the view. It is not guaranteed the view will be able to achieve this minimum width (for example, if its parent layout constrains it with less available width).","title":"setMinimumWidth   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-minimum-width/#setminimumwidth","text":"[androidJvm] Content fun View . setMinimumWidth (deferredMinWidth: DeferredDimension ) More info Resolves deferredMinWidth and sets the minimum width of the view. It is not guaranteed the view will be able to achieve this minimum width (for example, if its parent layout constrains it with less available width).","title":"setMinimumWidth"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-padding-relative/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setPaddingRelative setPaddingRelative [androidJvm] Content fun View . setPaddingRelative (deferredStart: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingStart(this)), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredEnd: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingEnd(this)), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredStart , deferredTop , deferredEnd , and deferredBottom and sets the relative padding.","title":"setPaddingRelative   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-padding-relative/#setpaddingrelative","text":"[androidJvm] Content fun View . setPaddingRelative (deferredStart: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingStart(this)), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredEnd: DeferredDimension = DeferredDimension.Constant(ViewCompat.getPaddingEnd(this)), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredStart , deferredTop , deferredEnd , and deferredBottom and sets the relative padding.","title":"setPaddingRelative"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-padding/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setPadding setPadding [androidJvm] Content fun View . setPadding (deferredLeft: DeferredDimension = DeferredDimension.Constant(paddingLeft), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredRight: DeferredDimension = DeferredDimension.Constant(paddingRight), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredLeft , deferredTop , deferredRight , and deferredBottom and sets the padding.","title":"setPadding   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-padding/#setpadding","text":"[androidJvm] Content fun View . setPadding (deferredLeft: DeferredDimension = DeferredDimension.Constant(paddingLeft), deferredTop: DeferredDimension = DeferredDimension.Constant(paddingTop), deferredRight: DeferredDimension = DeferredDimension.Constant(paddingRight), deferredBottom: DeferredDimension = DeferredDimension.Constant(paddingBottom)) More info Resolves each of deferredLeft , deferredTop , deferredRight , and deferredBottom and sets the padding.","title":"setPadding"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-text-color/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setTextColor setTextColor [androidJvm] Content fun TextView . setTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the text color for all the states to be the resolved color.","title":"setTextColor   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-text-color/#settextcolor","text":"[androidJvm] Content fun TextView . setTextColor (deferredColor: DeferredColor ) More info Resolves deferredColor and sets the text color for all the states to be the resolved color.","title":"setTextColor"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-text-size/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setTextSize setTextSize [androidJvm] Content fun TextView . setTextSize (deferredSize: DeferredDimension ) More info Resolve deferredSize and set the default text size to the resolved value. Note: if this TextView has the auto-size feature enabled than this function is no-op.","title":"setTextSize   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-text-size/#settextsize","text":"[androidJvm] Content fun TextView . setTextSize (deferredSize: DeferredDimension ) More info Resolve deferredSize and set the default text size to the resolved value. Note: if this TextView has the auto-size feature enabled than this function is no-op.","title":"setTextSize"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-text/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setText setText [androidJvm] Content fun TextView . setText (deferredText: DeferredText ) More info Resolves deferredText and sets it as the text to be displayed. [androidJvm] Content fun TextView . setText (deferredText: DeferredText , type: TextView.BufferType ) More info Resolves deferredText and sets it as the text to be displayed with the given type .","title":"setText   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-text/#settext","text":"[androidJvm] Content fun TextView . setText (deferredText: DeferredText ) More info Resolves deferredText and sets it as the text to be displayed. [androidJvm] Content fun TextView . setText (deferredText: DeferredText , type: TextView.BufferType ) More info Resolves deferredText and sets it as the text to be displayed with the given type .","title":"setText"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-translation-x/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setTranslationX setTranslationX [androidJvm] Content fun View . setTranslationX (deferredTranslationX: DeferredDimension ) More info Resolves deferredTranslationX and sets the horizontal location of this view relative to its left position. This effectively positions the object post-layout, in addition to wherever the object's layout placed it.","title":"setTranslationX   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-translation-x/#settranslationx","text":"[androidJvm] Content fun View . setTranslationX (deferredTranslationX: DeferredDimension ) More info Resolves deferredTranslationX and sets the horizontal location of this view relative to its left position. This effectively positions the object post-layout, in addition to wherever the object's layout placed it.","title":"setTranslationX"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-translation-y/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setTranslationY setTranslationY [androidJvm] Content fun View . setTranslationY (deferredTranslationY: DeferredDimension ) More info Resolves deferredTranslationY and sets the vertical location of this view relative to its top position. This effectively positions the object post-layout, in addition to wherever the object's layout placed it.","title":"setTranslationY   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-translation-y/#settranslationy","text":"[androidJvm] Content fun View . setTranslationY (deferredTranslationY: DeferredDimension ) More info Resolves deferredTranslationY and sets the vertical location of this view relative to its top position. This effectively positions the object post-layout, in addition to wherever the object's layout placed it.","title":"setTranslationY"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-translation-z/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setTranslationZ setTranslationZ [androidJvm] Content fun View . setTranslationZ (deferredTranslationZ: DeferredDimension ) More info Resolves deferredTranslationZ and sets the depth location of this view relative to its elevation .","title":"setTranslationZ   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-translation-z/#settranslationz","text":"[androidJvm] Content fun View . setTranslationZ (deferredTranslationZ: DeferredDimension ) More info Resolves deferredTranslationZ and sets the depth location of this view relative to its elevation .","title":"setTranslationZ"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-typeface/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setTypeface setTypeface [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface ) More info Resolves the deferredTypeface and sets the typeface and style in which the text should be displayed. Note that not all Typeface families actually have bold and italic variants, so you may need to use setTypeface with an explicit style to get the desired appearance. [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface , style: Int ) More info Resolves the deferredTypeface and sets the typeface along with the style in which the text should be displayed. Turns on the fake bold and italic bits in the Paint if the resolved Typeface does not have all the bits in the specified style .","title":"setTypeface   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-typeface/#settypeface","text":"[androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface ) More info Resolves the deferredTypeface and sets the typeface and style in which the text should be displayed. Note that not all Typeface families actually have bold and italic variants, so you may need to use setTypeface with an explicit style to get the desired appearance. [androidJvm] Content fun TextView . setTypeface (deferredTypeface: DeferredTypeface , style: Int ) More info Resolves the deferredTypeface and sets the typeface along with the style in which the text should be displayed. Turns on the fake bold and italic bits in the Paint if the resolved Typeface does not have all the bits in the specified style .","title":"setTypeface"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-width/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setWidth setWidth [androidJvm] Content fun TextView . setWidth (deferredWidth: DeferredDimension ) More info Resolves deferredWidth and sets the width of the TextView to be exactly that wide. This value is used for width calculation if LayoutParams does not force TextView to have an exact width. Setting this value overrides previous minimum/maximum width configurations such as setMinWidth or setMaxWidth .","title":"setWidth   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-width/#setwidth","text":"[androidJvm] Content fun TextView . setWidth (deferredWidth: DeferredDimension ) More info Resolves deferredWidth and sets the width of the TextView to be exactly that wide. This value is used for width calculation if LayoutParams does not force TextView to have an exact width. Setting this value overrides previous minimum/maximum width configurations such as setMinWidth or setMaxWidth .","title":"setWidth"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-x/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setX setX [androidJvm] Content fun View . setX (deferredX: DeferredDimension ) More info Resolves deferredX and sets the visual x position of this view. This is equivalent to setting the translationX property to be the difference between the x value passed in and the current left property.","title":"setX   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-x/#setx","text":"[androidJvm] Content fun View . setX (deferredX: DeferredDimension ) More info Resolves deferredX and sets the visual x position of this view. This is equivalent to setting the translationX property to be the difference between the x value passed in and the current left property.","title":"setX"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-y/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setY setY [androidJvm] Content fun View . setY (deferredY: DeferredDimension ) More info Resolves deferredY and sets the visual y position of this view. This is equivalent to setting the translationY property to be the difference between the y value passed in and the current top property.","title":"setY   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-y/#sety","text":"[androidJvm] Content fun View . setY (deferredY: DeferredDimension ) More info Resolves deferredY and sets the visual y position of this view. This is equivalent to setting the translationY property to be the difference between the y value passed in and the current top property.","title":"setY"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-z/","text":"// deferred-resources-view-extensions / com.backbase.deferredresources.viewx / setZ setZ [androidJvm] Content fun View . setZ (deferredZ: DeferredDimension ) More info Resolves deferredZ and sets the visual z position of this view. This is equivalent to setting the translationZ property to be the difference between the z value passed in and the current elevation property. On API < 21, this is a no-op.","title":"setZ   - Deferred Resources"},{"location":"1.x/deferred-resources-view-extensions/deferred-resources-view-extensions/com.backbase.deferredresources.viewx/set-z/#setz","text":"[androidJvm] Content fun View . setZ (deferredZ: DeferredDimension ) More info Resolves deferredZ and sets the visual z position of this view. This is equivalent to setting the translationZ property to be the difference between the z value passed in and the current elevation property. On API < 21, this is a no-op.","title":"setZ"}]}